// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="adc_to_opfb,hls_ip_2019_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=1.818000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=1.361000,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3016,HLS_SYN_LUT=6999,HLS_VERSION=2019_2_1}" *)

module adc_to_opfb (
        istream_data_TDATA,
        qstream_data_TDATA,
        lane_data_0_TDATA,
        lane_data_1_TDATA,
        lane_data_2_TDATA,
        lane_data_3_TDATA,
        lane_data_4_TDATA,
        lane_data_5_TDATA,
        lane_data_6_TDATA,
        lane_data_7_TDATA,
        lane_data_8_TDATA,
        lane_data_9_TDATA,
        lane_data_10_TDATA,
        lane_data_11_TDATA,
        lane_data_12_TDATA,
        lane_data_13_TDATA,
        lane_data_14_TDATA,
        lane_data_15_TDATA,
        ap_clk,
        ap_rst_n,
        istream_data_TVALID,
        istream_data_TREADY,
        qstream_data_TVALID,
        qstream_data_TREADY,
        lane_data_0_TVALID,
        lane_data_0_TREADY,
        lane_data_1_TVALID,
        lane_data_1_TREADY,
        lane_data_2_TVALID,
        lane_data_2_TREADY,
        lane_data_3_TVALID,
        lane_data_3_TREADY,
        lane_data_4_TVALID,
        lane_data_4_TREADY,
        lane_data_5_TVALID,
        lane_data_5_TREADY,
        lane_data_6_TVALID,
        lane_data_6_TREADY,
        lane_data_7_TVALID,
        lane_data_7_TREADY,
        lane_data_8_TVALID,
        lane_data_8_TREADY,
        lane_data_9_TVALID,
        lane_data_9_TREADY,
        lane_data_10_TVALID,
        lane_data_10_TREADY,
        lane_data_11_TVALID,
        lane_data_11_TREADY,
        lane_data_12_TVALID,
        lane_data_12_TREADY,
        lane_data_13_TVALID,
        lane_data_13_TREADY,
        lane_data_14_TVALID,
        lane_data_14_TREADY,
        lane_data_15_TVALID,
        lane_data_15_TREADY
);


input  [127:0] istream_data_TDATA;
input  [127:0] qstream_data_TDATA;
output  [31:0] lane_data_0_TDATA;
output  [31:0] lane_data_1_TDATA;
output  [31:0] lane_data_2_TDATA;
output  [31:0] lane_data_3_TDATA;
output  [31:0] lane_data_4_TDATA;
output  [31:0] lane_data_5_TDATA;
output  [31:0] lane_data_6_TDATA;
output  [31:0] lane_data_7_TDATA;
output  [31:0] lane_data_8_TDATA;
output  [31:0] lane_data_9_TDATA;
output  [31:0] lane_data_10_TDATA;
output  [31:0] lane_data_11_TDATA;
output  [31:0] lane_data_12_TDATA;
output  [31:0] lane_data_13_TDATA;
output  [31:0] lane_data_14_TDATA;
output  [31:0] lane_data_15_TDATA;
input   ap_clk;
input   ap_rst_n;
input   istream_data_TVALID;
output   istream_data_TREADY;
input   qstream_data_TVALID;
output   qstream_data_TREADY;
output   lane_data_0_TVALID;
input   lane_data_0_TREADY;
output   lane_data_1_TVALID;
input   lane_data_1_TREADY;
output   lane_data_2_TVALID;
input   lane_data_2_TREADY;
output   lane_data_3_TVALID;
input   lane_data_3_TREADY;
output   lane_data_4_TVALID;
input   lane_data_4_TREADY;
output   lane_data_5_TVALID;
input   lane_data_5_TREADY;
output   lane_data_6_TVALID;
input   lane_data_6_TREADY;
output   lane_data_7_TVALID;
input   lane_data_7_TREADY;
output   lane_data_8_TVALID;
input   lane_data_8_TREADY;
output   lane_data_9_TVALID;
input   lane_data_9_TREADY;
output   lane_data_10_TVALID;
input   lane_data_10_TREADY;
output   lane_data_11_TVALID;
input   lane_data_11_TREADY;
output   lane_data_12_TVALID;
input   lane_data_12_TREADY;
output   lane_data_13_TVALID;
input   lane_data_13_TREADY;
output   lane_data_14_TVALID;
input   lane_data_14_TREADY;
output   lane_data_15_TVALID;
input   lane_data_15_TREADY;

 reg    ap_rst_n_inv;
wire    Block_codeRepl5_proc_U0_ap_start;
wire    Block_codeRepl5_proc_U0_ap_done;
wire    Block_codeRepl5_proc_U0_ap_continue;
wire    Block_codeRepl5_proc_U0_ap_idle;
wire    Block_codeRepl5_proc_U0_ap_ready;
wire    Block_codeRepl5_proc_U0_istream_data_TREADY;
wire    Block_codeRepl5_proc_U0_qstream_data_TREADY;
wire   [15:0] Block_codeRepl5_proc_U0_ap_return_0;
wire   [15:0] Block_codeRepl5_proc_U0_ap_return_1;
wire   [15:0] Block_codeRepl5_proc_U0_ap_return_2;
wire   [15:0] Block_codeRepl5_proc_U0_ap_return_3;
wire   [15:0] Block_codeRepl5_proc_U0_ap_return_4;
wire   [15:0] Block_codeRepl5_proc_U0_ap_return_5;
wire   [15:0] Block_codeRepl5_proc_U0_ap_return_6;
wire   [15:0] Block_codeRepl5_proc_U0_ap_return_7;
wire   [15:0] Block_codeRepl5_proc_U0_ap_return_8;
wire   [15:0] Block_codeRepl5_proc_U0_ap_return_9;
wire   [15:0] Block_codeRepl5_proc_U0_ap_return_10;
wire   [15:0] Block_codeRepl5_proc_U0_ap_return_11;
wire   [15:0] Block_codeRepl5_proc_U0_ap_return_12;
wire   [15:0] Block_codeRepl5_proc_U0_ap_return_13;
wire   [15:0] Block_codeRepl5_proc_U0_ap_return_14;
wire   [15:0] Block_codeRepl5_proc_U0_ap_return_15;
wire    ap_channel_done_p_741_channel;
wire    p_741_channel_full_n;
reg    ap_sync_reg_channel_write_p_741_channel;
wire    ap_sync_channel_write_p_741_channel;
wire    ap_channel_done_p_640_channel;
wire    p_640_channel_full_n;
reg    ap_sync_reg_channel_write_p_640_channel;
wire    ap_sync_channel_write_p_640_channel;
wire    ap_channel_done_p_539_channel;
wire    p_539_channel_full_n;
reg    ap_sync_reg_channel_write_p_539_channel;
wire    ap_sync_channel_write_p_539_channel;
wire    ap_channel_done_p_438_channel;
wire    p_438_channel_full_n;
reg    ap_sync_reg_channel_write_p_438_channel;
wire    ap_sync_channel_write_p_438_channel;
wire    ap_channel_done_p_337_channel;
wire    p_337_channel_full_n;
reg    ap_sync_reg_channel_write_p_337_channel;
wire    ap_sync_channel_write_p_337_channel;
wire    ap_channel_done_p_236_channel;
wire    p_236_channel_full_n;
reg    ap_sync_reg_channel_write_p_236_channel;
wire    ap_sync_channel_write_p_236_channel;
wire    ap_channel_done_p_135_channel;
wire    p_135_channel_full_n;
reg    ap_sync_reg_channel_write_p_135_channel;
wire    ap_sync_channel_write_p_135_channel;
wire    ap_channel_done_p_034_channel;
wire    p_034_channel_full_n;
reg    ap_sync_reg_channel_write_p_034_channel;
wire    ap_sync_channel_write_p_034_channel;
wire    ap_channel_done_p_7_channel;
wire    p_7_channel_full_n;
reg    ap_sync_reg_channel_write_p_7_channel;
wire    ap_sync_channel_write_p_7_channel;
wire    ap_channel_done_p_6_channel;
wire    p_6_channel_full_n;
reg    ap_sync_reg_channel_write_p_6_channel;
wire    ap_sync_channel_write_p_6_channel;
wire    ap_channel_done_p_5_channel;
wire    p_5_channel_full_n;
reg    ap_sync_reg_channel_write_p_5_channel;
wire    ap_sync_channel_write_p_5_channel;
wire    ap_channel_done_p_4_channel;
wire    p_4_channel_full_n;
reg    ap_sync_reg_channel_write_p_4_channel;
wire    ap_sync_channel_write_p_4_channel;
wire    ap_channel_done_p_3_channel;
wire    p_3_channel_full_n;
reg    ap_sync_reg_channel_write_p_3_channel;
wire    ap_sync_channel_write_p_3_channel;
wire    ap_channel_done_p_2_channel;
wire    p_2_channel_full_n;
reg    ap_sync_reg_channel_write_p_2_channel;
wire    ap_sync_channel_write_p_2_channel;
wire    ap_channel_done_p_1_channel;
wire    p_1_channel_full_n;
reg    ap_sync_reg_channel_write_p_1_channel;
wire    ap_sync_channel_write_p_1_channel;
wire    ap_channel_done_p_0_channel;
wire    p_0_channel_full_n;
reg    ap_sync_reg_channel_write_p_0_channel;
wire    ap_sync_channel_write_p_0_channel;
wire    adc2iq_U0_ap_start;
wire    adc2iq_U0_ap_done;
wire    adc2iq_U0_ap_continue;
wire    adc2iq_U0_ap_idle;
wire    adc2iq_U0_ap_ready;
wire   [15:0] adc2iq_U0_ap_return_0;
wire   [15:0] adc2iq_U0_ap_return_1;
wire   [15:0] adc2iq_U0_ap_return_2;
wire   [15:0] adc2iq_U0_ap_return_3;
wire   [15:0] adc2iq_U0_ap_return_4;
wire   [15:0] adc2iq_U0_ap_return_5;
wire   [15:0] adc2iq_U0_ap_return_6;
wire   [15:0] adc2iq_U0_ap_return_7;
wire   [15:0] adc2iq_U0_ap_return_8;
wire   [15:0] adc2iq_U0_ap_return_9;
wire   [15:0] adc2iq_U0_ap_return_10;
wire   [15:0] adc2iq_U0_ap_return_11;
wire   [15:0] adc2iq_U0_ap_return_12;
wire   [15:0] adc2iq_U0_ap_return_13;
wire   [15:0] adc2iq_U0_ap_return_14;
wire   [15:0] adc2iq_U0_ap_return_15;
wire    ap_channel_done_iq_M_real_7_channel;
wire    iq_M_real_7_channel_full_n;
reg    ap_sync_reg_channel_write_iq_M_real_7_channel;
wire    ap_sync_channel_write_iq_M_real_7_channel;
wire    ap_channel_done_iq_M_real_6_channel;
wire    iq_M_real_6_channel_full_n;
reg    ap_sync_reg_channel_write_iq_M_real_6_channel;
wire    ap_sync_channel_write_iq_M_real_6_channel;
wire    ap_channel_done_iq_M_real_5_channel;
wire    iq_M_real_5_channel_full_n;
reg    ap_sync_reg_channel_write_iq_M_real_5_channel;
wire    ap_sync_channel_write_iq_M_real_5_channel;
wire    ap_channel_done_iq_M_real_4_channel;
wire    iq_M_real_4_channel_full_n;
reg    ap_sync_reg_channel_write_iq_M_real_4_channel;
wire    ap_sync_channel_write_iq_M_real_4_channel;
wire    ap_channel_done_iq_M_real_3_channel;
wire    iq_M_real_3_channel_full_n;
reg    ap_sync_reg_channel_write_iq_M_real_3_channel;
wire    ap_sync_channel_write_iq_M_real_3_channel;
wire    ap_channel_done_iq_M_real_2_channel;
wire    iq_M_real_2_channel_full_n;
reg    ap_sync_reg_channel_write_iq_M_real_2_channel;
wire    ap_sync_channel_write_iq_M_real_2_channel;
wire    ap_channel_done_iq_M_real_1_channel;
wire    iq_M_real_1_channel_full_n;
reg    ap_sync_reg_channel_write_iq_M_real_1_channel;
wire    ap_sync_channel_write_iq_M_real_1_channel;
wire    ap_channel_done_iq_M_real_0_channel;
wire    iq_M_real_0_channel_full_n;
reg    ap_sync_reg_channel_write_iq_M_real_0_channel;
wire    ap_sync_channel_write_iq_M_real_0_channel;
wire    ap_channel_done_iq_M_imag_7_channel;
wire    iq_M_imag_7_channel_full_n;
reg    ap_sync_reg_channel_write_iq_M_imag_7_channel;
wire    ap_sync_channel_write_iq_M_imag_7_channel;
wire    ap_channel_done_iq_M_imag_6_channel;
wire    iq_M_imag_6_channel_full_n;
reg    ap_sync_reg_channel_write_iq_M_imag_6_channel;
wire    ap_sync_channel_write_iq_M_imag_6_channel;
wire    ap_channel_done_iq_M_imag_5_channel;
wire    iq_M_imag_5_channel_full_n;
reg    ap_sync_reg_channel_write_iq_M_imag_5_channel;
wire    ap_sync_channel_write_iq_M_imag_5_channel;
wire    ap_channel_done_iq_M_imag_4_channel;
wire    iq_M_imag_4_channel_full_n;
reg    ap_sync_reg_channel_write_iq_M_imag_4_channel;
wire    ap_sync_channel_write_iq_M_imag_4_channel;
wire    ap_channel_done_iq_M_imag_3_channel;
wire    iq_M_imag_3_channel_full_n;
reg    ap_sync_reg_channel_write_iq_M_imag_3_channel;
wire    ap_sync_channel_write_iq_M_imag_3_channel;
wire    ap_channel_done_iq_M_imag_2_channel;
wire    iq_M_imag_2_channel_full_n;
reg    ap_sync_reg_channel_write_iq_M_imag_2_channel;
wire    ap_sync_channel_write_iq_M_imag_2_channel;
wire    ap_channel_done_iq_M_imag_1_channel;
wire    iq_M_imag_1_channel_full_n;
reg    ap_sync_reg_channel_write_iq_M_imag_1_channel;
wire    ap_sync_channel_write_iq_M_imag_1_channel;
wire    ap_channel_done_iq_M_imag_0_channel;
wire    iq_M_imag_0_channel_full_n;
reg    ap_sync_reg_channel_write_iq_M_imag_0_channel;
wire    ap_sync_channel_write_iq_M_imag_0_channel;
wire    process_lanes_U0_ap_start;
wire    process_lanes_U0_ap_done;
wire    process_lanes_U0_ap_continue;
wire    process_lanes_U0_ap_idle;
wire    process_lanes_U0_ap_ready;
wire   [31:0] process_lanes_U0_lane_data_0_TDATA;
wire    process_lanes_U0_lane_data_0_TVALID;
wire   [31:0] process_lanes_U0_lane_data_1_TDATA;
wire    process_lanes_U0_lane_data_1_TVALID;
wire   [31:0] process_lanes_U0_lane_data_2_TDATA;
wire    process_lanes_U0_lane_data_2_TVALID;
wire   [31:0] process_lanes_U0_lane_data_3_TDATA;
wire    process_lanes_U0_lane_data_3_TVALID;
wire   [31:0] process_lanes_U0_lane_data_4_TDATA;
wire    process_lanes_U0_lane_data_4_TVALID;
wire   [31:0] process_lanes_U0_lane_data_5_TDATA;
wire    process_lanes_U0_lane_data_5_TVALID;
wire   [31:0] process_lanes_U0_lane_data_6_TDATA;
wire    process_lanes_U0_lane_data_6_TVALID;
wire   [31:0] process_lanes_U0_lane_data_7_TDATA;
wire    process_lanes_U0_lane_data_7_TVALID;
wire   [31:0] process_lanes_U0_lane_data_8_TDATA;
wire    process_lanes_U0_lane_data_8_TVALID;
wire   [31:0] process_lanes_U0_lane_data_9_TDATA;
wire    process_lanes_U0_lane_data_9_TVALID;
wire   [31:0] process_lanes_U0_lane_data_10_TDATA;
wire    process_lanes_U0_lane_data_10_TVALID;
wire   [31:0] process_lanes_U0_lane_data_11_TDATA;
wire    process_lanes_U0_lane_data_11_TVALID;
wire   [31:0] process_lanes_U0_lane_data_12_TDATA;
wire    process_lanes_U0_lane_data_12_TVALID;
wire   [31:0] process_lanes_U0_lane_data_13_TDATA;
wire    process_lanes_U0_lane_data_13_TVALID;
wire   [31:0] process_lanes_U0_lane_data_14_TDATA;
wire    process_lanes_U0_lane_data_14_TVALID;
wire   [31:0] process_lanes_U0_lane_data_15_TDATA;
wire    process_lanes_U0_lane_data_15_TVALID;
wire    ap_sync_continue;
wire   [15:0] p_0_channel_dout;
wire    p_0_channel_empty_n;
wire   [15:0] p_1_channel_dout;
wire    p_1_channel_empty_n;
wire   [15:0] p_2_channel_dout;
wire    p_2_channel_empty_n;
wire   [15:0] p_3_channel_dout;
wire    p_3_channel_empty_n;
wire   [15:0] p_4_channel_dout;
wire    p_4_channel_empty_n;
wire   [15:0] p_5_channel_dout;
wire    p_5_channel_empty_n;
wire   [15:0] p_6_channel_dout;
wire    p_6_channel_empty_n;
wire   [15:0] p_7_channel_dout;
wire    p_7_channel_empty_n;
wire   [15:0] p_034_channel_dout;
wire    p_034_channel_empty_n;
wire   [15:0] p_135_channel_dout;
wire    p_135_channel_empty_n;
wire   [15:0] p_236_channel_dout;
wire    p_236_channel_empty_n;
wire   [15:0] p_337_channel_dout;
wire    p_337_channel_empty_n;
wire   [15:0] p_438_channel_dout;
wire    p_438_channel_empty_n;
wire   [15:0] p_539_channel_dout;
wire    p_539_channel_empty_n;
wire   [15:0] p_640_channel_dout;
wire    p_640_channel_empty_n;
wire   [15:0] p_741_channel_dout;
wire    p_741_channel_empty_n;
wire   [15:0] iq_M_imag_0_channel_dout;
wire    iq_M_imag_0_channel_empty_n;
wire   [15:0] iq_M_imag_1_channel_dout;
wire    iq_M_imag_1_channel_empty_n;
wire   [15:0] iq_M_imag_2_channel_dout;
wire    iq_M_imag_2_channel_empty_n;
wire   [15:0] iq_M_imag_3_channel_dout;
wire    iq_M_imag_3_channel_empty_n;
wire   [15:0] iq_M_imag_4_channel_dout;
wire    iq_M_imag_4_channel_empty_n;
wire   [15:0] iq_M_imag_5_channel_dout;
wire    iq_M_imag_5_channel_empty_n;
wire   [15:0] iq_M_imag_6_channel_dout;
wire    iq_M_imag_6_channel_empty_n;
wire   [15:0] iq_M_imag_7_channel_dout;
wire    iq_M_imag_7_channel_empty_n;
wire   [15:0] iq_M_real_0_channel_dout;
wire    iq_M_real_0_channel_empty_n;
wire   [15:0] iq_M_real_1_channel_dout;
wire    iq_M_real_1_channel_empty_n;
wire   [15:0] iq_M_real_2_channel_dout;
wire    iq_M_real_2_channel_empty_n;
wire   [15:0] iq_M_real_3_channel_dout;
wire    iq_M_real_3_channel_empty_n;
wire   [15:0] iq_M_real_4_channel_dout;
wire    iq_M_real_4_channel_empty_n;
wire   [15:0] iq_M_real_5_channel_dout;
wire    iq_M_real_5_channel_empty_n;
wire   [15:0] iq_M_real_6_channel_dout;
wire    iq_M_real_6_channel_empty_n;
wire   [15:0] iq_M_real_7_channel_dout;
wire    iq_M_real_7_channel_empty_n;
wire    Block_codeRepl5_proc_U0_start_full_n;
wire    Block_codeRepl5_proc_U0_start_write;
wire    adc2iq_U0_start_full_n;
wire    adc2iq_U0_start_write;
wire    process_lanes_U0_start_full_n;
wire    process_lanes_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_p_741_channel = 1'b0;
#0 ap_sync_reg_channel_write_p_640_channel = 1'b0;
#0 ap_sync_reg_channel_write_p_539_channel = 1'b0;
#0 ap_sync_reg_channel_write_p_438_channel = 1'b0;
#0 ap_sync_reg_channel_write_p_337_channel = 1'b0;
#0 ap_sync_reg_channel_write_p_236_channel = 1'b0;
#0 ap_sync_reg_channel_write_p_135_channel = 1'b0;
#0 ap_sync_reg_channel_write_p_034_channel = 1'b0;
#0 ap_sync_reg_channel_write_p_7_channel = 1'b0;
#0 ap_sync_reg_channel_write_p_6_channel = 1'b0;
#0 ap_sync_reg_channel_write_p_5_channel = 1'b0;
#0 ap_sync_reg_channel_write_p_4_channel = 1'b0;
#0 ap_sync_reg_channel_write_p_3_channel = 1'b0;
#0 ap_sync_reg_channel_write_p_2_channel = 1'b0;
#0 ap_sync_reg_channel_write_p_1_channel = 1'b0;
#0 ap_sync_reg_channel_write_p_0_channel = 1'b0;
#0 ap_sync_reg_channel_write_iq_M_real_7_channel = 1'b0;
#0 ap_sync_reg_channel_write_iq_M_real_6_channel = 1'b0;
#0 ap_sync_reg_channel_write_iq_M_real_5_channel = 1'b0;
#0 ap_sync_reg_channel_write_iq_M_real_4_channel = 1'b0;
#0 ap_sync_reg_channel_write_iq_M_real_3_channel = 1'b0;
#0 ap_sync_reg_channel_write_iq_M_real_2_channel = 1'b0;
#0 ap_sync_reg_channel_write_iq_M_real_1_channel = 1'b0;
#0 ap_sync_reg_channel_write_iq_M_real_0_channel = 1'b0;
#0 ap_sync_reg_channel_write_iq_M_imag_7_channel = 1'b0;
#0 ap_sync_reg_channel_write_iq_M_imag_6_channel = 1'b0;
#0 ap_sync_reg_channel_write_iq_M_imag_5_channel = 1'b0;
#0 ap_sync_reg_channel_write_iq_M_imag_4_channel = 1'b0;
#0 ap_sync_reg_channel_write_iq_M_imag_3_channel = 1'b0;
#0 ap_sync_reg_channel_write_iq_M_imag_2_channel = 1'b0;
#0 ap_sync_reg_channel_write_iq_M_imag_1_channel = 1'b0;
#0 ap_sync_reg_channel_write_iq_M_imag_0_channel = 1'b0;
end

Block_codeRepl5_proc Block_codeRepl5_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_codeRepl5_proc_U0_ap_start),
    .ap_done(Block_codeRepl5_proc_U0_ap_done),
    .ap_continue(Block_codeRepl5_proc_U0_ap_continue),
    .ap_idle(Block_codeRepl5_proc_U0_ap_idle),
    .ap_ready(Block_codeRepl5_proc_U0_ap_ready),
    .istream_data_TDATA(istream_data_TDATA),
    .istream_data_TVALID(istream_data_TVALID),
    .istream_data_TREADY(Block_codeRepl5_proc_U0_istream_data_TREADY),
    .qstream_data_TDATA(qstream_data_TDATA),
    .qstream_data_TVALID(qstream_data_TVALID),
    .qstream_data_TREADY(Block_codeRepl5_proc_U0_qstream_data_TREADY),
    .ap_return_0(Block_codeRepl5_proc_U0_ap_return_0),
    .ap_return_1(Block_codeRepl5_proc_U0_ap_return_1),
    .ap_return_2(Block_codeRepl5_proc_U0_ap_return_2),
    .ap_return_3(Block_codeRepl5_proc_U0_ap_return_3),
    .ap_return_4(Block_codeRepl5_proc_U0_ap_return_4),
    .ap_return_5(Block_codeRepl5_proc_U0_ap_return_5),
    .ap_return_6(Block_codeRepl5_proc_U0_ap_return_6),
    .ap_return_7(Block_codeRepl5_proc_U0_ap_return_7),
    .ap_return_8(Block_codeRepl5_proc_U0_ap_return_8),
    .ap_return_9(Block_codeRepl5_proc_U0_ap_return_9),
    .ap_return_10(Block_codeRepl5_proc_U0_ap_return_10),
    .ap_return_11(Block_codeRepl5_proc_U0_ap_return_11),
    .ap_return_12(Block_codeRepl5_proc_U0_ap_return_12),
    .ap_return_13(Block_codeRepl5_proc_U0_ap_return_13),
    .ap_return_14(Block_codeRepl5_proc_U0_ap_return_14),
    .ap_return_15(Block_codeRepl5_proc_U0_ap_return_15)
);

adc2iq adc2iq_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(adc2iq_U0_ap_start),
    .ap_done(adc2iq_U0_ap_done),
    .ap_continue(adc2iq_U0_ap_continue),
    .ap_idle(adc2iq_U0_ap_idle),
    .ap_ready(adc2iq_U0_ap_ready),
    .p_read(p_0_channel_dout),
    .p_read1(p_1_channel_dout),
    .p_read2(p_2_channel_dout),
    .p_read3(p_3_channel_dout),
    .p_read4(p_4_channel_dout),
    .p_read5(p_5_channel_dout),
    .p_read6(p_6_channel_dout),
    .p_read7(p_7_channel_dout),
    .p_read8(p_034_channel_dout),
    .p_read9(p_135_channel_dout),
    .p_read10(p_236_channel_dout),
    .p_read11(p_337_channel_dout),
    .p_read12(p_438_channel_dout),
    .p_read13(p_539_channel_dout),
    .p_read14(p_640_channel_dout),
    .p_read15(p_741_channel_dout),
    .ap_return_0(adc2iq_U0_ap_return_0),
    .ap_return_1(adc2iq_U0_ap_return_1),
    .ap_return_2(adc2iq_U0_ap_return_2),
    .ap_return_3(adc2iq_U0_ap_return_3),
    .ap_return_4(adc2iq_U0_ap_return_4),
    .ap_return_5(adc2iq_U0_ap_return_5),
    .ap_return_6(adc2iq_U0_ap_return_6),
    .ap_return_7(adc2iq_U0_ap_return_7),
    .ap_return_8(adc2iq_U0_ap_return_8),
    .ap_return_9(adc2iq_U0_ap_return_9),
    .ap_return_10(adc2iq_U0_ap_return_10),
    .ap_return_11(adc2iq_U0_ap_return_11),
    .ap_return_12(adc2iq_U0_ap_return_12),
    .ap_return_13(adc2iq_U0_ap_return_13),
    .ap_return_14(adc2iq_U0_ap_return_14),
    .ap_return_15(adc2iq_U0_ap_return_15)
);

process_lanes process_lanes_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(process_lanes_U0_ap_start),
    .ap_done(process_lanes_U0_ap_done),
    .ap_continue(process_lanes_U0_ap_continue),
    .ap_idle(process_lanes_U0_ap_idle),
    .ap_ready(process_lanes_U0_ap_ready),
    .lane_data_0_TREADY(lane_data_0_TREADY),
    .lane_data_1_TREADY(lane_data_1_TREADY),
    .lane_data_2_TREADY(lane_data_2_TREADY),
    .lane_data_3_TREADY(lane_data_3_TREADY),
    .lane_data_4_TREADY(lane_data_4_TREADY),
    .lane_data_5_TREADY(lane_data_5_TREADY),
    .lane_data_6_TREADY(lane_data_6_TREADY),
    .lane_data_7_TREADY(lane_data_7_TREADY),
    .lane_data_8_TREADY(lane_data_8_TREADY),
    .lane_data_9_TREADY(lane_data_9_TREADY),
    .lane_data_10_TREADY(lane_data_10_TREADY),
    .lane_data_11_TREADY(lane_data_11_TREADY),
    .lane_data_12_TREADY(lane_data_12_TREADY),
    .lane_data_13_TREADY(lane_data_13_TREADY),
    .lane_data_14_TREADY(lane_data_14_TREADY),
    .lane_data_15_TREADY(lane_data_15_TREADY),
    .lane_data_0_TDATA(process_lanes_U0_lane_data_0_TDATA),
    .lane_data_0_TVALID(process_lanes_U0_lane_data_0_TVALID),
    .lane_data_1_TDATA(process_lanes_U0_lane_data_1_TDATA),
    .lane_data_1_TVALID(process_lanes_U0_lane_data_1_TVALID),
    .lane_data_2_TDATA(process_lanes_U0_lane_data_2_TDATA),
    .lane_data_2_TVALID(process_lanes_U0_lane_data_2_TVALID),
    .lane_data_3_TDATA(process_lanes_U0_lane_data_3_TDATA),
    .lane_data_3_TVALID(process_lanes_U0_lane_data_3_TVALID),
    .lane_data_4_TDATA(process_lanes_U0_lane_data_4_TDATA),
    .lane_data_4_TVALID(process_lanes_U0_lane_data_4_TVALID),
    .lane_data_5_TDATA(process_lanes_U0_lane_data_5_TDATA),
    .lane_data_5_TVALID(process_lanes_U0_lane_data_5_TVALID),
    .lane_data_6_TDATA(process_lanes_U0_lane_data_6_TDATA),
    .lane_data_6_TVALID(process_lanes_U0_lane_data_6_TVALID),
    .lane_data_7_TDATA(process_lanes_U0_lane_data_7_TDATA),
    .lane_data_7_TVALID(process_lanes_U0_lane_data_7_TVALID),
    .lane_data_8_TDATA(process_lanes_U0_lane_data_8_TDATA),
    .lane_data_8_TVALID(process_lanes_U0_lane_data_8_TVALID),
    .lane_data_9_TDATA(process_lanes_U0_lane_data_9_TDATA),
    .lane_data_9_TVALID(process_lanes_U0_lane_data_9_TVALID),
    .lane_data_10_TDATA(process_lanes_U0_lane_data_10_TDATA),
    .lane_data_10_TVALID(process_lanes_U0_lane_data_10_TVALID),
    .lane_data_11_TDATA(process_lanes_U0_lane_data_11_TDATA),
    .lane_data_11_TVALID(process_lanes_U0_lane_data_11_TVALID),
    .lane_data_12_TDATA(process_lanes_U0_lane_data_12_TDATA),
    .lane_data_12_TVALID(process_lanes_U0_lane_data_12_TVALID),
    .lane_data_13_TDATA(process_lanes_U0_lane_data_13_TDATA),
    .lane_data_13_TVALID(process_lanes_U0_lane_data_13_TVALID),
    .lane_data_14_TDATA(process_lanes_U0_lane_data_14_TDATA),
    .lane_data_14_TVALID(process_lanes_U0_lane_data_14_TVALID),
    .lane_data_15_TDATA(process_lanes_U0_lane_data_15_TDATA),
    .lane_data_15_TVALID(process_lanes_U0_lane_data_15_TVALID),
    .p_read(iq_M_imag_0_channel_dout),
    .p_read1(iq_M_imag_1_channel_dout),
    .p_read2(iq_M_imag_2_channel_dout),
    .p_read3(iq_M_imag_3_channel_dout),
    .p_read4(iq_M_imag_4_channel_dout),
    .p_read5(iq_M_imag_5_channel_dout),
    .p_read6(iq_M_imag_6_channel_dout),
    .p_read7(iq_M_imag_7_channel_dout),
    .p_read8(iq_M_real_0_channel_dout),
    .p_read9(iq_M_real_1_channel_dout),
    .p_read10(iq_M_real_2_channel_dout),
    .p_read11(iq_M_real_3_channel_dout),
    .p_read12(iq_M_real_4_channel_dout),
    .p_read13(iq_M_real_5_channel_dout),
    .p_read14(iq_M_real_6_channel_dout),
    .p_read15(iq_M_real_7_channel_dout)
);

fifo_w16_d2_A p_0_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_codeRepl5_proc_U0_ap_return_0),
    .if_full_n(p_0_channel_full_n),
    .if_write(ap_channel_done_p_0_channel),
    .if_dout(p_0_channel_dout),
    .if_empty_n(p_0_channel_empty_n),
    .if_read(adc2iq_U0_ap_ready)
);

fifo_w16_d2_A p_1_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_codeRepl5_proc_U0_ap_return_1),
    .if_full_n(p_1_channel_full_n),
    .if_write(ap_channel_done_p_1_channel),
    .if_dout(p_1_channel_dout),
    .if_empty_n(p_1_channel_empty_n),
    .if_read(adc2iq_U0_ap_ready)
);

fifo_w16_d2_A p_2_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_codeRepl5_proc_U0_ap_return_2),
    .if_full_n(p_2_channel_full_n),
    .if_write(ap_channel_done_p_2_channel),
    .if_dout(p_2_channel_dout),
    .if_empty_n(p_2_channel_empty_n),
    .if_read(adc2iq_U0_ap_ready)
);

fifo_w16_d2_A p_3_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_codeRepl5_proc_U0_ap_return_3),
    .if_full_n(p_3_channel_full_n),
    .if_write(ap_channel_done_p_3_channel),
    .if_dout(p_3_channel_dout),
    .if_empty_n(p_3_channel_empty_n),
    .if_read(adc2iq_U0_ap_ready)
);

fifo_w16_d2_A p_4_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_codeRepl5_proc_U0_ap_return_4),
    .if_full_n(p_4_channel_full_n),
    .if_write(ap_channel_done_p_4_channel),
    .if_dout(p_4_channel_dout),
    .if_empty_n(p_4_channel_empty_n),
    .if_read(adc2iq_U0_ap_ready)
);

fifo_w16_d2_A p_5_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_codeRepl5_proc_U0_ap_return_5),
    .if_full_n(p_5_channel_full_n),
    .if_write(ap_channel_done_p_5_channel),
    .if_dout(p_5_channel_dout),
    .if_empty_n(p_5_channel_empty_n),
    .if_read(adc2iq_U0_ap_ready)
);

fifo_w16_d2_A p_6_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_codeRepl5_proc_U0_ap_return_6),
    .if_full_n(p_6_channel_full_n),
    .if_write(ap_channel_done_p_6_channel),
    .if_dout(p_6_channel_dout),
    .if_empty_n(p_6_channel_empty_n),
    .if_read(adc2iq_U0_ap_ready)
);

fifo_w16_d2_A p_7_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_codeRepl5_proc_U0_ap_return_7),
    .if_full_n(p_7_channel_full_n),
    .if_write(ap_channel_done_p_7_channel),
    .if_dout(p_7_channel_dout),
    .if_empty_n(p_7_channel_empty_n),
    .if_read(adc2iq_U0_ap_ready)
);

fifo_w16_d2_A p_034_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_codeRepl5_proc_U0_ap_return_8),
    .if_full_n(p_034_channel_full_n),
    .if_write(ap_channel_done_p_034_channel),
    .if_dout(p_034_channel_dout),
    .if_empty_n(p_034_channel_empty_n),
    .if_read(adc2iq_U0_ap_ready)
);

fifo_w16_d2_A p_135_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_codeRepl5_proc_U0_ap_return_9),
    .if_full_n(p_135_channel_full_n),
    .if_write(ap_channel_done_p_135_channel),
    .if_dout(p_135_channel_dout),
    .if_empty_n(p_135_channel_empty_n),
    .if_read(adc2iq_U0_ap_ready)
);

fifo_w16_d2_A p_236_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_codeRepl5_proc_U0_ap_return_10),
    .if_full_n(p_236_channel_full_n),
    .if_write(ap_channel_done_p_236_channel),
    .if_dout(p_236_channel_dout),
    .if_empty_n(p_236_channel_empty_n),
    .if_read(adc2iq_U0_ap_ready)
);

fifo_w16_d2_A p_337_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_codeRepl5_proc_U0_ap_return_11),
    .if_full_n(p_337_channel_full_n),
    .if_write(ap_channel_done_p_337_channel),
    .if_dout(p_337_channel_dout),
    .if_empty_n(p_337_channel_empty_n),
    .if_read(adc2iq_U0_ap_ready)
);

fifo_w16_d2_A p_438_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_codeRepl5_proc_U0_ap_return_12),
    .if_full_n(p_438_channel_full_n),
    .if_write(ap_channel_done_p_438_channel),
    .if_dout(p_438_channel_dout),
    .if_empty_n(p_438_channel_empty_n),
    .if_read(adc2iq_U0_ap_ready)
);

fifo_w16_d2_A p_539_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_codeRepl5_proc_U0_ap_return_13),
    .if_full_n(p_539_channel_full_n),
    .if_write(ap_channel_done_p_539_channel),
    .if_dout(p_539_channel_dout),
    .if_empty_n(p_539_channel_empty_n),
    .if_read(adc2iq_U0_ap_ready)
);

fifo_w16_d2_A p_640_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_codeRepl5_proc_U0_ap_return_14),
    .if_full_n(p_640_channel_full_n),
    .if_write(ap_channel_done_p_640_channel),
    .if_dout(p_640_channel_dout),
    .if_empty_n(p_640_channel_empty_n),
    .if_read(adc2iq_U0_ap_ready)
);

fifo_w16_d2_A p_741_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_codeRepl5_proc_U0_ap_return_15),
    .if_full_n(p_741_channel_full_n),
    .if_write(ap_channel_done_p_741_channel),
    .if_dout(p_741_channel_dout),
    .if_empty_n(p_741_channel_empty_n),
    .if_read(adc2iq_U0_ap_ready)
);

fifo_w16_d2_A iq_M_imag_0_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(adc2iq_U0_ap_return_0),
    .if_full_n(iq_M_imag_0_channel_full_n),
    .if_write(ap_channel_done_iq_M_imag_0_channel),
    .if_dout(iq_M_imag_0_channel_dout),
    .if_empty_n(iq_M_imag_0_channel_empty_n),
    .if_read(process_lanes_U0_ap_ready)
);

fifo_w16_d2_A iq_M_imag_1_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(adc2iq_U0_ap_return_1),
    .if_full_n(iq_M_imag_1_channel_full_n),
    .if_write(ap_channel_done_iq_M_imag_1_channel),
    .if_dout(iq_M_imag_1_channel_dout),
    .if_empty_n(iq_M_imag_1_channel_empty_n),
    .if_read(process_lanes_U0_ap_ready)
);

fifo_w16_d2_A iq_M_imag_2_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(adc2iq_U0_ap_return_2),
    .if_full_n(iq_M_imag_2_channel_full_n),
    .if_write(ap_channel_done_iq_M_imag_2_channel),
    .if_dout(iq_M_imag_2_channel_dout),
    .if_empty_n(iq_M_imag_2_channel_empty_n),
    .if_read(process_lanes_U0_ap_ready)
);

fifo_w16_d2_A iq_M_imag_3_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(adc2iq_U0_ap_return_3),
    .if_full_n(iq_M_imag_3_channel_full_n),
    .if_write(ap_channel_done_iq_M_imag_3_channel),
    .if_dout(iq_M_imag_3_channel_dout),
    .if_empty_n(iq_M_imag_3_channel_empty_n),
    .if_read(process_lanes_U0_ap_ready)
);

fifo_w16_d2_A iq_M_imag_4_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(adc2iq_U0_ap_return_4),
    .if_full_n(iq_M_imag_4_channel_full_n),
    .if_write(ap_channel_done_iq_M_imag_4_channel),
    .if_dout(iq_M_imag_4_channel_dout),
    .if_empty_n(iq_M_imag_4_channel_empty_n),
    .if_read(process_lanes_U0_ap_ready)
);

fifo_w16_d2_A iq_M_imag_5_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(adc2iq_U0_ap_return_5),
    .if_full_n(iq_M_imag_5_channel_full_n),
    .if_write(ap_channel_done_iq_M_imag_5_channel),
    .if_dout(iq_M_imag_5_channel_dout),
    .if_empty_n(iq_M_imag_5_channel_empty_n),
    .if_read(process_lanes_U0_ap_ready)
);

fifo_w16_d2_A iq_M_imag_6_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(adc2iq_U0_ap_return_6),
    .if_full_n(iq_M_imag_6_channel_full_n),
    .if_write(ap_channel_done_iq_M_imag_6_channel),
    .if_dout(iq_M_imag_6_channel_dout),
    .if_empty_n(iq_M_imag_6_channel_empty_n),
    .if_read(process_lanes_U0_ap_ready)
);

fifo_w16_d2_A iq_M_imag_7_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(adc2iq_U0_ap_return_7),
    .if_full_n(iq_M_imag_7_channel_full_n),
    .if_write(ap_channel_done_iq_M_imag_7_channel),
    .if_dout(iq_M_imag_7_channel_dout),
    .if_empty_n(iq_M_imag_7_channel_empty_n),
    .if_read(process_lanes_U0_ap_ready)
);

fifo_w16_d2_A iq_M_real_0_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(adc2iq_U0_ap_return_8),
    .if_full_n(iq_M_real_0_channel_full_n),
    .if_write(ap_channel_done_iq_M_real_0_channel),
    .if_dout(iq_M_real_0_channel_dout),
    .if_empty_n(iq_M_real_0_channel_empty_n),
    .if_read(process_lanes_U0_ap_ready)
);

fifo_w16_d2_A iq_M_real_1_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(adc2iq_U0_ap_return_9),
    .if_full_n(iq_M_real_1_channel_full_n),
    .if_write(ap_channel_done_iq_M_real_1_channel),
    .if_dout(iq_M_real_1_channel_dout),
    .if_empty_n(iq_M_real_1_channel_empty_n),
    .if_read(process_lanes_U0_ap_ready)
);

fifo_w16_d2_A iq_M_real_2_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(adc2iq_U0_ap_return_10),
    .if_full_n(iq_M_real_2_channel_full_n),
    .if_write(ap_channel_done_iq_M_real_2_channel),
    .if_dout(iq_M_real_2_channel_dout),
    .if_empty_n(iq_M_real_2_channel_empty_n),
    .if_read(process_lanes_U0_ap_ready)
);

fifo_w16_d2_A iq_M_real_3_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(adc2iq_U0_ap_return_11),
    .if_full_n(iq_M_real_3_channel_full_n),
    .if_write(ap_channel_done_iq_M_real_3_channel),
    .if_dout(iq_M_real_3_channel_dout),
    .if_empty_n(iq_M_real_3_channel_empty_n),
    .if_read(process_lanes_U0_ap_ready)
);

fifo_w16_d2_A iq_M_real_4_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(adc2iq_U0_ap_return_12),
    .if_full_n(iq_M_real_4_channel_full_n),
    .if_write(ap_channel_done_iq_M_real_4_channel),
    .if_dout(iq_M_real_4_channel_dout),
    .if_empty_n(iq_M_real_4_channel_empty_n),
    .if_read(process_lanes_U0_ap_ready)
);

fifo_w16_d2_A iq_M_real_5_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(adc2iq_U0_ap_return_13),
    .if_full_n(iq_M_real_5_channel_full_n),
    .if_write(ap_channel_done_iq_M_real_5_channel),
    .if_dout(iq_M_real_5_channel_dout),
    .if_empty_n(iq_M_real_5_channel_empty_n),
    .if_read(process_lanes_U0_ap_ready)
);

fifo_w16_d2_A iq_M_real_6_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(adc2iq_U0_ap_return_14),
    .if_full_n(iq_M_real_6_channel_full_n),
    .if_write(ap_channel_done_iq_M_real_6_channel),
    .if_dout(iq_M_real_6_channel_dout),
    .if_empty_n(iq_M_real_6_channel_empty_n),
    .if_read(process_lanes_U0_ap_ready)
);

fifo_w16_d2_A iq_M_real_7_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(adc2iq_U0_ap_return_15),
    .if_full_n(iq_M_real_7_channel_full_n),
    .if_write(ap_channel_done_iq_M_real_7_channel),
    .if_dout(iq_M_real_7_channel_dout),
    .if_empty_n(iq_M_real_7_channel_empty_n),
    .if_read(process_lanes_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_iq_M_imag_0_channel <= 1'b0;
    end else begin
        if (((adc2iq_U0_ap_done & adc2iq_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_iq_M_imag_0_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_iq_M_imag_0_channel <= ap_sync_channel_write_iq_M_imag_0_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_iq_M_imag_1_channel <= 1'b0;
    end else begin
        if (((adc2iq_U0_ap_done & adc2iq_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_iq_M_imag_1_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_iq_M_imag_1_channel <= ap_sync_channel_write_iq_M_imag_1_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_iq_M_imag_2_channel <= 1'b0;
    end else begin
        if (((adc2iq_U0_ap_done & adc2iq_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_iq_M_imag_2_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_iq_M_imag_2_channel <= ap_sync_channel_write_iq_M_imag_2_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_iq_M_imag_3_channel <= 1'b0;
    end else begin
        if (((adc2iq_U0_ap_done & adc2iq_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_iq_M_imag_3_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_iq_M_imag_3_channel <= ap_sync_channel_write_iq_M_imag_3_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_iq_M_imag_4_channel <= 1'b0;
    end else begin
        if (((adc2iq_U0_ap_done & adc2iq_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_iq_M_imag_4_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_iq_M_imag_4_channel <= ap_sync_channel_write_iq_M_imag_4_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_iq_M_imag_5_channel <= 1'b0;
    end else begin
        if (((adc2iq_U0_ap_done & adc2iq_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_iq_M_imag_5_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_iq_M_imag_5_channel <= ap_sync_channel_write_iq_M_imag_5_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_iq_M_imag_6_channel <= 1'b0;
    end else begin
        if (((adc2iq_U0_ap_done & adc2iq_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_iq_M_imag_6_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_iq_M_imag_6_channel <= ap_sync_channel_write_iq_M_imag_6_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_iq_M_imag_7_channel <= 1'b0;
    end else begin
        if (((adc2iq_U0_ap_done & adc2iq_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_iq_M_imag_7_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_iq_M_imag_7_channel <= ap_sync_channel_write_iq_M_imag_7_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_iq_M_real_0_channel <= 1'b0;
    end else begin
        if (((adc2iq_U0_ap_done & adc2iq_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_iq_M_real_0_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_iq_M_real_0_channel <= ap_sync_channel_write_iq_M_real_0_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_iq_M_real_1_channel <= 1'b0;
    end else begin
        if (((adc2iq_U0_ap_done & adc2iq_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_iq_M_real_1_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_iq_M_real_1_channel <= ap_sync_channel_write_iq_M_real_1_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_iq_M_real_2_channel <= 1'b0;
    end else begin
        if (((adc2iq_U0_ap_done & adc2iq_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_iq_M_real_2_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_iq_M_real_2_channel <= ap_sync_channel_write_iq_M_real_2_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_iq_M_real_3_channel <= 1'b0;
    end else begin
        if (((adc2iq_U0_ap_done & adc2iq_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_iq_M_real_3_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_iq_M_real_3_channel <= ap_sync_channel_write_iq_M_real_3_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_iq_M_real_4_channel <= 1'b0;
    end else begin
        if (((adc2iq_U0_ap_done & adc2iq_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_iq_M_real_4_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_iq_M_real_4_channel <= ap_sync_channel_write_iq_M_real_4_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_iq_M_real_5_channel <= 1'b0;
    end else begin
        if (((adc2iq_U0_ap_done & adc2iq_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_iq_M_real_5_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_iq_M_real_5_channel <= ap_sync_channel_write_iq_M_real_5_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_iq_M_real_6_channel <= 1'b0;
    end else begin
        if (((adc2iq_U0_ap_done & adc2iq_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_iq_M_real_6_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_iq_M_real_6_channel <= ap_sync_channel_write_iq_M_real_6_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_iq_M_real_7_channel <= 1'b0;
    end else begin
        if (((adc2iq_U0_ap_done & adc2iq_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_iq_M_real_7_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_iq_M_real_7_channel <= ap_sync_channel_write_iq_M_real_7_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_p_034_channel <= 1'b0;
    end else begin
        if (((Block_codeRepl5_proc_U0_ap_done & Block_codeRepl5_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_034_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_034_channel <= ap_sync_channel_write_p_034_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_p_0_channel <= 1'b0;
    end else begin
        if (((Block_codeRepl5_proc_U0_ap_done & Block_codeRepl5_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_0_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_0_channel <= ap_sync_channel_write_p_0_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_p_135_channel <= 1'b0;
    end else begin
        if (((Block_codeRepl5_proc_U0_ap_done & Block_codeRepl5_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_135_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_135_channel <= ap_sync_channel_write_p_135_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_p_1_channel <= 1'b0;
    end else begin
        if (((Block_codeRepl5_proc_U0_ap_done & Block_codeRepl5_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_1_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_1_channel <= ap_sync_channel_write_p_1_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_p_236_channel <= 1'b0;
    end else begin
        if (((Block_codeRepl5_proc_U0_ap_done & Block_codeRepl5_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_236_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_236_channel <= ap_sync_channel_write_p_236_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_p_2_channel <= 1'b0;
    end else begin
        if (((Block_codeRepl5_proc_U0_ap_done & Block_codeRepl5_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_2_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_2_channel <= ap_sync_channel_write_p_2_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_p_337_channel <= 1'b0;
    end else begin
        if (((Block_codeRepl5_proc_U0_ap_done & Block_codeRepl5_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_337_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_337_channel <= ap_sync_channel_write_p_337_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_p_3_channel <= 1'b0;
    end else begin
        if (((Block_codeRepl5_proc_U0_ap_done & Block_codeRepl5_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_3_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_3_channel <= ap_sync_channel_write_p_3_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_p_438_channel <= 1'b0;
    end else begin
        if (((Block_codeRepl5_proc_U0_ap_done & Block_codeRepl5_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_438_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_438_channel <= ap_sync_channel_write_p_438_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_p_4_channel <= 1'b0;
    end else begin
        if (((Block_codeRepl5_proc_U0_ap_done & Block_codeRepl5_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_4_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_4_channel <= ap_sync_channel_write_p_4_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_p_539_channel <= 1'b0;
    end else begin
        if (((Block_codeRepl5_proc_U0_ap_done & Block_codeRepl5_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_539_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_539_channel <= ap_sync_channel_write_p_539_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_p_5_channel <= 1'b0;
    end else begin
        if (((Block_codeRepl5_proc_U0_ap_done & Block_codeRepl5_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_5_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_5_channel <= ap_sync_channel_write_p_5_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_p_640_channel <= 1'b0;
    end else begin
        if (((Block_codeRepl5_proc_U0_ap_done & Block_codeRepl5_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_640_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_640_channel <= ap_sync_channel_write_p_640_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_p_6_channel <= 1'b0;
    end else begin
        if (((Block_codeRepl5_proc_U0_ap_done & Block_codeRepl5_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_6_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_6_channel <= ap_sync_channel_write_p_6_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_p_741_channel <= 1'b0;
    end else begin
        if (((Block_codeRepl5_proc_U0_ap_done & Block_codeRepl5_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_741_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_741_channel <= ap_sync_channel_write_p_741_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_p_7_channel <= 1'b0;
    end else begin
        if (((Block_codeRepl5_proc_U0_ap_done & Block_codeRepl5_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_7_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_7_channel <= ap_sync_channel_write_p_7_channel;
        end
    end
end

assign Block_codeRepl5_proc_U0_ap_continue = (ap_sync_channel_write_p_7_channel & ap_sync_channel_write_p_741_channel & ap_sync_channel_write_p_6_channel & ap_sync_channel_write_p_640_channel & ap_sync_channel_write_p_5_channel & ap_sync_channel_write_p_539_channel & ap_sync_channel_write_p_4_channel & ap_sync_channel_write_p_438_channel & ap_sync_channel_write_p_3_channel & ap_sync_channel_write_p_337_channel & ap_sync_channel_write_p_2_channel & ap_sync_channel_write_p_236_channel & ap_sync_channel_write_p_1_channel & ap_sync_channel_write_p_135_channel & ap_sync_channel_write_p_0_channel & ap_sync_channel_write_p_034_channel);

assign Block_codeRepl5_proc_U0_ap_start = 1'b1;

assign Block_codeRepl5_proc_U0_start_full_n = 1'b1;

assign Block_codeRepl5_proc_U0_start_write = 1'b0;

assign adc2iq_U0_ap_continue = (ap_sync_channel_write_iq_M_real_7_channel & ap_sync_channel_write_iq_M_real_6_channel & ap_sync_channel_write_iq_M_real_5_channel & ap_sync_channel_write_iq_M_real_4_channel & ap_sync_channel_write_iq_M_real_3_channel & ap_sync_channel_write_iq_M_real_2_channel & ap_sync_channel_write_iq_M_real_1_channel & ap_sync_channel_write_iq_M_real_0_channel & ap_sync_channel_write_iq_M_imag_7_channel & ap_sync_channel_write_iq_M_imag_6_channel & ap_sync_channel_write_iq_M_imag_5_channel & ap_sync_channel_write_iq_M_imag_4_channel & ap_sync_channel_write_iq_M_imag_3_channel & ap_sync_channel_write_iq_M_imag_2_channel & ap_sync_channel_write_iq_M_imag_1_channel & ap_sync_channel_write_iq_M_imag_0_channel);

assign adc2iq_U0_ap_start = (p_7_channel_empty_n & p_741_channel_empty_n & p_6_channel_empty_n & p_640_channel_empty_n & p_5_channel_empty_n & p_539_channel_empty_n & p_4_channel_empty_n & p_438_channel_empty_n & p_3_channel_empty_n & p_337_channel_empty_n & p_2_channel_empty_n & p_236_channel_empty_n & p_1_channel_empty_n & p_135_channel_empty_n & p_0_channel_empty_n & p_034_channel_empty_n);

assign adc2iq_U0_start_full_n = 1'b1;

assign adc2iq_U0_start_write = 1'b0;

assign ap_channel_done_iq_M_imag_0_channel = ((ap_sync_reg_channel_write_iq_M_imag_0_channel ^ 1'b1) & adc2iq_U0_ap_done);

assign ap_channel_done_iq_M_imag_1_channel = ((ap_sync_reg_channel_write_iq_M_imag_1_channel ^ 1'b1) & adc2iq_U0_ap_done);

assign ap_channel_done_iq_M_imag_2_channel = ((ap_sync_reg_channel_write_iq_M_imag_2_channel ^ 1'b1) & adc2iq_U0_ap_done);

assign ap_channel_done_iq_M_imag_3_channel = ((ap_sync_reg_channel_write_iq_M_imag_3_channel ^ 1'b1) & adc2iq_U0_ap_done);

assign ap_channel_done_iq_M_imag_4_channel = ((ap_sync_reg_channel_write_iq_M_imag_4_channel ^ 1'b1) & adc2iq_U0_ap_done);

assign ap_channel_done_iq_M_imag_5_channel = ((ap_sync_reg_channel_write_iq_M_imag_5_channel ^ 1'b1) & adc2iq_U0_ap_done);

assign ap_channel_done_iq_M_imag_6_channel = ((ap_sync_reg_channel_write_iq_M_imag_6_channel ^ 1'b1) & adc2iq_U0_ap_done);

assign ap_channel_done_iq_M_imag_7_channel = ((ap_sync_reg_channel_write_iq_M_imag_7_channel ^ 1'b1) & adc2iq_U0_ap_done);

assign ap_channel_done_iq_M_real_0_channel = ((ap_sync_reg_channel_write_iq_M_real_0_channel ^ 1'b1) & adc2iq_U0_ap_done);

assign ap_channel_done_iq_M_real_1_channel = ((ap_sync_reg_channel_write_iq_M_real_1_channel ^ 1'b1) & adc2iq_U0_ap_done);

assign ap_channel_done_iq_M_real_2_channel = ((ap_sync_reg_channel_write_iq_M_real_2_channel ^ 1'b1) & adc2iq_U0_ap_done);

assign ap_channel_done_iq_M_real_3_channel = ((ap_sync_reg_channel_write_iq_M_real_3_channel ^ 1'b1) & adc2iq_U0_ap_done);

assign ap_channel_done_iq_M_real_4_channel = ((ap_sync_reg_channel_write_iq_M_real_4_channel ^ 1'b1) & adc2iq_U0_ap_done);

assign ap_channel_done_iq_M_real_5_channel = ((ap_sync_reg_channel_write_iq_M_real_5_channel ^ 1'b1) & adc2iq_U0_ap_done);

assign ap_channel_done_iq_M_real_6_channel = ((ap_sync_reg_channel_write_iq_M_real_6_channel ^ 1'b1) & adc2iq_U0_ap_done);

assign ap_channel_done_iq_M_real_7_channel = ((ap_sync_reg_channel_write_iq_M_real_7_channel ^ 1'b1) & adc2iq_U0_ap_done);

assign ap_channel_done_p_034_channel = ((ap_sync_reg_channel_write_p_034_channel ^ 1'b1) & Block_codeRepl5_proc_U0_ap_done);

assign ap_channel_done_p_0_channel = ((ap_sync_reg_channel_write_p_0_channel ^ 1'b1) & Block_codeRepl5_proc_U0_ap_done);

assign ap_channel_done_p_135_channel = ((ap_sync_reg_channel_write_p_135_channel ^ 1'b1) & Block_codeRepl5_proc_U0_ap_done);

assign ap_channel_done_p_1_channel = ((ap_sync_reg_channel_write_p_1_channel ^ 1'b1) & Block_codeRepl5_proc_U0_ap_done);

assign ap_channel_done_p_236_channel = ((ap_sync_reg_channel_write_p_236_channel ^ 1'b1) & Block_codeRepl5_proc_U0_ap_done);

assign ap_channel_done_p_2_channel = ((ap_sync_reg_channel_write_p_2_channel ^ 1'b1) & Block_codeRepl5_proc_U0_ap_done);

assign ap_channel_done_p_337_channel = ((ap_sync_reg_channel_write_p_337_channel ^ 1'b1) & Block_codeRepl5_proc_U0_ap_done);

assign ap_channel_done_p_3_channel = ((ap_sync_reg_channel_write_p_3_channel ^ 1'b1) & Block_codeRepl5_proc_U0_ap_done);

assign ap_channel_done_p_438_channel = ((ap_sync_reg_channel_write_p_438_channel ^ 1'b1) & Block_codeRepl5_proc_U0_ap_done);

assign ap_channel_done_p_4_channel = ((ap_sync_reg_channel_write_p_4_channel ^ 1'b1) & Block_codeRepl5_proc_U0_ap_done);

assign ap_channel_done_p_539_channel = ((ap_sync_reg_channel_write_p_539_channel ^ 1'b1) & Block_codeRepl5_proc_U0_ap_done);

assign ap_channel_done_p_5_channel = ((ap_sync_reg_channel_write_p_5_channel ^ 1'b1) & Block_codeRepl5_proc_U0_ap_done);

assign ap_channel_done_p_640_channel = ((ap_sync_reg_channel_write_p_640_channel ^ 1'b1) & Block_codeRepl5_proc_U0_ap_done);

assign ap_channel_done_p_6_channel = ((ap_sync_reg_channel_write_p_6_channel ^ 1'b1) & Block_codeRepl5_proc_U0_ap_done);

assign ap_channel_done_p_741_channel = ((ap_sync_reg_channel_write_p_741_channel ^ 1'b1) & Block_codeRepl5_proc_U0_ap_done);

assign ap_channel_done_p_7_channel = ((ap_sync_reg_channel_write_p_7_channel ^ 1'b1) & Block_codeRepl5_proc_U0_ap_done);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_channel_write_iq_M_imag_0_channel = ((iq_M_imag_0_channel_full_n & ap_channel_done_iq_M_imag_0_channel) | ap_sync_reg_channel_write_iq_M_imag_0_channel);

assign ap_sync_channel_write_iq_M_imag_1_channel = ((iq_M_imag_1_channel_full_n & ap_channel_done_iq_M_imag_1_channel) | ap_sync_reg_channel_write_iq_M_imag_1_channel);

assign ap_sync_channel_write_iq_M_imag_2_channel = ((iq_M_imag_2_channel_full_n & ap_channel_done_iq_M_imag_2_channel) | ap_sync_reg_channel_write_iq_M_imag_2_channel);

assign ap_sync_channel_write_iq_M_imag_3_channel = ((iq_M_imag_3_channel_full_n & ap_channel_done_iq_M_imag_3_channel) | ap_sync_reg_channel_write_iq_M_imag_3_channel);

assign ap_sync_channel_write_iq_M_imag_4_channel = ((iq_M_imag_4_channel_full_n & ap_channel_done_iq_M_imag_4_channel) | ap_sync_reg_channel_write_iq_M_imag_4_channel);

assign ap_sync_channel_write_iq_M_imag_5_channel = ((iq_M_imag_5_channel_full_n & ap_channel_done_iq_M_imag_5_channel) | ap_sync_reg_channel_write_iq_M_imag_5_channel);

assign ap_sync_channel_write_iq_M_imag_6_channel = ((iq_M_imag_6_channel_full_n & ap_channel_done_iq_M_imag_6_channel) | ap_sync_reg_channel_write_iq_M_imag_6_channel);

assign ap_sync_channel_write_iq_M_imag_7_channel = ((iq_M_imag_7_channel_full_n & ap_channel_done_iq_M_imag_7_channel) | ap_sync_reg_channel_write_iq_M_imag_7_channel);

assign ap_sync_channel_write_iq_M_real_0_channel = ((iq_M_real_0_channel_full_n & ap_channel_done_iq_M_real_0_channel) | ap_sync_reg_channel_write_iq_M_real_0_channel);

assign ap_sync_channel_write_iq_M_real_1_channel = ((iq_M_real_1_channel_full_n & ap_channel_done_iq_M_real_1_channel) | ap_sync_reg_channel_write_iq_M_real_1_channel);

assign ap_sync_channel_write_iq_M_real_2_channel = ((iq_M_real_2_channel_full_n & ap_channel_done_iq_M_real_2_channel) | ap_sync_reg_channel_write_iq_M_real_2_channel);

assign ap_sync_channel_write_iq_M_real_3_channel = ((iq_M_real_3_channel_full_n & ap_channel_done_iq_M_real_3_channel) | ap_sync_reg_channel_write_iq_M_real_3_channel);

assign ap_sync_channel_write_iq_M_real_4_channel = ((iq_M_real_4_channel_full_n & ap_channel_done_iq_M_real_4_channel) | ap_sync_reg_channel_write_iq_M_real_4_channel);

assign ap_sync_channel_write_iq_M_real_5_channel = ((iq_M_real_5_channel_full_n & ap_channel_done_iq_M_real_5_channel) | ap_sync_reg_channel_write_iq_M_real_5_channel);

assign ap_sync_channel_write_iq_M_real_6_channel = ((iq_M_real_6_channel_full_n & ap_channel_done_iq_M_real_6_channel) | ap_sync_reg_channel_write_iq_M_real_6_channel);

assign ap_sync_channel_write_iq_M_real_7_channel = ((iq_M_real_7_channel_full_n & ap_channel_done_iq_M_real_7_channel) | ap_sync_reg_channel_write_iq_M_real_7_channel);

assign ap_sync_channel_write_p_034_channel = ((p_034_channel_full_n & ap_channel_done_p_034_channel) | ap_sync_reg_channel_write_p_034_channel);

assign ap_sync_channel_write_p_0_channel = ((p_0_channel_full_n & ap_channel_done_p_0_channel) | ap_sync_reg_channel_write_p_0_channel);

assign ap_sync_channel_write_p_135_channel = ((p_135_channel_full_n & ap_channel_done_p_135_channel) | ap_sync_reg_channel_write_p_135_channel);

assign ap_sync_channel_write_p_1_channel = ((p_1_channel_full_n & ap_channel_done_p_1_channel) | ap_sync_reg_channel_write_p_1_channel);

assign ap_sync_channel_write_p_236_channel = ((p_236_channel_full_n & ap_channel_done_p_236_channel) | ap_sync_reg_channel_write_p_236_channel);

assign ap_sync_channel_write_p_2_channel = ((p_2_channel_full_n & ap_channel_done_p_2_channel) | ap_sync_reg_channel_write_p_2_channel);

assign ap_sync_channel_write_p_337_channel = ((p_337_channel_full_n & ap_channel_done_p_337_channel) | ap_sync_reg_channel_write_p_337_channel);

assign ap_sync_channel_write_p_3_channel = ((p_3_channel_full_n & ap_channel_done_p_3_channel) | ap_sync_reg_channel_write_p_3_channel);

assign ap_sync_channel_write_p_438_channel = ((p_438_channel_full_n & ap_channel_done_p_438_channel) | ap_sync_reg_channel_write_p_438_channel);

assign ap_sync_channel_write_p_4_channel = ((p_4_channel_full_n & ap_channel_done_p_4_channel) | ap_sync_reg_channel_write_p_4_channel);

assign ap_sync_channel_write_p_539_channel = ((p_539_channel_full_n & ap_channel_done_p_539_channel) | ap_sync_reg_channel_write_p_539_channel);

assign ap_sync_channel_write_p_5_channel = ((p_5_channel_full_n & ap_channel_done_p_5_channel) | ap_sync_reg_channel_write_p_5_channel);

assign ap_sync_channel_write_p_640_channel = ((p_640_channel_full_n & ap_channel_done_p_640_channel) | ap_sync_reg_channel_write_p_640_channel);

assign ap_sync_channel_write_p_6_channel = ((p_6_channel_full_n & ap_channel_done_p_6_channel) | ap_sync_reg_channel_write_p_6_channel);

assign ap_sync_channel_write_p_741_channel = ((p_741_channel_full_n & ap_channel_done_p_741_channel) | ap_sync_reg_channel_write_p_741_channel);

assign ap_sync_channel_write_p_7_channel = ((p_7_channel_full_n & ap_channel_done_p_7_channel) | ap_sync_reg_channel_write_p_7_channel);

assign ap_sync_continue = 1'b0;

assign istream_data_TREADY = Block_codeRepl5_proc_U0_istream_data_TREADY;

assign lane_data_0_TDATA = process_lanes_U0_lane_data_0_TDATA;

assign lane_data_0_TVALID = process_lanes_U0_lane_data_0_TVALID;

assign lane_data_10_TDATA = process_lanes_U0_lane_data_10_TDATA;

assign lane_data_10_TVALID = process_lanes_U0_lane_data_10_TVALID;

assign lane_data_11_TDATA = process_lanes_U0_lane_data_11_TDATA;

assign lane_data_11_TVALID = process_lanes_U0_lane_data_11_TVALID;

assign lane_data_12_TDATA = process_lanes_U0_lane_data_12_TDATA;

assign lane_data_12_TVALID = process_lanes_U0_lane_data_12_TVALID;

assign lane_data_13_TDATA = process_lanes_U0_lane_data_13_TDATA;

assign lane_data_13_TVALID = process_lanes_U0_lane_data_13_TVALID;

assign lane_data_14_TDATA = process_lanes_U0_lane_data_14_TDATA;

assign lane_data_14_TVALID = process_lanes_U0_lane_data_14_TVALID;

assign lane_data_15_TDATA = process_lanes_U0_lane_data_15_TDATA;

assign lane_data_15_TVALID = process_lanes_U0_lane_data_15_TVALID;

assign lane_data_1_TDATA = process_lanes_U0_lane_data_1_TDATA;

assign lane_data_1_TVALID = process_lanes_U0_lane_data_1_TVALID;

assign lane_data_2_TDATA = process_lanes_U0_lane_data_2_TDATA;

assign lane_data_2_TVALID = process_lanes_U0_lane_data_2_TVALID;

assign lane_data_3_TDATA = process_lanes_U0_lane_data_3_TDATA;

assign lane_data_3_TVALID = process_lanes_U0_lane_data_3_TVALID;

assign lane_data_4_TDATA = process_lanes_U0_lane_data_4_TDATA;

assign lane_data_4_TVALID = process_lanes_U0_lane_data_4_TVALID;

assign lane_data_5_TDATA = process_lanes_U0_lane_data_5_TDATA;

assign lane_data_5_TVALID = process_lanes_U0_lane_data_5_TVALID;

assign lane_data_6_TDATA = process_lanes_U0_lane_data_6_TDATA;

assign lane_data_6_TVALID = process_lanes_U0_lane_data_6_TVALID;

assign lane_data_7_TDATA = process_lanes_U0_lane_data_7_TDATA;

assign lane_data_7_TVALID = process_lanes_U0_lane_data_7_TVALID;

assign lane_data_8_TDATA = process_lanes_U0_lane_data_8_TDATA;

assign lane_data_8_TVALID = process_lanes_U0_lane_data_8_TVALID;

assign lane_data_9_TDATA = process_lanes_U0_lane_data_9_TDATA;

assign lane_data_9_TVALID = process_lanes_U0_lane_data_9_TVALID;

assign process_lanes_U0_ap_continue = 1'b1;

assign process_lanes_U0_ap_start = (iq_M_real_7_channel_empty_n & iq_M_real_6_channel_empty_n & iq_M_real_5_channel_empty_n & iq_M_real_4_channel_empty_n & iq_M_real_3_channel_empty_n & iq_M_real_2_channel_empty_n & iq_M_real_1_channel_empty_n & iq_M_real_0_channel_empty_n & iq_M_imag_7_channel_empty_n & iq_M_imag_6_channel_empty_n & iq_M_imag_5_channel_empty_n & iq_M_imag_4_channel_empty_n & iq_M_imag_3_channel_empty_n & iq_M_imag_2_channel_empty_n & iq_M_imag_1_channel_empty_n & iq_M_imag_0_channel_empty_n);

assign process_lanes_U0_start_full_n = 1'b1;

assign process_lanes_U0_start_write = 1'b0;

assign qstream_data_TREADY = Block_codeRepl5_proc_U0_qstream_data_TREADY;

endmodule //adc_to_opfb
