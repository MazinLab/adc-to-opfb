-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity process_lanes is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    lane_data_0_TREADY : IN STD_LOGIC;
    lane_data_1_TREADY : IN STD_LOGIC;
    lane_data_2_TREADY : IN STD_LOGIC;
    lane_data_3_TREADY : IN STD_LOGIC;
    lane_data_4_TREADY : IN STD_LOGIC;
    lane_data_5_TREADY : IN STD_LOGIC;
    lane_data_6_TREADY : IN STD_LOGIC;
    lane_data_7_TREADY : IN STD_LOGIC;
    lane_data_8_TREADY : IN STD_LOGIC;
    lane_data_9_TREADY : IN STD_LOGIC;
    lane_data_10_TREADY : IN STD_LOGIC;
    lane_data_11_TREADY : IN STD_LOGIC;
    lane_data_12_TREADY : IN STD_LOGIC;
    lane_data_13_TREADY : IN STD_LOGIC;
    lane_data_14_TREADY : IN STD_LOGIC;
    lane_data_15_TREADY : IN STD_LOGIC;
    lane_data_0_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    lane_data_0_TVALID : OUT STD_LOGIC;
    lane_data_1_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    lane_data_1_TVALID : OUT STD_LOGIC;
    lane_data_2_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    lane_data_2_TVALID : OUT STD_LOGIC;
    lane_data_3_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    lane_data_3_TVALID : OUT STD_LOGIC;
    lane_data_4_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    lane_data_4_TVALID : OUT STD_LOGIC;
    lane_data_5_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    lane_data_5_TVALID : OUT STD_LOGIC;
    lane_data_6_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    lane_data_6_TVALID : OUT STD_LOGIC;
    lane_data_7_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    lane_data_7_TVALID : OUT STD_LOGIC;
    lane_data_8_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    lane_data_8_TVALID : OUT STD_LOGIC;
    lane_data_9_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    lane_data_9_TVALID : OUT STD_LOGIC;
    lane_data_10_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    lane_data_10_TVALID : OUT STD_LOGIC;
    lane_data_11_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    lane_data_11_TVALID : OUT STD_LOGIC;
    lane_data_12_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    lane_data_12_TVALID : OUT STD_LOGIC;
    lane_data_13_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    lane_data_13_TVALID : OUT STD_LOGIC;
    lane_data_14_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    lane_data_14_TVALID : OUT STD_LOGIC;
    lane_data_15_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    lane_data_15_TVALID : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read9 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read10 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read11 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read12 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read13 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read14 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read15 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of process_lanes is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state1_io : BOOLEAN;
    signal regslice_forward_lane_data_0_U_apdone_blk : STD_LOGIC;
    signal regslice_forward_lane_data_1_U_apdone_blk : STD_LOGIC;
    signal regslice_forward_lane_data_2_U_apdone_blk : STD_LOGIC;
    signal regslice_forward_lane_data_3_U_apdone_blk : STD_LOGIC;
    signal regslice_forward_lane_data_4_U_apdone_blk : STD_LOGIC;
    signal regslice_forward_lane_data_5_U_apdone_blk : STD_LOGIC;
    signal regslice_forward_lane_data_6_U_apdone_blk : STD_LOGIC;
    signal regslice_forward_lane_data_7_U_apdone_blk : STD_LOGIC;
    signal regslice_forward_lane_data_8_U_apdone_blk : STD_LOGIC;
    signal regslice_forward_lane_data_9_U_apdone_blk : STD_LOGIC;
    signal regslice_forward_lane_data_10_U_apdone_blk : STD_LOGIC;
    signal regslice_forward_lane_data_11_U_apdone_blk : STD_LOGIC;
    signal regslice_forward_lane_data_12_U_apdone_blk : STD_LOGIC;
    signal regslice_forward_lane_data_13_U_apdone_blk : STD_LOGIC;
    signal regslice_forward_lane_data_14_U_apdone_blk : STD_LOGIC;
    signal regslice_forward_lane_data_15_U_apdone_blk : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal cycle_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal even_lane_z1_M_real : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal even_lane_z1_M_imag : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal even_lane_z1_M_real_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal even_lane_z1_M_imag_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal even_lane_z1_M_real_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal even_lane_z1_M_imag_2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal even_lane_z1_M_real_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal even_lane_z1_M_imag_3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal even_lane_z1_M_real_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal even_lane_z1_M_imag_4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal even_lane_z1_M_real_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal even_lane_z1_M_imag_5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal even_lane_z1_M_real_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal even_lane_z1_M_imag_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal even_lane_z1_M_real_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal even_lane_z1_M_imag_7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal delays_Array_M_real_ce0 : STD_LOGIC;
    signal delays_Array_M_real_we0 : STD_LOGIC;
    signal delays_Array_M_real_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_imag_ce0 : STD_LOGIC;
    signal delays_Array_M_imag_we0 : STD_LOGIC;
    signal delays_Array_M_imag_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_real_1_ce0 : STD_LOGIC;
    signal delays_Array_M_real_1_we0 : STD_LOGIC;
    signal delays_Array_M_real_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_imag_1_ce0 : STD_LOGIC;
    signal delays_Array_M_imag_1_we0 : STD_LOGIC;
    signal delays_Array_M_imag_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_real_2_ce0 : STD_LOGIC;
    signal delays_Array_M_real_2_we0 : STD_LOGIC;
    signal delays_Array_M_real_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_imag_2_ce0 : STD_LOGIC;
    signal delays_Array_M_imag_2_we0 : STD_LOGIC;
    signal delays_Array_M_imag_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_real_3_ce0 : STD_LOGIC;
    signal delays_Array_M_real_3_we0 : STD_LOGIC;
    signal delays_Array_M_real_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_imag_3_ce0 : STD_LOGIC;
    signal delays_Array_M_imag_3_we0 : STD_LOGIC;
    signal delays_Array_M_imag_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_real_4_ce0 : STD_LOGIC;
    signal delays_Array_M_real_4_we0 : STD_LOGIC;
    signal delays_Array_M_real_4_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_imag_4_ce0 : STD_LOGIC;
    signal delays_Array_M_imag_4_we0 : STD_LOGIC;
    signal delays_Array_M_imag_4_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_real_5_ce0 : STD_LOGIC;
    signal delays_Array_M_real_5_we0 : STD_LOGIC;
    signal delays_Array_M_real_5_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_imag_5_ce0 : STD_LOGIC;
    signal delays_Array_M_imag_5_we0 : STD_LOGIC;
    signal delays_Array_M_imag_5_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_real_6_ce0 : STD_LOGIC;
    signal delays_Array_M_real_6_we0 : STD_LOGIC;
    signal delays_Array_M_real_6_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_imag_6_ce0 : STD_LOGIC;
    signal delays_Array_M_imag_6_we0 : STD_LOGIC;
    signal delays_Array_M_imag_6_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_real_7_ce0 : STD_LOGIC;
    signal delays_Array_M_real_7_we0 : STD_LOGIC;
    signal delays_Array_M_real_7_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_imag_7_ce0 : STD_LOGIC;
    signal delays_Array_M_imag_7_we0 : STD_LOGIC;
    signal delays_Array_M_imag_7_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_real_8_ce0 : STD_LOGIC;
    signal delays_Array_M_real_8_we0 : STD_LOGIC;
    signal delays_Array_M_real_8_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_imag_8_ce0 : STD_LOGIC;
    signal delays_Array_M_imag_8_we0 : STD_LOGIC;
    signal delays_Array_M_imag_8_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_real_9_ce0 : STD_LOGIC;
    signal delays_Array_M_real_9_we0 : STD_LOGIC;
    signal delays_Array_M_real_9_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_imag_9_ce0 : STD_LOGIC;
    signal delays_Array_M_imag_9_we0 : STD_LOGIC;
    signal delays_Array_M_imag_9_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_real_10_ce0 : STD_LOGIC;
    signal delays_Array_M_real_10_we0 : STD_LOGIC;
    signal delays_Array_M_real_10_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_imag_10_ce0 : STD_LOGIC;
    signal delays_Array_M_imag_10_we0 : STD_LOGIC;
    signal delays_Array_M_imag_10_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_real_11_ce0 : STD_LOGIC;
    signal delays_Array_M_real_11_we0 : STD_LOGIC;
    signal delays_Array_M_real_11_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_imag_11_ce0 : STD_LOGIC;
    signal delays_Array_M_imag_11_we0 : STD_LOGIC;
    signal delays_Array_M_imag_11_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_real_12_ce0 : STD_LOGIC;
    signal delays_Array_M_real_12_we0 : STD_LOGIC;
    signal delays_Array_M_real_12_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_imag_12_ce0 : STD_LOGIC;
    signal delays_Array_M_imag_12_we0 : STD_LOGIC;
    signal delays_Array_M_imag_12_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_real_13_ce0 : STD_LOGIC;
    signal delays_Array_M_real_13_we0 : STD_LOGIC;
    signal delays_Array_M_real_13_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_imag_13_ce0 : STD_LOGIC;
    signal delays_Array_M_imag_13_we0 : STD_LOGIC;
    signal delays_Array_M_imag_13_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_real_14_ce0 : STD_LOGIC;
    signal delays_Array_M_real_14_we0 : STD_LOGIC;
    signal delays_Array_M_real_14_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_imag_14_ce0 : STD_LOGIC;
    signal delays_Array_M_imag_14_we0 : STD_LOGIC;
    signal delays_Array_M_imag_14_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_real_15_ce0 : STD_LOGIC;
    signal delays_Array_M_real_15_we0 : STD_LOGIC;
    signal delays_Array_M_real_15_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal delays_Array_M_imag_15_ce0 : STD_LOGIC;
    signal delays_Array_M_imag_15_we0 : STD_LOGIC;
    signal delays_Array_M_imag_15_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal lane_data_0_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal lane_data_1_TDATA_blk_n : STD_LOGIC;
    signal lane_data_2_TDATA_blk_n : STD_LOGIC;
    signal lane_data_3_TDATA_blk_n : STD_LOGIC;
    signal lane_data_4_TDATA_blk_n : STD_LOGIC;
    signal lane_data_5_TDATA_blk_n : STD_LOGIC;
    signal lane_data_6_TDATA_blk_n : STD_LOGIC;
    signal lane_data_7_TDATA_blk_n : STD_LOGIC;
    signal lane_data_8_TDATA_blk_n : STD_LOGIC;
    signal lane_data_9_TDATA_blk_n : STD_LOGIC;
    signal lane_data_10_TDATA_blk_n : STD_LOGIC;
    signal lane_data_11_TDATA_blk_n : STD_LOGIC;
    signal lane_data_12_TDATA_blk_n : STD_LOGIC;
    signal lane_data_13_TDATA_blk_n : STD_LOGIC;
    signal lane_data_14_TDATA_blk_n : STD_LOGIC;
    signal lane_data_15_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal xor_ln114_fu_464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln18_fu_490_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_1_fu_498_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_4_fu_600_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_5_fu_608_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_8_fu_710_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_9_fu_718_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_12_fu_820_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_13_fu_828_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_16_fu_930_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_17_fu_938_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_20_fu_1040_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_21_fu_1048_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_24_fu_1150_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_25_fu_1158_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_28_fu_1260_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_29_fu_1268_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal select_ln18_3_fu_563_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_2_fu_555_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_7_fu_673_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_6_fu_665_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_11_fu_783_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_10_fu_775_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_15_fu_893_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_14_fu_885_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_19_fu_1003_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_18_fu_995_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_23_fu_1113_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_22_fu_1105_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_27_fu_1223_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_26_fu_1215_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_31_fu_1333_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln18_30_fu_1325_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal lane_data_0_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal lane_data_0_TVALID_int : STD_LOGIC;
    signal lane_data_0_TREADY_int : STD_LOGIC;
    signal regslice_forward_lane_data_0_U_vld_out : STD_LOGIC;
    signal lane_data_1_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal lane_data_1_TVALID_int : STD_LOGIC;
    signal lane_data_1_TREADY_int : STD_LOGIC;
    signal regslice_forward_lane_data_1_U_vld_out : STD_LOGIC;
    signal lane_data_2_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal lane_data_2_TVALID_int : STD_LOGIC;
    signal lane_data_2_TREADY_int : STD_LOGIC;
    signal regslice_forward_lane_data_2_U_vld_out : STD_LOGIC;
    signal lane_data_3_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal lane_data_3_TVALID_int : STD_LOGIC;
    signal lane_data_3_TREADY_int : STD_LOGIC;
    signal regslice_forward_lane_data_3_U_vld_out : STD_LOGIC;
    signal lane_data_4_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal lane_data_4_TVALID_int : STD_LOGIC;
    signal lane_data_4_TREADY_int : STD_LOGIC;
    signal regslice_forward_lane_data_4_U_vld_out : STD_LOGIC;
    signal lane_data_5_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal lane_data_5_TVALID_int : STD_LOGIC;
    signal lane_data_5_TREADY_int : STD_LOGIC;
    signal regslice_forward_lane_data_5_U_vld_out : STD_LOGIC;
    signal lane_data_6_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal lane_data_6_TVALID_int : STD_LOGIC;
    signal lane_data_6_TREADY_int : STD_LOGIC;
    signal regslice_forward_lane_data_6_U_vld_out : STD_LOGIC;
    signal lane_data_7_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal lane_data_7_TVALID_int : STD_LOGIC;
    signal lane_data_7_TREADY_int : STD_LOGIC;
    signal regslice_forward_lane_data_7_U_vld_out : STD_LOGIC;
    signal lane_data_8_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal lane_data_8_TVALID_int : STD_LOGIC;
    signal lane_data_8_TREADY_int : STD_LOGIC;
    signal regslice_forward_lane_data_8_U_vld_out : STD_LOGIC;
    signal lane_data_9_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal lane_data_9_TVALID_int : STD_LOGIC;
    signal lane_data_9_TREADY_int : STD_LOGIC;
    signal regslice_forward_lane_data_9_U_vld_out : STD_LOGIC;
    signal lane_data_10_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal lane_data_10_TVALID_int : STD_LOGIC;
    signal lane_data_10_TREADY_int : STD_LOGIC;
    signal regslice_forward_lane_data_10_U_vld_out : STD_LOGIC;
    signal lane_data_11_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal lane_data_11_TVALID_int : STD_LOGIC;
    signal lane_data_11_TREADY_int : STD_LOGIC;
    signal regslice_forward_lane_data_11_U_vld_out : STD_LOGIC;
    signal lane_data_12_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal lane_data_12_TVALID_int : STD_LOGIC;
    signal lane_data_12_TREADY_int : STD_LOGIC;
    signal regslice_forward_lane_data_12_U_vld_out : STD_LOGIC;
    signal lane_data_13_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal lane_data_13_TVALID_int : STD_LOGIC;
    signal lane_data_13_TREADY_int : STD_LOGIC;
    signal regslice_forward_lane_data_13_U_vld_out : STD_LOGIC;
    signal lane_data_14_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal lane_data_14_TVALID_int : STD_LOGIC;
    signal lane_data_14_TREADY_int : STD_LOGIC;
    signal regslice_forward_lane_data_14_U_vld_out : STD_LOGIC;
    signal lane_data_15_TDATA_int : STD_LOGIC_VECTOR (31 downto 0);
    signal lane_data_15_TVALID_int : STD_LOGIC;
    signal lane_data_15_TREADY_int : STD_LOGIC;
    signal regslice_forward_lane_data_15_U_vld_out : STD_LOGIC;

    component process_lanes_delbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component regslice_forward IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    delays_Array_M_real_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_real_ce0,
        we0 => delays_Array_M_real_we0,
        d0 => p_read8,
        q0 => delays_Array_M_real_q0);

    delays_Array_M_imag_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_imag_ce0,
        we0 => delays_Array_M_imag_we0,
        d0 => p_read,
        q0 => delays_Array_M_imag_q0);

    delays_Array_M_real_1_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_real_1_ce0,
        we0 => delays_Array_M_real_1_we0,
        d0 => p_read8,
        q0 => delays_Array_M_real_1_q0);

    delays_Array_M_imag_1_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_imag_1_ce0,
        we0 => delays_Array_M_imag_1_we0,
        d0 => p_read,
        q0 => delays_Array_M_imag_1_q0);

    delays_Array_M_real_2_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_real_2_ce0,
        we0 => delays_Array_M_real_2_we0,
        d0 => p_read9,
        q0 => delays_Array_M_real_2_q0);

    delays_Array_M_imag_2_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_imag_2_ce0,
        we0 => delays_Array_M_imag_2_we0,
        d0 => p_read1,
        q0 => delays_Array_M_imag_2_q0);

    delays_Array_M_real_3_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_real_3_ce0,
        we0 => delays_Array_M_real_3_we0,
        d0 => p_read9,
        q0 => delays_Array_M_real_3_q0);

    delays_Array_M_imag_3_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_imag_3_ce0,
        we0 => delays_Array_M_imag_3_we0,
        d0 => p_read1,
        q0 => delays_Array_M_imag_3_q0);

    delays_Array_M_real_4_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_real_4_ce0,
        we0 => delays_Array_M_real_4_we0,
        d0 => p_read10,
        q0 => delays_Array_M_real_4_q0);

    delays_Array_M_imag_4_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_imag_4_ce0,
        we0 => delays_Array_M_imag_4_we0,
        d0 => p_read2,
        q0 => delays_Array_M_imag_4_q0);

    delays_Array_M_real_5_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_real_5_ce0,
        we0 => delays_Array_M_real_5_we0,
        d0 => p_read10,
        q0 => delays_Array_M_real_5_q0);

    delays_Array_M_imag_5_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_imag_5_ce0,
        we0 => delays_Array_M_imag_5_we0,
        d0 => p_read2,
        q0 => delays_Array_M_imag_5_q0);

    delays_Array_M_real_6_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_real_6_ce0,
        we0 => delays_Array_M_real_6_we0,
        d0 => p_read11,
        q0 => delays_Array_M_real_6_q0);

    delays_Array_M_imag_6_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_imag_6_ce0,
        we0 => delays_Array_M_imag_6_we0,
        d0 => p_read3,
        q0 => delays_Array_M_imag_6_q0);

    delays_Array_M_real_7_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_real_7_ce0,
        we0 => delays_Array_M_real_7_we0,
        d0 => p_read11,
        q0 => delays_Array_M_real_7_q0);

    delays_Array_M_imag_7_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_imag_7_ce0,
        we0 => delays_Array_M_imag_7_we0,
        d0 => p_read3,
        q0 => delays_Array_M_imag_7_q0);

    delays_Array_M_real_8_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_real_8_ce0,
        we0 => delays_Array_M_real_8_we0,
        d0 => p_read12,
        q0 => delays_Array_M_real_8_q0);

    delays_Array_M_imag_8_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_imag_8_ce0,
        we0 => delays_Array_M_imag_8_we0,
        d0 => p_read4,
        q0 => delays_Array_M_imag_8_q0);

    delays_Array_M_real_9_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_real_9_ce0,
        we0 => delays_Array_M_real_9_we0,
        d0 => p_read12,
        q0 => delays_Array_M_real_9_q0);

    delays_Array_M_imag_9_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_imag_9_ce0,
        we0 => delays_Array_M_imag_9_we0,
        d0 => p_read4,
        q0 => delays_Array_M_imag_9_q0);

    delays_Array_M_real_10_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_real_10_ce0,
        we0 => delays_Array_M_real_10_we0,
        d0 => p_read13,
        q0 => delays_Array_M_real_10_q0);

    delays_Array_M_imag_10_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_imag_10_ce0,
        we0 => delays_Array_M_imag_10_we0,
        d0 => p_read5,
        q0 => delays_Array_M_imag_10_q0);

    delays_Array_M_real_11_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_real_11_ce0,
        we0 => delays_Array_M_real_11_we0,
        d0 => p_read13,
        q0 => delays_Array_M_real_11_q0);

    delays_Array_M_imag_11_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_imag_11_ce0,
        we0 => delays_Array_M_imag_11_we0,
        d0 => p_read5,
        q0 => delays_Array_M_imag_11_q0);

    delays_Array_M_real_12_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_real_12_ce0,
        we0 => delays_Array_M_real_12_we0,
        d0 => p_read14,
        q0 => delays_Array_M_real_12_q0);

    delays_Array_M_imag_12_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_imag_12_ce0,
        we0 => delays_Array_M_imag_12_we0,
        d0 => p_read6,
        q0 => delays_Array_M_imag_12_q0);

    delays_Array_M_real_13_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_real_13_ce0,
        we0 => delays_Array_M_real_13_we0,
        d0 => p_read14,
        q0 => delays_Array_M_real_13_q0);

    delays_Array_M_imag_13_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_imag_13_ce0,
        we0 => delays_Array_M_imag_13_we0,
        d0 => p_read6,
        q0 => delays_Array_M_imag_13_q0);

    delays_Array_M_real_14_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_real_14_ce0,
        we0 => delays_Array_M_real_14_we0,
        d0 => p_read15,
        q0 => delays_Array_M_real_14_q0);

    delays_Array_M_imag_14_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_imag_14_ce0,
        we0 => delays_Array_M_imag_14_we0,
        d0 => p_read7,
        q0 => delays_Array_M_imag_14_q0);

    delays_Array_M_real_15_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_real_15_ce0,
        we0 => delays_Array_M_real_15_we0,
        d0 => p_read15,
        q0 => delays_Array_M_real_15_q0);

    delays_Array_M_imag_15_U : component process_lanes_delbkb
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv7_7F,
        ce0 => delays_Array_M_imag_15_ce0,
        we0 => delays_Array_M_imag_15_we0,
        d0 => p_read7,
        q0 => delays_Array_M_imag_15_q0);

    regslice_forward_lane_data_0_U : component regslice_forward
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lane_data_0_TDATA_int,
        vld_in => lane_data_0_TVALID_int,
        ack_in => lane_data_0_TREADY_int,
        data_out => lane_data_0_TDATA,
        vld_out => regslice_forward_lane_data_0_U_vld_out,
        ack_out => lane_data_0_TREADY,
        apdone_blk => regslice_forward_lane_data_0_U_apdone_blk);

    regslice_forward_lane_data_1_U : component regslice_forward
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lane_data_1_TDATA_int,
        vld_in => lane_data_1_TVALID_int,
        ack_in => lane_data_1_TREADY_int,
        data_out => lane_data_1_TDATA,
        vld_out => regslice_forward_lane_data_1_U_vld_out,
        ack_out => lane_data_1_TREADY,
        apdone_blk => regslice_forward_lane_data_1_U_apdone_blk);

    regslice_forward_lane_data_2_U : component regslice_forward
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lane_data_2_TDATA_int,
        vld_in => lane_data_2_TVALID_int,
        ack_in => lane_data_2_TREADY_int,
        data_out => lane_data_2_TDATA,
        vld_out => regslice_forward_lane_data_2_U_vld_out,
        ack_out => lane_data_2_TREADY,
        apdone_blk => regslice_forward_lane_data_2_U_apdone_blk);

    regslice_forward_lane_data_3_U : component regslice_forward
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lane_data_3_TDATA_int,
        vld_in => lane_data_3_TVALID_int,
        ack_in => lane_data_3_TREADY_int,
        data_out => lane_data_3_TDATA,
        vld_out => regslice_forward_lane_data_3_U_vld_out,
        ack_out => lane_data_3_TREADY,
        apdone_blk => regslice_forward_lane_data_3_U_apdone_blk);

    regslice_forward_lane_data_4_U : component regslice_forward
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lane_data_4_TDATA_int,
        vld_in => lane_data_4_TVALID_int,
        ack_in => lane_data_4_TREADY_int,
        data_out => lane_data_4_TDATA,
        vld_out => regslice_forward_lane_data_4_U_vld_out,
        ack_out => lane_data_4_TREADY,
        apdone_blk => regslice_forward_lane_data_4_U_apdone_blk);

    regslice_forward_lane_data_5_U : component regslice_forward
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lane_data_5_TDATA_int,
        vld_in => lane_data_5_TVALID_int,
        ack_in => lane_data_5_TREADY_int,
        data_out => lane_data_5_TDATA,
        vld_out => regslice_forward_lane_data_5_U_vld_out,
        ack_out => lane_data_5_TREADY,
        apdone_blk => regslice_forward_lane_data_5_U_apdone_blk);

    regslice_forward_lane_data_6_U : component regslice_forward
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lane_data_6_TDATA_int,
        vld_in => lane_data_6_TVALID_int,
        ack_in => lane_data_6_TREADY_int,
        data_out => lane_data_6_TDATA,
        vld_out => regslice_forward_lane_data_6_U_vld_out,
        ack_out => lane_data_6_TREADY,
        apdone_blk => regslice_forward_lane_data_6_U_apdone_blk);

    regslice_forward_lane_data_7_U : component regslice_forward
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lane_data_7_TDATA_int,
        vld_in => lane_data_7_TVALID_int,
        ack_in => lane_data_7_TREADY_int,
        data_out => lane_data_7_TDATA,
        vld_out => regslice_forward_lane_data_7_U_vld_out,
        ack_out => lane_data_7_TREADY,
        apdone_blk => regslice_forward_lane_data_7_U_apdone_blk);

    regslice_forward_lane_data_8_U : component regslice_forward
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lane_data_8_TDATA_int,
        vld_in => lane_data_8_TVALID_int,
        ack_in => lane_data_8_TREADY_int,
        data_out => lane_data_8_TDATA,
        vld_out => regslice_forward_lane_data_8_U_vld_out,
        ack_out => lane_data_8_TREADY,
        apdone_blk => regslice_forward_lane_data_8_U_apdone_blk);

    regslice_forward_lane_data_9_U : component regslice_forward
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lane_data_9_TDATA_int,
        vld_in => lane_data_9_TVALID_int,
        ack_in => lane_data_9_TREADY_int,
        data_out => lane_data_9_TDATA,
        vld_out => regslice_forward_lane_data_9_U_vld_out,
        ack_out => lane_data_9_TREADY,
        apdone_blk => regslice_forward_lane_data_9_U_apdone_blk);

    regslice_forward_lane_data_10_U : component regslice_forward
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lane_data_10_TDATA_int,
        vld_in => lane_data_10_TVALID_int,
        ack_in => lane_data_10_TREADY_int,
        data_out => lane_data_10_TDATA,
        vld_out => regslice_forward_lane_data_10_U_vld_out,
        ack_out => lane_data_10_TREADY,
        apdone_blk => regslice_forward_lane_data_10_U_apdone_blk);

    regslice_forward_lane_data_11_U : component regslice_forward
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lane_data_11_TDATA_int,
        vld_in => lane_data_11_TVALID_int,
        ack_in => lane_data_11_TREADY_int,
        data_out => lane_data_11_TDATA,
        vld_out => regslice_forward_lane_data_11_U_vld_out,
        ack_out => lane_data_11_TREADY,
        apdone_blk => regslice_forward_lane_data_11_U_apdone_blk);

    regslice_forward_lane_data_12_U : component regslice_forward
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lane_data_12_TDATA_int,
        vld_in => lane_data_12_TVALID_int,
        ack_in => lane_data_12_TREADY_int,
        data_out => lane_data_12_TDATA,
        vld_out => regslice_forward_lane_data_12_U_vld_out,
        ack_out => lane_data_12_TREADY,
        apdone_blk => regslice_forward_lane_data_12_U_apdone_blk);

    regslice_forward_lane_data_13_U : component regslice_forward
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lane_data_13_TDATA_int,
        vld_in => lane_data_13_TVALID_int,
        ack_in => lane_data_13_TREADY_int,
        data_out => lane_data_13_TDATA,
        vld_out => regslice_forward_lane_data_13_U_vld_out,
        ack_out => lane_data_13_TREADY,
        apdone_blk => regslice_forward_lane_data_13_U_apdone_blk);

    regslice_forward_lane_data_14_U : component regslice_forward
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lane_data_14_TDATA_int,
        vld_in => lane_data_14_TVALID_int,
        ack_in => lane_data_14_TREADY_int,
        data_out => lane_data_14_TDATA,
        vld_out => regslice_forward_lane_data_14_U_vld_out,
        ack_out => lane_data_14_TREADY,
        apdone_blk => regslice_forward_lane_data_14_U_apdone_blk);

    regslice_forward_lane_data_15_U : component regslice_forward
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => lane_data_15_TDATA_int,
        vld_in => lane_data_15_TVALID_int,
        ack_in => lane_data_15_TREADY_int,
        data_out => lane_data_15_TDATA,
        vld_out => regslice_forward_lane_data_15_U_vld_out,
        ack_out => lane_data_15_TREADY,
        apdone_blk => regslice_forward_lane_data_15_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                cycle_V <= xor_ln114_fu_464_p2;
                even_lane_z1_M_imag <= select_ln18_1_fu_498_p3;
                even_lane_z1_M_imag_1 <= select_ln18_5_fu_608_p3;
                even_lane_z1_M_imag_2 <= select_ln18_9_fu_718_p3;
                even_lane_z1_M_imag_3 <= select_ln18_13_fu_828_p3;
                even_lane_z1_M_imag_4 <= select_ln18_17_fu_938_p3;
                even_lane_z1_M_imag_5 <= select_ln18_21_fu_1048_p3;
                even_lane_z1_M_imag_6 <= select_ln18_25_fu_1158_p3;
                even_lane_z1_M_imag_7 <= select_ln18_29_fu_1268_p3;
                even_lane_z1_M_real <= select_ln18_fu_490_p3;
                even_lane_z1_M_real_1 <= select_ln18_4_fu_600_p3;
                even_lane_z1_M_real_2 <= select_ln18_8_fu_710_p3;
                even_lane_z1_M_real_3 <= select_ln18_12_fu_820_p3;
                even_lane_z1_M_real_4 <= select_ln18_16_fu_930_p3;
                even_lane_z1_M_real_5 <= select_ln18_20_fu_1040_p3;
                even_lane_z1_M_real_6 <= select_ln18_24_fu_1150_p3;
                even_lane_z1_M_real_7 <= select_ln18_28_fu_1260_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, regslice_forward_lane_data_0_U_apdone_blk, regslice_forward_lane_data_1_U_apdone_blk, regslice_forward_lane_data_2_U_apdone_blk, regslice_forward_lane_data_3_U_apdone_blk, regslice_forward_lane_data_4_U_apdone_blk, regslice_forward_lane_data_5_U_apdone_blk, regslice_forward_lane_data_6_U_apdone_blk, regslice_forward_lane_data_7_U_apdone_blk, regslice_forward_lane_data_8_U_apdone_blk, regslice_forward_lane_data_9_U_apdone_blk, regslice_forward_lane_data_10_U_apdone_blk, regslice_forward_lane_data_11_U_apdone_blk, regslice_forward_lane_data_12_U_apdone_blk, regslice_forward_lane_data_13_U_apdone_blk, regslice_forward_lane_data_14_U_apdone_blk, regslice_forward_lane_data_15_U_apdone_blk)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((regslice_forward_lane_data_4_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_3_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_2_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_1_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_0_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_15_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_14_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_13_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_12_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_11_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_10_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_9_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_8_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_7_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_6_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_5_U_apdone_blk = ap_const_logic_1))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_block_state1_io, regslice_forward_lane_data_0_U_apdone_blk, regslice_forward_lane_data_1_U_apdone_blk, regslice_forward_lane_data_2_U_apdone_blk, regslice_forward_lane_data_3_U_apdone_blk, regslice_forward_lane_data_4_U_apdone_blk, regslice_forward_lane_data_5_U_apdone_blk, regslice_forward_lane_data_6_U_apdone_blk, regslice_forward_lane_data_7_U_apdone_blk, regslice_forward_lane_data_8_U_apdone_blk, regslice_forward_lane_data_9_U_apdone_blk, regslice_forward_lane_data_10_U_apdone_blk, regslice_forward_lane_data_11_U_apdone_blk, regslice_forward_lane_data_12_U_apdone_blk, regslice_forward_lane_data_13_U_apdone_blk, regslice_forward_lane_data_14_U_apdone_blk, regslice_forward_lane_data_15_U_apdone_blk, ap_block_state2_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1_io) or (ap_done_reg = ap_const_logic_1))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((regslice_forward_lane_data_4_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_3_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_2_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_1_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_0_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_15_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_14_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_13_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_12_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_11_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_10_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_9_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_8_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_7_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_6_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_5_U_apdone_blk = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state2_io))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_done_reg, ap_enable_reg_pp0_iter1, ap_block_state1_io, regslice_forward_lane_data_0_U_apdone_blk, regslice_forward_lane_data_1_U_apdone_blk, regslice_forward_lane_data_2_U_apdone_blk, regslice_forward_lane_data_3_U_apdone_blk, regslice_forward_lane_data_4_U_apdone_blk, regslice_forward_lane_data_5_U_apdone_blk, regslice_forward_lane_data_6_U_apdone_blk, regslice_forward_lane_data_7_U_apdone_blk, regslice_forward_lane_data_8_U_apdone_blk, regslice_forward_lane_data_9_U_apdone_blk, regslice_forward_lane_data_10_U_apdone_blk, regslice_forward_lane_data_11_U_apdone_blk, regslice_forward_lane_data_12_U_apdone_blk, regslice_forward_lane_data_13_U_apdone_blk, regslice_forward_lane_data_14_U_apdone_blk, regslice_forward_lane_data_15_U_apdone_blk, ap_block_state2_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_start = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state1_io) or (ap_done_reg = ap_const_logic_1))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((regslice_forward_lane_data_4_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_3_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_2_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_1_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_0_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_15_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_14_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_13_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_12_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_11_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_10_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_9_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_8_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_7_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_6_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_5_U_apdone_blk = ap_const_logic_1) or (ap_const_boolean_1 = ap_block_state2_io))));
    end process;


    ap_block_state1_io_assign_proc : process(lane_data_0_TREADY_int, lane_data_1_TREADY_int, lane_data_2_TREADY_int, lane_data_3_TREADY_int, lane_data_4_TREADY_int, lane_data_5_TREADY_int, lane_data_6_TREADY_int, lane_data_7_TREADY_int, lane_data_8_TREADY_int, lane_data_9_TREADY_int, lane_data_10_TREADY_int, lane_data_11_TREADY_int, lane_data_12_TREADY_int, lane_data_13_TREADY_int, lane_data_14_TREADY_int, lane_data_15_TREADY_int)
    begin
                ap_block_state1_io <= ((lane_data_3_TREADY_int = ap_const_logic_0) or (lane_data_2_TREADY_int = ap_const_logic_0) or (lane_data_1_TREADY_int = ap_const_logic_0) or (lane_data_0_TREADY_int = ap_const_logic_0) or (lane_data_15_TREADY_int = ap_const_logic_0) or (lane_data_14_TREADY_int = ap_const_logic_0) or (lane_data_13_TREADY_int = ap_const_logic_0) or (lane_data_12_TREADY_int = ap_const_logic_0) or (lane_data_11_TREADY_int = ap_const_logic_0) or (lane_data_10_TREADY_int = ap_const_logic_0) or (lane_data_9_TREADY_int = ap_const_logic_0) or (lane_data_8_TREADY_int = ap_const_logic_0) or (lane_data_7_TREADY_int = ap_const_logic_0) or (lane_data_6_TREADY_int = ap_const_logic_0) or (lane_data_5_TREADY_int = ap_const_logic_0) or (lane_data_4_TREADY_int = ap_const_logic_0));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_io_assign_proc : process(lane_data_0_TREADY_int, lane_data_1_TREADY_int, lane_data_2_TREADY_int, lane_data_3_TREADY_int, lane_data_4_TREADY_int, lane_data_5_TREADY_int, lane_data_6_TREADY_int, lane_data_7_TREADY_int, lane_data_8_TREADY_int, lane_data_9_TREADY_int, lane_data_10_TREADY_int, lane_data_11_TREADY_int, lane_data_12_TREADY_int, lane_data_13_TREADY_int, lane_data_14_TREADY_int, lane_data_15_TREADY_int)
    begin
                ap_block_state2_io <= ((lane_data_3_TREADY_int = ap_const_logic_0) or (lane_data_2_TREADY_int = ap_const_logic_0) or (lane_data_1_TREADY_int = ap_const_logic_0) or (lane_data_0_TREADY_int = ap_const_logic_0) or (lane_data_15_TREADY_int = ap_const_logic_0) or (lane_data_14_TREADY_int = ap_const_logic_0) or (lane_data_13_TREADY_int = ap_const_logic_0) or (lane_data_12_TREADY_int = ap_const_logic_0) or (lane_data_11_TREADY_int = ap_const_logic_0) or (lane_data_10_TREADY_int = ap_const_logic_0) or (lane_data_9_TREADY_int = ap_const_logic_0) or (lane_data_8_TREADY_int = ap_const_logic_0) or (lane_data_7_TREADY_int = ap_const_logic_0) or (lane_data_6_TREADY_int = ap_const_logic_0) or (lane_data_5_TREADY_int = ap_const_logic_0) or (lane_data_4_TREADY_int = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(regslice_forward_lane_data_0_U_apdone_blk, regslice_forward_lane_data_1_U_apdone_blk, regslice_forward_lane_data_2_U_apdone_blk, regslice_forward_lane_data_3_U_apdone_blk, regslice_forward_lane_data_4_U_apdone_blk, regslice_forward_lane_data_5_U_apdone_blk, regslice_forward_lane_data_6_U_apdone_blk, regslice_forward_lane_data_7_U_apdone_blk, regslice_forward_lane_data_8_U_apdone_blk, regslice_forward_lane_data_9_U_apdone_blk, regslice_forward_lane_data_10_U_apdone_blk, regslice_forward_lane_data_11_U_apdone_blk, regslice_forward_lane_data_12_U_apdone_blk, regslice_forward_lane_data_13_U_apdone_blk, regslice_forward_lane_data_14_U_apdone_blk, regslice_forward_lane_data_15_U_apdone_blk)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((regslice_forward_lane_data_4_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_3_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_2_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_1_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_0_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_15_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_14_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_13_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_12_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_11_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_10_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_9_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_8_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_7_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_6_U_apdone_blk = ap_const_logic_1) or (regslice_forward_lane_data_5_U_apdone_blk = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_10_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_10_ce0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_imag_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_10_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_10_we0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_imag_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_11_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_11_ce0 <= cycle_V(0);
        else 
            delays_Array_M_imag_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_11_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_11_we0 <= cycle_V(0);
        else 
            delays_Array_M_imag_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_12_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_12_ce0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_imag_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_12_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_12_we0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_imag_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_13_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_13_ce0 <= cycle_V(0);
        else 
            delays_Array_M_imag_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_13_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_13_we0 <= cycle_V(0);
        else 
            delays_Array_M_imag_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_14_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_14_ce0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_imag_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_14_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_14_we0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_imag_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_15_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_15_ce0 <= cycle_V(0);
        else 
            delays_Array_M_imag_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_15_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_15_we0 <= cycle_V(0);
        else 
            delays_Array_M_imag_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_1_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_1_ce0 <= cycle_V(0);
        else 
            delays_Array_M_imag_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_1_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_1_we0 <= cycle_V(0);
        else 
            delays_Array_M_imag_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_2_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_2_ce0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_imag_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_2_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_2_we0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_imag_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_3_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_3_ce0 <= cycle_V(0);
        else 
            delays_Array_M_imag_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_3_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_3_we0 <= cycle_V(0);
        else 
            delays_Array_M_imag_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_4_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_4_ce0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_imag_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_4_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_4_we0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_imag_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_5_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_5_ce0 <= cycle_V(0);
        else 
            delays_Array_M_imag_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_5_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_5_we0 <= cycle_V(0);
        else 
            delays_Array_M_imag_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_6_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_6_ce0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_imag_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_6_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_6_we0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_imag_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_7_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_7_ce0 <= cycle_V(0);
        else 
            delays_Array_M_imag_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_7_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_7_we0 <= cycle_V(0);
        else 
            delays_Array_M_imag_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_8_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_8_ce0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_imag_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_8_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_8_we0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_imag_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_9_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_9_ce0 <= cycle_V(0);
        else 
            delays_Array_M_imag_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_9_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_9_we0 <= cycle_V(0);
        else 
            delays_Array_M_imag_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_ce0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_imag_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_imag_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_imag_we0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_imag_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_10_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_10_ce0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_real_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_10_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_10_we0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_real_10_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_11_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_11_ce0 <= cycle_V(0);
        else 
            delays_Array_M_real_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_11_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_11_we0 <= cycle_V(0);
        else 
            delays_Array_M_real_11_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_12_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_12_ce0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_real_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_12_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_12_we0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_real_12_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_13_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_13_ce0 <= cycle_V(0);
        else 
            delays_Array_M_real_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_13_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_13_we0 <= cycle_V(0);
        else 
            delays_Array_M_real_13_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_14_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_14_ce0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_real_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_14_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_14_we0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_real_14_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_15_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_15_ce0 <= cycle_V(0);
        else 
            delays_Array_M_real_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_15_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_15_we0 <= cycle_V(0);
        else 
            delays_Array_M_real_15_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_1_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_1_ce0 <= cycle_V(0);
        else 
            delays_Array_M_real_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_1_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_1_we0 <= cycle_V(0);
        else 
            delays_Array_M_real_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_2_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_2_ce0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_real_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_2_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_2_we0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_real_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_3_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_3_ce0 <= cycle_V(0);
        else 
            delays_Array_M_real_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_3_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_3_we0 <= cycle_V(0);
        else 
            delays_Array_M_real_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_4_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_4_ce0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_real_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_4_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_4_we0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_real_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_5_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_5_ce0 <= cycle_V(0);
        else 
            delays_Array_M_real_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_5_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_5_we0 <= cycle_V(0);
        else 
            delays_Array_M_real_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_6_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_6_ce0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_real_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_6_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_6_we0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_real_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_7_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_7_ce0 <= cycle_V(0);
        else 
            delays_Array_M_real_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_7_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_7_we0 <= cycle_V(0);
        else 
            delays_Array_M_real_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_8_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_8_ce0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_real_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_8_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_8_we0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_real_8_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_9_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_9_ce0 <= cycle_V(0);
        else 
            delays_Array_M_real_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_9_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, cycle_V)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_9_we0 <= cycle_V(0);
        else 
            delays_Array_M_real_9_we0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_ce0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_real_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    delays_Array_M_real_we0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, xor_ln114_fu_464_p2)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            delays_Array_M_real_we0 <= xor_ln114_fu_464_p2(0);
        else 
            delays_Array_M_real_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lane_data_0_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, lane_data_0_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            lane_data_0_TDATA_blk_n <= lane_data_0_TREADY_int;
        else 
            lane_data_0_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lane_data_0_TDATA_int <= (even_lane_z1_M_imag & even_lane_z1_M_real);
    lane_data_0_TVALID <= regslice_forward_lane_data_0_U_vld_out;

    lane_data_0_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lane_data_0_TVALID_int <= ap_const_logic_1;
        else 
            lane_data_0_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    lane_data_10_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, lane_data_10_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            lane_data_10_TDATA_blk_n <= lane_data_10_TREADY_int;
        else 
            lane_data_10_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lane_data_10_TDATA_int <= (even_lane_z1_M_imag_5 & even_lane_z1_M_real_5);
    lane_data_10_TVALID <= regslice_forward_lane_data_10_U_vld_out;

    lane_data_10_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lane_data_10_TVALID_int <= ap_const_logic_1;
        else 
            lane_data_10_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    lane_data_11_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, lane_data_11_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            lane_data_11_TDATA_blk_n <= lane_data_11_TREADY_int;
        else 
            lane_data_11_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lane_data_11_TDATA_int <= (select_ln18_23_fu_1113_p3 & select_ln18_22_fu_1105_p3);
    lane_data_11_TVALID <= regslice_forward_lane_data_11_U_vld_out;

    lane_data_11_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lane_data_11_TVALID_int <= ap_const_logic_1;
        else 
            lane_data_11_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    lane_data_12_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, lane_data_12_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            lane_data_12_TDATA_blk_n <= lane_data_12_TREADY_int;
        else 
            lane_data_12_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lane_data_12_TDATA_int <= (even_lane_z1_M_imag_6 & even_lane_z1_M_real_6);
    lane_data_12_TVALID <= regslice_forward_lane_data_12_U_vld_out;

    lane_data_12_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lane_data_12_TVALID_int <= ap_const_logic_1;
        else 
            lane_data_12_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    lane_data_13_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, lane_data_13_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            lane_data_13_TDATA_blk_n <= lane_data_13_TREADY_int;
        else 
            lane_data_13_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lane_data_13_TDATA_int <= (select_ln18_27_fu_1223_p3 & select_ln18_26_fu_1215_p3);
    lane_data_13_TVALID <= regslice_forward_lane_data_13_U_vld_out;

    lane_data_13_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lane_data_13_TVALID_int <= ap_const_logic_1;
        else 
            lane_data_13_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    lane_data_14_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, lane_data_14_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            lane_data_14_TDATA_blk_n <= lane_data_14_TREADY_int;
        else 
            lane_data_14_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lane_data_14_TDATA_int <= (even_lane_z1_M_imag_7 & even_lane_z1_M_real_7);
    lane_data_14_TVALID <= regslice_forward_lane_data_14_U_vld_out;

    lane_data_14_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lane_data_14_TVALID_int <= ap_const_logic_1;
        else 
            lane_data_14_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    lane_data_15_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, lane_data_15_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            lane_data_15_TDATA_blk_n <= lane_data_15_TREADY_int;
        else 
            lane_data_15_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lane_data_15_TDATA_int <= (select_ln18_31_fu_1333_p3 & select_ln18_30_fu_1325_p3);
    lane_data_15_TVALID <= regslice_forward_lane_data_15_U_vld_out;

    lane_data_15_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lane_data_15_TVALID_int <= ap_const_logic_1;
        else 
            lane_data_15_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    lane_data_1_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, lane_data_1_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            lane_data_1_TDATA_blk_n <= lane_data_1_TREADY_int;
        else 
            lane_data_1_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lane_data_1_TDATA_int <= (select_ln18_3_fu_563_p3 & select_ln18_2_fu_555_p3);
    lane_data_1_TVALID <= regslice_forward_lane_data_1_U_vld_out;

    lane_data_1_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lane_data_1_TVALID_int <= ap_const_logic_1;
        else 
            lane_data_1_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    lane_data_2_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, lane_data_2_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            lane_data_2_TDATA_blk_n <= lane_data_2_TREADY_int;
        else 
            lane_data_2_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lane_data_2_TDATA_int <= (even_lane_z1_M_imag_1 & even_lane_z1_M_real_1);
    lane_data_2_TVALID <= regslice_forward_lane_data_2_U_vld_out;

    lane_data_2_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lane_data_2_TVALID_int <= ap_const_logic_1;
        else 
            lane_data_2_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    lane_data_3_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, lane_data_3_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            lane_data_3_TDATA_blk_n <= lane_data_3_TREADY_int;
        else 
            lane_data_3_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lane_data_3_TDATA_int <= (select_ln18_7_fu_673_p3 & select_ln18_6_fu_665_p3);
    lane_data_3_TVALID <= regslice_forward_lane_data_3_U_vld_out;

    lane_data_3_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lane_data_3_TVALID_int <= ap_const_logic_1;
        else 
            lane_data_3_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    lane_data_4_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, lane_data_4_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            lane_data_4_TDATA_blk_n <= lane_data_4_TREADY_int;
        else 
            lane_data_4_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lane_data_4_TDATA_int <= (even_lane_z1_M_imag_2 & even_lane_z1_M_real_2);
    lane_data_4_TVALID <= regslice_forward_lane_data_4_U_vld_out;

    lane_data_4_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lane_data_4_TVALID_int <= ap_const_logic_1;
        else 
            lane_data_4_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    lane_data_5_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, lane_data_5_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            lane_data_5_TDATA_blk_n <= lane_data_5_TREADY_int;
        else 
            lane_data_5_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lane_data_5_TDATA_int <= (select_ln18_11_fu_783_p3 & select_ln18_10_fu_775_p3);
    lane_data_5_TVALID <= regslice_forward_lane_data_5_U_vld_out;

    lane_data_5_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lane_data_5_TVALID_int <= ap_const_logic_1;
        else 
            lane_data_5_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    lane_data_6_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, lane_data_6_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            lane_data_6_TDATA_blk_n <= lane_data_6_TREADY_int;
        else 
            lane_data_6_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lane_data_6_TDATA_int <= (even_lane_z1_M_imag_3 & even_lane_z1_M_real_3);
    lane_data_6_TVALID <= regslice_forward_lane_data_6_U_vld_out;

    lane_data_6_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lane_data_6_TVALID_int <= ap_const_logic_1;
        else 
            lane_data_6_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    lane_data_7_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, lane_data_7_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            lane_data_7_TDATA_blk_n <= lane_data_7_TREADY_int;
        else 
            lane_data_7_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lane_data_7_TDATA_int <= (select_ln18_15_fu_893_p3 & select_ln18_14_fu_885_p3);
    lane_data_7_TVALID <= regslice_forward_lane_data_7_U_vld_out;

    lane_data_7_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lane_data_7_TVALID_int <= ap_const_logic_1;
        else 
            lane_data_7_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    lane_data_8_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, lane_data_8_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            lane_data_8_TDATA_blk_n <= lane_data_8_TREADY_int;
        else 
            lane_data_8_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lane_data_8_TDATA_int <= (even_lane_z1_M_imag_4 & even_lane_z1_M_real_4);
    lane_data_8_TVALID <= regslice_forward_lane_data_8_U_vld_out;

    lane_data_8_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lane_data_8_TVALID_int <= ap_const_logic_1;
        else 
            lane_data_8_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;


    lane_data_9_TDATA_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, lane_data_9_TREADY_int)
    begin
        if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            lane_data_9_TDATA_blk_n <= lane_data_9_TREADY_int;
        else 
            lane_data_9_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    lane_data_9_TDATA_int <= (select_ln18_19_fu_1003_p3 & select_ln18_18_fu_995_p3);
    lane_data_9_TVALID <= regslice_forward_lane_data_9_U_vld_out;

    lane_data_9_TVALID_int_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lane_data_9_TVALID_int <= ap_const_logic_1;
        else 
            lane_data_9_TVALID_int <= ap_const_logic_0;
        end if; 
    end process;

    select_ln18_10_fu_775_p3 <= 
        p_read10 when (cycle_V(0) = '1') else 
        delays_Array_M_real_5_q0;
    select_ln18_11_fu_783_p3 <= 
        p_read2 when (cycle_V(0) = '1') else 
        delays_Array_M_imag_5_q0;
    select_ln18_12_fu_820_p3 <= 
        delays_Array_M_real_6_q0 when (cycle_V(0) = '1') else 
        p_read11;
    select_ln18_13_fu_828_p3 <= 
        delays_Array_M_imag_6_q0 when (cycle_V(0) = '1') else 
        p_read3;
    select_ln18_14_fu_885_p3 <= 
        p_read11 when (cycle_V(0) = '1') else 
        delays_Array_M_real_7_q0;
    select_ln18_15_fu_893_p3 <= 
        p_read3 when (cycle_V(0) = '1') else 
        delays_Array_M_imag_7_q0;
    select_ln18_16_fu_930_p3 <= 
        delays_Array_M_real_8_q0 when (cycle_V(0) = '1') else 
        p_read12;
    select_ln18_17_fu_938_p3 <= 
        delays_Array_M_imag_8_q0 when (cycle_V(0) = '1') else 
        p_read4;
    select_ln18_18_fu_995_p3 <= 
        p_read12 when (cycle_V(0) = '1') else 
        delays_Array_M_real_9_q0;
    select_ln18_19_fu_1003_p3 <= 
        p_read4 when (cycle_V(0) = '1') else 
        delays_Array_M_imag_9_q0;
    select_ln18_1_fu_498_p3 <= 
        delays_Array_M_imag_q0 when (cycle_V(0) = '1') else 
        p_read;
    select_ln18_20_fu_1040_p3 <= 
        delays_Array_M_real_10_q0 when (cycle_V(0) = '1') else 
        p_read13;
    select_ln18_21_fu_1048_p3 <= 
        delays_Array_M_imag_10_q0 when (cycle_V(0) = '1') else 
        p_read5;
    select_ln18_22_fu_1105_p3 <= 
        p_read13 when (cycle_V(0) = '1') else 
        delays_Array_M_real_11_q0;
    select_ln18_23_fu_1113_p3 <= 
        p_read5 when (cycle_V(0) = '1') else 
        delays_Array_M_imag_11_q0;
    select_ln18_24_fu_1150_p3 <= 
        delays_Array_M_real_12_q0 when (cycle_V(0) = '1') else 
        p_read14;
    select_ln18_25_fu_1158_p3 <= 
        delays_Array_M_imag_12_q0 when (cycle_V(0) = '1') else 
        p_read6;
    select_ln18_26_fu_1215_p3 <= 
        p_read14 when (cycle_V(0) = '1') else 
        delays_Array_M_real_13_q0;
    select_ln18_27_fu_1223_p3 <= 
        p_read6 when (cycle_V(0) = '1') else 
        delays_Array_M_imag_13_q0;
    select_ln18_28_fu_1260_p3 <= 
        delays_Array_M_real_14_q0 when (cycle_V(0) = '1') else 
        p_read15;
    select_ln18_29_fu_1268_p3 <= 
        delays_Array_M_imag_14_q0 when (cycle_V(0) = '1') else 
        p_read7;
    select_ln18_2_fu_555_p3 <= 
        p_read8 when (cycle_V(0) = '1') else 
        delays_Array_M_real_1_q0;
    select_ln18_30_fu_1325_p3 <= 
        p_read15 when (cycle_V(0) = '1') else 
        delays_Array_M_real_15_q0;
    select_ln18_31_fu_1333_p3 <= 
        p_read7 when (cycle_V(0) = '1') else 
        delays_Array_M_imag_15_q0;
    select_ln18_3_fu_563_p3 <= 
        p_read when (cycle_V(0) = '1') else 
        delays_Array_M_imag_1_q0;
    select_ln18_4_fu_600_p3 <= 
        delays_Array_M_real_2_q0 when (cycle_V(0) = '1') else 
        p_read9;
    select_ln18_5_fu_608_p3 <= 
        delays_Array_M_imag_2_q0 when (cycle_V(0) = '1') else 
        p_read1;
    select_ln18_6_fu_665_p3 <= 
        p_read9 when (cycle_V(0) = '1') else 
        delays_Array_M_real_3_q0;
    select_ln18_7_fu_673_p3 <= 
        p_read1 when (cycle_V(0) = '1') else 
        delays_Array_M_imag_3_q0;
    select_ln18_8_fu_710_p3 <= 
        delays_Array_M_real_4_q0 when (cycle_V(0) = '1') else 
        p_read10;
    select_ln18_9_fu_718_p3 <= 
        delays_Array_M_imag_4_q0 when (cycle_V(0) = '1') else 
        p_read2;
    select_ln18_fu_490_p3 <= 
        delays_Array_M_real_q0 when (cycle_V(0) = '1') else 
        p_read8;
    xor_ln114_fu_464_p2 <= (cycle_V xor ap_const_lv1_1);
end behav;
