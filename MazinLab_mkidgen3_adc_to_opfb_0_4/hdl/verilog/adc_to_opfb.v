// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="adc_to_opfb,hls_ip_2019_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=1.953000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=0.849000,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=778,HLS_SYN_LUT=712,HLS_VERSION=2019_2_1}" *)

module adc_to_opfb (
        ap_clk,
        ap_rst_n,
        istream_data_TDATA,
        istream_data_TVALID,
        istream_data_TREADY,
        qstream_data_TDATA,
        qstream_data_TVALID,
        qstream_data_TREADY,
        lane_0_TDATA,
        lane_0_TVALID,
        lane_0_TREADY,
        lane_1_TDATA,
        lane_1_TVALID,
        lane_1_TREADY,
        lane_2_TDATA,
        lane_2_TVALID,
        lane_2_TREADY,
        lane_3_TDATA,
        lane_3_TVALID,
        lane_3_TREADY,
        lane_4_TDATA,
        lane_4_TVALID,
        lane_4_TREADY,
        lane_5_TDATA,
        lane_5_TVALID,
        lane_5_TREADY,
        lane_6_TDATA,
        lane_6_TVALID,
        lane_6_TREADY,
        lane_7_TDATA,
        lane_7_TVALID,
        lane_7_TREADY,
        lane_8_TDATA,
        lane_8_TVALID,
        lane_8_TREADY,
        lane_9_TDATA,
        lane_9_TVALID,
        lane_9_TREADY,
        lane_10_TDATA,
        lane_10_TVALID,
        lane_10_TREADY,
        lane_11_TDATA,
        lane_11_TVALID,
        lane_11_TREADY,
        lane_12_TDATA,
        lane_12_TVALID,
        lane_12_TREADY,
        lane_13_TDATA,
        lane_13_TVALID,
        lane_13_TREADY,
        lane_14_TDATA,
        lane_14_TVALID,
        lane_14_TREADY,
        lane_15_TDATA,
        lane_15_TVALID,
        lane_15_TREADY,
        lane_0_TLAST,
        lane_1_TLAST,
        lane_2_TLAST,
        lane_3_TLAST,
        lane_4_TLAST,
        lane_5_TLAST,
        lane_6_TLAST,
        lane_7_TLAST,
        lane_8_TLAST,
        lane_9_TLAST,
        lane_10_TLAST,
        lane_11_TLAST,
        lane_12_TLAST,
        lane_13_TLAST,
        lane_14_TLAST,
        lane_15_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input  [127:0] istream_data_TDATA;
input   istream_data_TVALID;
output   istream_data_TREADY;
input  [127:0] qstream_data_TDATA;
input   qstream_data_TVALID;
output   qstream_data_TREADY;
output  [31:0] lane_0_TDATA;
output   lane_0_TVALID;
input   lane_0_TREADY;
output  [31:0] lane_1_TDATA;
output   lane_1_TVALID;
input   lane_1_TREADY;
output  [31:0] lane_2_TDATA;
output   lane_2_TVALID;
input   lane_2_TREADY;
output  [31:0] lane_3_TDATA;
output   lane_3_TVALID;
input   lane_3_TREADY;
output  [31:0] lane_4_TDATA;
output   lane_4_TVALID;
input   lane_4_TREADY;
output  [31:0] lane_5_TDATA;
output   lane_5_TVALID;
input   lane_5_TREADY;
output  [31:0] lane_6_TDATA;
output   lane_6_TVALID;
input   lane_6_TREADY;
output  [31:0] lane_7_TDATA;
output   lane_7_TVALID;
input   lane_7_TREADY;
output  [31:0] lane_8_TDATA;
output   lane_8_TVALID;
input   lane_8_TREADY;
output  [31:0] lane_9_TDATA;
output   lane_9_TVALID;
input   lane_9_TREADY;
output  [31:0] lane_10_TDATA;
output   lane_10_TVALID;
input   lane_10_TREADY;
output  [31:0] lane_11_TDATA;
output   lane_11_TVALID;
input   lane_11_TREADY;
output  [31:0] lane_12_TDATA;
output   lane_12_TVALID;
input   lane_12_TREADY;
output  [31:0] lane_13_TDATA;
output   lane_13_TVALID;
input   lane_13_TREADY;
output  [31:0] lane_14_TDATA;
output   lane_14_TVALID;
input   lane_14_TREADY;
output  [31:0] lane_15_TDATA;
output   lane_15_TVALID;
input   lane_15_TREADY;
output   lane_0_TLAST;
output   lane_1_TLAST;
output   lane_2_TLAST;
output   lane_3_TLAST;
output   lane_4_TLAST;
output   lane_5_TLAST;
output   lane_6_TLAST;
output   lane_7_TLAST;
output   lane_8_TLAST;
output   lane_9_TLAST;
output   lane_10_TLAST;
output   lane_11_TLAST;
output   lane_12_TLAST;
output   lane_13_TLAST;
output   lane_14_TLAST;
output   lane_15_TLAST;

reg istream_data_TREADY;
reg qstream_data_TREADY;

 reg    ap_rst_n_inv;
reg   [7:0] cycle_V;
reg   [31:0] last_V_0;
reg   [31:0] even_lane_z1_V_0;
reg   [31:0] last_V_1;
reg   [31:0] last_V_2;
reg   [31:0] even_lane_z1_V_1;
reg   [31:0] last_V_3;
reg   [31:0] last_V_4;
reg   [31:0] even_lane_z1_V_2;
reg   [31:0] last_V_5;
reg   [31:0] last_V_6;
reg   [31:0] even_lane_z1_V_3;
reg   [31:0] last_V_7;
reg   [31:0] last_V_8;
reg   [31:0] even_lane_z1_V_4;
reg   [31:0] last_V_9;
reg   [31:0] last_V_10;
reg   [31:0] even_lane_z1_V_5;
reg   [31:0] last_V_11;
reg   [31:0] last_V_12;
reg   [31:0] even_lane_z1_V_6;
reg   [31:0] last_V_13;
reg   [31:0] last_V_14;
reg   [31:0] even_lane_z1_V_7;
reg   [31:0] last_V_15;
reg    istream_data_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
reg    qstream_data_TDATA_blk_n;
reg    lane_0_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter1;
reg    lane_1_TDATA_blk_n;
reg    lane_2_TDATA_blk_n;
reg    lane_3_TDATA_blk_n;
reg    lane_4_TDATA_blk_n;
reg    lane_5_TDATA_blk_n;
reg    lane_6_TDATA_blk_n;
reg    lane_7_TDATA_blk_n;
reg    lane_8_TDATA_blk_n;
reg    lane_9_TDATA_blk_n;
reg    lane_10_TDATA_blk_n;
reg    lane_11_TDATA_blk_n;
reg    lane_12_TDATA_blk_n;
reg    lane_13_TDATA_blk_n;
reg    lane_14_TDATA_blk_n;
reg    lane_15_TDATA_blk_n;
wire   [0:0] trunc_ln791_fu_570_p1;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state1_io;
wire    regslice_forward_lane_0_data_V_U_apdone_blk;
wire    regslice_forward_lane_1_data_V_U_apdone_blk;
wire    regslice_forward_lane_2_data_V_U_apdone_blk;
wire    regslice_forward_lane_3_data_V_U_apdone_blk;
wire    regslice_forward_lane_4_data_V_U_apdone_blk;
wire    regslice_forward_lane_5_data_V_U_apdone_blk;
wire    regslice_forward_lane_6_data_V_U_apdone_blk;
wire    regslice_forward_lane_7_data_V_U_apdone_blk;
wire    regslice_forward_lane_8_data_V_U_apdone_blk;
wire    regslice_forward_lane_9_data_V_U_apdone_blk;
wire    regslice_forward_lane_10_data_V_U_apdone_blk;
wire    regslice_forward_lane_11_data_V_U_apdone_blk;
wire    regslice_forward_lane_12_data_V_U_apdone_blk;
wire    regslice_forward_lane_13_data_V_U_apdone_blk;
wire    regslice_forward_lane_14_data_V_U_apdone_blk;
wire    regslice_forward_lane_15_data_V_U_apdone_blk;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state2_io;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln879_fu_597_p2;
reg    ap_block_pp0_stage0_subdone;
wire   [7:0] add_ln700_fu_980_p2;
wire   [31:0] iq_0_V_write_assign_fu_502_p3;
wire   [31:0] select_ln43_fu_578_p3;
wire   [31:0] iq_1_V_write_assign_fu_510_p3;
wire   [31:0] select_ln43_2_fu_648_p3;
wire   [31:0] iq_2_V_write_assign_fu_518_p3;
wire   [31:0] select_ln43_4_fu_696_p3;
wire   [31:0] iq_3_V_write_assign_fu_526_p3;
wire   [31:0] select_ln43_6_fu_744_p3;
wire   [31:0] iq_4_V_write_assign_fu_534_p3;
wire   [31:0] select_ln43_8_fu_792_p3;
wire   [31:0] iq_5_V_write_assign_fu_542_p3;
wire   [31:0] select_ln43_10_fu_840_p3;
wire   [31:0] iq_6_V_write_assign_fu_550_p3;
wire   [31:0] select_ln43_12_fu_888_p3;
wire   [31:0] iq_7_V_write_assign_fu_558_p3;
wire   [31:0] select_ln43_14_fu_936_p3;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] trunc_ln77_1_fu_428_p1;
wire   [15:0] trunc_ln77_fu_354_p1;
wire   [15:0] p_8_fu_432_p4;
wire   [15:0] p_1_fu_358_p4;
wire   [15:0] p_9_fu_442_p4;
wire   [15:0] p_2_fu_368_p4;
wire   [15:0] p_s_fu_452_p4;
wire   [15:0] p_3_fu_378_p4;
wire   [15:0] p_10_fu_462_p4;
wire   [15:0] p_4_fu_388_p4;
wire   [15:0] p_11_fu_472_p4;
wire   [15:0] p_5_fu_398_p4;
wire   [15:0] p_12_fu_482_p4;
wire   [15:0] p_6_fu_408_p4;
wire   [15:0] p_13_fu_492_p4;
wire   [15:0] p_7_fu_418_p4;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_reverse_istream_data_U_apdone_blk;
wire   [127:0] istream_data_TDATA_int;
wire    istream_data_TVALID_int;
reg    istream_data_TREADY_int;
wire    regslice_reverse_istream_data_U_ack_in;
wire    regslice_reverse_qstream_data_U_apdone_blk;
wire   [127:0] qstream_data_TDATA_int;
wire    qstream_data_TVALID_int;
reg    qstream_data_TREADY_int;
wire    regslice_reverse_qstream_data_U_ack_in;
reg    lane_0_TVALID_int;
wire    lane_0_TREADY_int;
wire    regslice_forward_lane_0_data_V_U_vld_out;
wire   [31:0] lane_1_TDATA_int;
reg    lane_1_TVALID_int;
wire    lane_1_TREADY_int;
wire    regslice_forward_lane_1_data_V_U_vld_out;
reg    lane_2_TVALID_int;
wire    lane_2_TREADY_int;
wire    regslice_forward_lane_2_data_V_U_vld_out;
wire   [31:0] lane_3_TDATA_int;
reg    lane_3_TVALID_int;
wire    lane_3_TREADY_int;
wire    regslice_forward_lane_3_data_V_U_vld_out;
reg    lane_4_TVALID_int;
wire    lane_4_TREADY_int;
wire    regslice_forward_lane_4_data_V_U_vld_out;
wire   [31:0] lane_5_TDATA_int;
reg    lane_5_TVALID_int;
wire    lane_5_TREADY_int;
wire    regslice_forward_lane_5_data_V_U_vld_out;
reg    lane_6_TVALID_int;
wire    lane_6_TREADY_int;
wire    regslice_forward_lane_6_data_V_U_vld_out;
wire   [31:0] lane_7_TDATA_int;
reg    lane_7_TVALID_int;
wire    lane_7_TREADY_int;
wire    regslice_forward_lane_7_data_V_U_vld_out;
reg    lane_8_TVALID_int;
wire    lane_8_TREADY_int;
wire    regslice_forward_lane_8_data_V_U_vld_out;
wire   [31:0] lane_9_TDATA_int;
reg    lane_9_TVALID_int;
wire    lane_9_TREADY_int;
wire    regslice_forward_lane_9_data_V_U_vld_out;
reg    lane_10_TVALID_int;
wire    lane_10_TREADY_int;
wire    regslice_forward_lane_10_data_V_U_vld_out;
wire   [31:0] lane_11_TDATA_int;
reg    lane_11_TVALID_int;
wire    lane_11_TREADY_int;
wire    regslice_forward_lane_11_data_V_U_vld_out;
reg    lane_12_TVALID_int;
wire    lane_12_TREADY_int;
wire    regslice_forward_lane_12_data_V_U_vld_out;
wire   [31:0] lane_13_TDATA_int;
reg    lane_13_TVALID_int;
wire    lane_13_TREADY_int;
wire    regslice_forward_lane_13_data_V_U_vld_out;
reg    lane_14_TVALID_int;
wire    lane_14_TREADY_int;
wire    regslice_forward_lane_14_data_V_U_vld_out;
wire   [31:0] lane_15_TDATA_int;
reg    lane_15_TVALID_int;
wire    lane_15_TREADY_int;
wire    regslice_forward_lane_15_data_V_U_vld_out;
wire    regslice_forward_w1_lane_0_last_U_apdone_blk;
wire    lane_0_TLAST_int;
wire    regslice_forward_w1_lane_0_last_U_ack_in_dummy;
wire    regslice_forward_w1_lane_0_last_U_vld_out;
wire    regslice_forward_w1_lane_1_last_U_apdone_blk;
wire    lane_1_TLAST_int;
wire    regslice_forward_w1_lane_1_last_U_ack_in_dummy;
wire    regslice_forward_w1_lane_1_last_U_vld_out;
wire    regslice_forward_w1_lane_2_last_U_apdone_blk;
wire    lane_2_TLAST_int;
wire    regslice_forward_w1_lane_2_last_U_ack_in_dummy;
wire    regslice_forward_w1_lane_2_last_U_vld_out;
wire    regslice_forward_w1_lane_3_last_U_apdone_blk;
wire    lane_3_TLAST_int;
wire    regslice_forward_w1_lane_3_last_U_ack_in_dummy;
wire    regslice_forward_w1_lane_3_last_U_vld_out;
wire    regslice_forward_w1_lane_4_last_U_apdone_blk;
wire    lane_4_TLAST_int;
wire    regslice_forward_w1_lane_4_last_U_ack_in_dummy;
wire    regslice_forward_w1_lane_4_last_U_vld_out;
wire    regslice_forward_w1_lane_5_last_U_apdone_blk;
wire    lane_5_TLAST_int;
wire    regslice_forward_w1_lane_5_last_U_ack_in_dummy;
wire    regslice_forward_w1_lane_5_last_U_vld_out;
wire    regslice_forward_w1_lane_6_last_U_apdone_blk;
wire    lane_6_TLAST_int;
wire    regslice_forward_w1_lane_6_last_U_ack_in_dummy;
wire    regslice_forward_w1_lane_6_last_U_vld_out;
wire    regslice_forward_w1_lane_7_last_U_apdone_blk;
wire    lane_7_TLAST_int;
wire    regslice_forward_w1_lane_7_last_U_ack_in_dummy;
wire    regslice_forward_w1_lane_7_last_U_vld_out;
wire    regslice_forward_w1_lane_8_last_U_apdone_blk;
wire    lane_8_TLAST_int;
wire    regslice_forward_w1_lane_8_last_U_ack_in_dummy;
wire    regslice_forward_w1_lane_8_last_U_vld_out;
wire    regslice_forward_w1_lane_9_last_U_apdone_blk;
wire    lane_9_TLAST_int;
wire    regslice_forward_w1_lane_9_last_U_ack_in_dummy;
wire    regslice_forward_w1_lane_9_last_U_vld_out;
wire    regslice_forward_w1_lane_10_last_U_apdone_blk;
wire    lane_10_TLAST_int;
wire    regslice_forward_w1_lane_10_last_U_ack_in_dummy;
wire    regslice_forward_w1_lane_10_last_U_vld_out;
wire    regslice_forward_w1_lane_11_last_U_apdone_blk;
wire    lane_11_TLAST_int;
wire    regslice_forward_w1_lane_11_last_U_ack_in_dummy;
wire    regslice_forward_w1_lane_11_last_U_vld_out;
wire    regslice_forward_w1_lane_12_last_U_apdone_blk;
wire    lane_12_TLAST_int;
wire    regslice_forward_w1_lane_12_last_U_ack_in_dummy;
wire    regslice_forward_w1_lane_12_last_U_vld_out;
wire    regslice_forward_w1_lane_13_last_U_apdone_blk;
wire    lane_13_TLAST_int;
wire    regslice_forward_w1_lane_13_last_U_ack_in_dummy;
wire    regslice_forward_w1_lane_13_last_U_vld_out;
wire    regslice_forward_w1_lane_14_last_U_apdone_blk;
wire    lane_14_TLAST_int;
wire    regslice_forward_w1_lane_14_last_U_ack_in_dummy;
wire    regslice_forward_w1_lane_14_last_U_vld_out;
wire    regslice_forward_w1_lane_15_last_U_apdone_blk;
wire    lane_15_TLAST_int;
wire    regslice_forward_w1_lane_15_last_U_ack_in_dummy;
wire    regslice_forward_w1_lane_15_last_U_vld_out;

// power-on initialization
initial begin
#0 cycle_V = 8'd0;
#0 last_V_0 = 32'd0;
#0 even_lane_z1_V_0 = 32'd0;
#0 last_V_1 = 32'd0;
#0 last_V_2 = 32'd0;
#0 even_lane_z1_V_1 = 32'd0;
#0 last_V_3 = 32'd0;
#0 last_V_4 = 32'd0;
#0 even_lane_z1_V_2 = 32'd0;
#0 last_V_5 = 32'd0;
#0 last_V_6 = 32'd0;
#0 even_lane_z1_V_3 = 32'd0;
#0 last_V_7 = 32'd0;
#0 last_V_8 = 32'd0;
#0 even_lane_z1_V_4 = 32'd0;
#0 last_V_9 = 32'd0;
#0 last_V_10 = 32'd0;
#0 even_lane_z1_V_5 = 32'd0;
#0 last_V_11 = 32'd0;
#0 last_V_12 = 32'd0;
#0 even_lane_z1_V_6 = 32'd0;
#0 last_V_13 = 32'd0;
#0 last_V_14 = 32'd0;
#0 even_lane_z1_V_7 = 32'd0;
#0 last_V_15 = 32'd0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

regslice_reverse #(
    .DataWidth( 128 ))
regslice_reverse_istream_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(istream_data_TDATA),
    .vld_in(istream_data_TVALID),
    .ack_in(regslice_reverse_istream_data_U_ack_in),
    .data_out(istream_data_TDATA_int),
    .vld_out(istream_data_TVALID_int),
    .ack_out(istream_data_TREADY_int),
    .apdone_blk(regslice_reverse_istream_data_U_apdone_blk)
);

regslice_reverse #(
    .DataWidth( 128 ))
regslice_reverse_qstream_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(qstream_data_TDATA),
    .vld_in(qstream_data_TVALID),
    .ack_in(regslice_reverse_qstream_data_U_ack_in),
    .data_out(qstream_data_TDATA_int),
    .vld_out(qstream_data_TVALID_int),
    .ack_out(qstream_data_TREADY_int),
    .apdone_blk(regslice_reverse_qstream_data_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_0_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(even_lane_z1_V_0),
    .vld_in(lane_0_TVALID_int),
    .ack_in(lane_0_TREADY_int),
    .data_out(lane_0_TDATA),
    .vld_out(regslice_forward_lane_0_data_V_U_vld_out),
    .ack_out(lane_0_TREADY),
    .apdone_blk(regslice_forward_lane_0_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_1_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_1_TDATA_int),
    .vld_in(lane_1_TVALID_int),
    .ack_in(lane_1_TREADY_int),
    .data_out(lane_1_TDATA),
    .vld_out(regslice_forward_lane_1_data_V_U_vld_out),
    .ack_out(lane_1_TREADY),
    .apdone_blk(regslice_forward_lane_1_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_2_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(even_lane_z1_V_1),
    .vld_in(lane_2_TVALID_int),
    .ack_in(lane_2_TREADY_int),
    .data_out(lane_2_TDATA),
    .vld_out(regslice_forward_lane_2_data_V_U_vld_out),
    .ack_out(lane_2_TREADY),
    .apdone_blk(regslice_forward_lane_2_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_3_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_3_TDATA_int),
    .vld_in(lane_3_TVALID_int),
    .ack_in(lane_3_TREADY_int),
    .data_out(lane_3_TDATA),
    .vld_out(regslice_forward_lane_3_data_V_U_vld_out),
    .ack_out(lane_3_TREADY),
    .apdone_blk(regslice_forward_lane_3_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_4_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(even_lane_z1_V_2),
    .vld_in(lane_4_TVALID_int),
    .ack_in(lane_4_TREADY_int),
    .data_out(lane_4_TDATA),
    .vld_out(regslice_forward_lane_4_data_V_U_vld_out),
    .ack_out(lane_4_TREADY),
    .apdone_blk(regslice_forward_lane_4_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_5_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_5_TDATA_int),
    .vld_in(lane_5_TVALID_int),
    .ack_in(lane_5_TREADY_int),
    .data_out(lane_5_TDATA),
    .vld_out(regslice_forward_lane_5_data_V_U_vld_out),
    .ack_out(lane_5_TREADY),
    .apdone_blk(regslice_forward_lane_5_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_6_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(even_lane_z1_V_3),
    .vld_in(lane_6_TVALID_int),
    .ack_in(lane_6_TREADY_int),
    .data_out(lane_6_TDATA),
    .vld_out(regslice_forward_lane_6_data_V_U_vld_out),
    .ack_out(lane_6_TREADY),
    .apdone_blk(regslice_forward_lane_6_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_7_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_7_TDATA_int),
    .vld_in(lane_7_TVALID_int),
    .ack_in(lane_7_TREADY_int),
    .data_out(lane_7_TDATA),
    .vld_out(regslice_forward_lane_7_data_V_U_vld_out),
    .ack_out(lane_7_TREADY),
    .apdone_blk(regslice_forward_lane_7_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_8_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(even_lane_z1_V_4),
    .vld_in(lane_8_TVALID_int),
    .ack_in(lane_8_TREADY_int),
    .data_out(lane_8_TDATA),
    .vld_out(regslice_forward_lane_8_data_V_U_vld_out),
    .ack_out(lane_8_TREADY),
    .apdone_blk(regslice_forward_lane_8_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_9_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_9_TDATA_int),
    .vld_in(lane_9_TVALID_int),
    .ack_in(lane_9_TREADY_int),
    .data_out(lane_9_TDATA),
    .vld_out(regslice_forward_lane_9_data_V_U_vld_out),
    .ack_out(lane_9_TREADY),
    .apdone_blk(regslice_forward_lane_9_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_10_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(even_lane_z1_V_5),
    .vld_in(lane_10_TVALID_int),
    .ack_in(lane_10_TREADY_int),
    .data_out(lane_10_TDATA),
    .vld_out(regslice_forward_lane_10_data_V_U_vld_out),
    .ack_out(lane_10_TREADY),
    .apdone_blk(regslice_forward_lane_10_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_11_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_11_TDATA_int),
    .vld_in(lane_11_TVALID_int),
    .ack_in(lane_11_TREADY_int),
    .data_out(lane_11_TDATA),
    .vld_out(regslice_forward_lane_11_data_V_U_vld_out),
    .ack_out(lane_11_TREADY),
    .apdone_blk(regslice_forward_lane_11_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_12_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(even_lane_z1_V_6),
    .vld_in(lane_12_TVALID_int),
    .ack_in(lane_12_TREADY_int),
    .data_out(lane_12_TDATA),
    .vld_out(regslice_forward_lane_12_data_V_U_vld_out),
    .ack_out(lane_12_TREADY),
    .apdone_blk(regslice_forward_lane_12_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_13_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_13_TDATA_int),
    .vld_in(lane_13_TVALID_int),
    .ack_in(lane_13_TREADY_int),
    .data_out(lane_13_TDATA),
    .vld_out(regslice_forward_lane_13_data_V_U_vld_out),
    .ack_out(lane_13_TREADY),
    .apdone_blk(regslice_forward_lane_13_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_14_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(even_lane_z1_V_7),
    .vld_in(lane_14_TVALID_int),
    .ack_in(lane_14_TREADY_int),
    .data_out(lane_14_TDATA),
    .vld_out(regslice_forward_lane_14_data_V_U_vld_out),
    .ack_out(lane_14_TREADY),
    .apdone_blk(regslice_forward_lane_14_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_15_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_15_TDATA_int),
    .vld_in(lane_15_TVALID_int),
    .ack_in(lane_15_TREADY_int),
    .data_out(lane_15_TDATA),
    .vld_out(regslice_forward_lane_15_data_V_U_vld_out),
    .ack_out(lane_15_TREADY),
    .apdone_blk(regslice_forward_lane_15_data_V_U_apdone_blk)
);

regslice_forward_w1 #(
    .DataWidth( 1 ))
regslice_forward_w1_lane_0_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_0_TLAST_int),
    .vld_in(lane_0_TVALID_int),
    .ack_in(regslice_forward_w1_lane_0_last_U_ack_in_dummy),
    .data_out(lane_0_TLAST),
    .vld_out(regslice_forward_w1_lane_0_last_U_vld_out),
    .ack_out(lane_0_TREADY),
    .apdone_blk(regslice_forward_w1_lane_0_last_U_apdone_blk)
);

regslice_forward_w1 #(
    .DataWidth( 1 ))
regslice_forward_w1_lane_1_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_1_TLAST_int),
    .vld_in(lane_1_TVALID_int),
    .ack_in(regslice_forward_w1_lane_1_last_U_ack_in_dummy),
    .data_out(lane_1_TLAST),
    .vld_out(regslice_forward_w1_lane_1_last_U_vld_out),
    .ack_out(lane_1_TREADY),
    .apdone_blk(regslice_forward_w1_lane_1_last_U_apdone_blk)
);

regslice_forward_w1 #(
    .DataWidth( 1 ))
regslice_forward_w1_lane_2_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_2_TLAST_int),
    .vld_in(lane_2_TVALID_int),
    .ack_in(regslice_forward_w1_lane_2_last_U_ack_in_dummy),
    .data_out(lane_2_TLAST),
    .vld_out(regslice_forward_w1_lane_2_last_U_vld_out),
    .ack_out(lane_2_TREADY),
    .apdone_blk(regslice_forward_w1_lane_2_last_U_apdone_blk)
);

regslice_forward_w1 #(
    .DataWidth( 1 ))
regslice_forward_w1_lane_3_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_3_TLAST_int),
    .vld_in(lane_3_TVALID_int),
    .ack_in(regslice_forward_w1_lane_3_last_U_ack_in_dummy),
    .data_out(lane_3_TLAST),
    .vld_out(regslice_forward_w1_lane_3_last_U_vld_out),
    .ack_out(lane_3_TREADY),
    .apdone_blk(regslice_forward_w1_lane_3_last_U_apdone_blk)
);

regslice_forward_w1 #(
    .DataWidth( 1 ))
regslice_forward_w1_lane_4_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_4_TLAST_int),
    .vld_in(lane_4_TVALID_int),
    .ack_in(regslice_forward_w1_lane_4_last_U_ack_in_dummy),
    .data_out(lane_4_TLAST),
    .vld_out(regslice_forward_w1_lane_4_last_U_vld_out),
    .ack_out(lane_4_TREADY),
    .apdone_blk(regslice_forward_w1_lane_4_last_U_apdone_blk)
);

regslice_forward_w1 #(
    .DataWidth( 1 ))
regslice_forward_w1_lane_5_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_5_TLAST_int),
    .vld_in(lane_5_TVALID_int),
    .ack_in(regslice_forward_w1_lane_5_last_U_ack_in_dummy),
    .data_out(lane_5_TLAST),
    .vld_out(regslice_forward_w1_lane_5_last_U_vld_out),
    .ack_out(lane_5_TREADY),
    .apdone_blk(regslice_forward_w1_lane_5_last_U_apdone_blk)
);

regslice_forward_w1 #(
    .DataWidth( 1 ))
regslice_forward_w1_lane_6_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_6_TLAST_int),
    .vld_in(lane_6_TVALID_int),
    .ack_in(regslice_forward_w1_lane_6_last_U_ack_in_dummy),
    .data_out(lane_6_TLAST),
    .vld_out(regslice_forward_w1_lane_6_last_U_vld_out),
    .ack_out(lane_6_TREADY),
    .apdone_blk(regslice_forward_w1_lane_6_last_U_apdone_blk)
);

regslice_forward_w1 #(
    .DataWidth( 1 ))
regslice_forward_w1_lane_7_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_7_TLAST_int),
    .vld_in(lane_7_TVALID_int),
    .ack_in(regslice_forward_w1_lane_7_last_U_ack_in_dummy),
    .data_out(lane_7_TLAST),
    .vld_out(regslice_forward_w1_lane_7_last_U_vld_out),
    .ack_out(lane_7_TREADY),
    .apdone_blk(regslice_forward_w1_lane_7_last_U_apdone_blk)
);

regslice_forward_w1 #(
    .DataWidth( 1 ))
regslice_forward_w1_lane_8_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_8_TLAST_int),
    .vld_in(lane_8_TVALID_int),
    .ack_in(regslice_forward_w1_lane_8_last_U_ack_in_dummy),
    .data_out(lane_8_TLAST),
    .vld_out(regslice_forward_w1_lane_8_last_U_vld_out),
    .ack_out(lane_8_TREADY),
    .apdone_blk(regslice_forward_w1_lane_8_last_U_apdone_blk)
);

regslice_forward_w1 #(
    .DataWidth( 1 ))
regslice_forward_w1_lane_9_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_9_TLAST_int),
    .vld_in(lane_9_TVALID_int),
    .ack_in(regslice_forward_w1_lane_9_last_U_ack_in_dummy),
    .data_out(lane_9_TLAST),
    .vld_out(regslice_forward_w1_lane_9_last_U_vld_out),
    .ack_out(lane_9_TREADY),
    .apdone_blk(regslice_forward_w1_lane_9_last_U_apdone_blk)
);

regslice_forward_w1 #(
    .DataWidth( 1 ))
regslice_forward_w1_lane_10_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_10_TLAST_int),
    .vld_in(lane_10_TVALID_int),
    .ack_in(regslice_forward_w1_lane_10_last_U_ack_in_dummy),
    .data_out(lane_10_TLAST),
    .vld_out(regslice_forward_w1_lane_10_last_U_vld_out),
    .ack_out(lane_10_TREADY),
    .apdone_blk(regslice_forward_w1_lane_10_last_U_apdone_blk)
);

regslice_forward_w1 #(
    .DataWidth( 1 ))
regslice_forward_w1_lane_11_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_11_TLAST_int),
    .vld_in(lane_11_TVALID_int),
    .ack_in(regslice_forward_w1_lane_11_last_U_ack_in_dummy),
    .data_out(lane_11_TLAST),
    .vld_out(regslice_forward_w1_lane_11_last_U_vld_out),
    .ack_out(lane_11_TREADY),
    .apdone_blk(regslice_forward_w1_lane_11_last_U_apdone_blk)
);

regslice_forward_w1 #(
    .DataWidth( 1 ))
regslice_forward_w1_lane_12_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_12_TLAST_int),
    .vld_in(lane_12_TVALID_int),
    .ack_in(regslice_forward_w1_lane_12_last_U_ack_in_dummy),
    .data_out(lane_12_TLAST),
    .vld_out(regslice_forward_w1_lane_12_last_U_vld_out),
    .ack_out(lane_12_TREADY),
    .apdone_blk(regslice_forward_w1_lane_12_last_U_apdone_blk)
);

regslice_forward_w1 #(
    .DataWidth( 1 ))
regslice_forward_w1_lane_13_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_13_TLAST_int),
    .vld_in(lane_13_TVALID_int),
    .ack_in(regslice_forward_w1_lane_13_last_U_ack_in_dummy),
    .data_out(lane_13_TLAST),
    .vld_out(regslice_forward_w1_lane_13_last_U_vld_out),
    .ack_out(lane_13_TREADY),
    .apdone_blk(regslice_forward_w1_lane_13_last_U_apdone_blk)
);

regslice_forward_w1 #(
    .DataWidth( 1 ))
regslice_forward_w1_lane_14_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_14_TLAST_int),
    .vld_in(lane_14_TVALID_int),
    .ack_in(regslice_forward_w1_lane_14_last_U_ack_in_dummy),
    .data_out(lane_14_TLAST),
    .vld_out(regslice_forward_w1_lane_14_last_U_vld_out),
    .ack_out(lane_14_TREADY),
    .apdone_blk(regslice_forward_w1_lane_14_last_U_apdone_blk)
);

regslice_forward_w1 #(
    .DataWidth( 1 ))
regslice_forward_w1_lane_15_last_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(lane_15_TLAST_int),
    .vld_in(lane_15_TVALID_int),
    .ack_in(regslice_forward_w1_lane_15_last_U_ack_in_dummy),
    .data_out(lane_15_TLAST),
    .vld_out(regslice_forward_w1_lane_15_last_U_vld_out),
    .ack_out(lane_15_TREADY),
    .apdone_blk(regslice_forward_w1_lane_15_last_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cycle_V <= add_ln700_fu_980_p2;
        even_lane_z1_V_0 <= select_ln43_fu_578_p3;
        even_lane_z1_V_1 <= select_ln43_2_fu_648_p3;
        even_lane_z1_V_2 <= select_ln43_4_fu_696_p3;
        even_lane_z1_V_3 <= select_ln43_6_fu_744_p3;
        even_lane_z1_V_4 <= select_ln43_8_fu_792_p3;
        even_lane_z1_V_5 <= select_ln43_10_fu_840_p3;
        even_lane_z1_V_6 <= select_ln43_12_fu_888_p3;
        even_lane_z1_V_7 <= select_ln43_14_fu_936_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln791_fu_570_p1 == 1'd0))) begin
        last_V_0 <= iq_0_V_write_assign_fu_502_p3;
        last_V_10 <= iq_5_V_write_assign_fu_542_p3;
        last_V_12 <= iq_6_V_write_assign_fu_550_p3;
        last_V_14 <= iq_7_V_write_assign_fu_558_p3;
        last_V_2 <= iq_1_V_write_assign_fu_510_p3;
        last_V_4 <= iq_2_V_write_assign_fu_518_p3;
        last_V_6 <= iq_3_V_write_assign_fu_526_p3;
        last_V_8 <= iq_4_V_write_assign_fu_534_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln791_fu_570_p1 == 1'd1))) begin
        last_V_1 <= iq_0_V_write_assign_fu_502_p3;
        last_V_11 <= iq_5_V_write_assign_fu_542_p3;
        last_V_13 <= iq_6_V_write_assign_fu_550_p3;
        last_V_15 <= iq_7_V_write_assign_fu_558_p3;
        last_V_3 <= iq_1_V_write_assign_fu_510_p3;
        last_V_5 <= iq_2_V_write_assign_fu_518_p3;
        last_V_7 <= iq_3_V_write_assign_fu_526_p3;
        last_V_9 <= iq_4_V_write_assign_fu_534_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        istream_data_TDATA_blk_n = istream_data_TVALID_int;
    end else begin
        istream_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((istream_data_TVALID == 1'b1) & (regslice_reverse_istream_data_U_ack_in == 1'b1))) begin
        istream_data_TREADY = 1'b1;
    end else begin
        istream_data_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        istream_data_TREADY_int = 1'b1;
    end else begin
        istream_data_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        lane_0_TDATA_blk_n = lane_0_TREADY_int;
    end else begin
        lane_0_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lane_0_TVALID_int = 1'b1;
    end else begin
        lane_0_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        lane_10_TDATA_blk_n = lane_10_TREADY_int;
    end else begin
        lane_10_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lane_10_TVALID_int = 1'b1;
    end else begin
        lane_10_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        lane_11_TDATA_blk_n = lane_11_TREADY_int;
    end else begin
        lane_11_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lane_11_TVALID_int = 1'b1;
    end else begin
        lane_11_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        lane_12_TDATA_blk_n = lane_12_TREADY_int;
    end else begin
        lane_12_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lane_12_TVALID_int = 1'b1;
    end else begin
        lane_12_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        lane_13_TDATA_blk_n = lane_13_TREADY_int;
    end else begin
        lane_13_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lane_13_TVALID_int = 1'b1;
    end else begin
        lane_13_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        lane_14_TDATA_blk_n = lane_14_TREADY_int;
    end else begin
        lane_14_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lane_14_TVALID_int = 1'b1;
    end else begin
        lane_14_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        lane_15_TDATA_blk_n = lane_15_TREADY_int;
    end else begin
        lane_15_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lane_15_TVALID_int = 1'b1;
    end else begin
        lane_15_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        lane_1_TDATA_blk_n = lane_1_TREADY_int;
    end else begin
        lane_1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lane_1_TVALID_int = 1'b1;
    end else begin
        lane_1_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        lane_2_TDATA_blk_n = lane_2_TREADY_int;
    end else begin
        lane_2_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lane_2_TVALID_int = 1'b1;
    end else begin
        lane_2_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        lane_3_TDATA_blk_n = lane_3_TREADY_int;
    end else begin
        lane_3_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lane_3_TVALID_int = 1'b1;
    end else begin
        lane_3_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        lane_4_TDATA_blk_n = lane_4_TREADY_int;
    end else begin
        lane_4_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lane_4_TVALID_int = 1'b1;
    end else begin
        lane_4_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        lane_5_TDATA_blk_n = lane_5_TREADY_int;
    end else begin
        lane_5_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lane_5_TVALID_int = 1'b1;
    end else begin
        lane_5_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        lane_6_TDATA_blk_n = lane_6_TREADY_int;
    end else begin
        lane_6_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lane_6_TVALID_int = 1'b1;
    end else begin
        lane_6_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        lane_7_TDATA_blk_n = lane_7_TREADY_int;
    end else begin
        lane_7_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lane_7_TVALID_int = 1'b1;
    end else begin
        lane_7_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        lane_8_TDATA_blk_n = lane_8_TREADY_int;
    end else begin
        lane_8_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lane_8_TVALID_int = 1'b1;
    end else begin
        lane_8_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        lane_9_TDATA_blk_n = lane_9_TREADY_int;
    end else begin
        lane_9_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lane_9_TVALID_int = 1'b1;
    end else begin
        lane_9_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        qstream_data_TDATA_blk_n = qstream_data_TVALID_int;
    end else begin
        qstream_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((regslice_reverse_qstream_data_U_ack_in == 1'b1) & (qstream_data_TVALID == 1'b1))) begin
        qstream_data_TREADY = 1'b1;
    end else begin
        qstream_data_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        qstream_data_TREADY_int = 1'b1;
    end else begin
        qstream_data_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln700_fu_980_p2 = (cycle_V + 8'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((regslice_forward_lane_15_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_14_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_13_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_12_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_11_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_10_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_9_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_8_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_7_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_6_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_5_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_4_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_3_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_2_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_1_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_0_data_V_U_apdone_blk == 1'b1))) | ((1'b1 == 1'b1) & ((qstream_data_TVALID_int == 1'b0) | (istream_data_TVALID_int == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((regslice_forward_lane_15_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_14_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_13_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_12_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_11_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_10_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_9_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_8_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_7_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_6_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_5_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_4_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_3_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_2_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_1_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_0_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state2_io))) | ((1'b1 == 1'b1) & ((qstream_data_TVALID_int == 1'b0) | (istream_data_TVALID_int == 1'b0) | (1'b1 == ap_block_state1_io))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((regslice_forward_lane_15_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_14_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_13_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_12_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_11_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_10_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_9_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_8_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_7_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_6_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_5_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_4_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_3_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_2_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_1_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_0_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state2_io))) | ((1'b1 == 1'b1) & ((qstream_data_TVALID_int == 1'b0) | (istream_data_TVALID_int == 1'b0) | (1'b1 == ap_block_state1_io))));
end

always @ (*) begin
    ap_block_state1_io = ((lane_15_TREADY_int == 1'b0) | (lane_14_TREADY_int == 1'b0) | (lane_13_TREADY_int == 1'b0) | (lane_12_TREADY_int == 1'b0) | (lane_11_TREADY_int == 1'b0) | (lane_10_TREADY_int == 1'b0) | (lane_9_TREADY_int == 1'b0) | (lane_8_TREADY_int == 1'b0) | (lane_7_TREADY_int == 1'b0) | (lane_6_TREADY_int == 1'b0) | (lane_5_TREADY_int == 1'b0) | (lane_4_TREADY_int == 1'b0) | (lane_3_TREADY_int == 1'b0) | (lane_2_TREADY_int == 1'b0) | (lane_1_TREADY_int == 1'b0) | (lane_0_TREADY_int == 1'b0));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((qstream_data_TVALID_int == 1'b0) | (istream_data_TVALID_int == 1'b0));
end

always @ (*) begin
    ap_block_state2_io = ((lane_15_TREADY_int == 1'b0) | (lane_14_TREADY_int == 1'b0) | (lane_13_TREADY_int == 1'b0) | (lane_12_TREADY_int == 1'b0) | (lane_11_TREADY_int == 1'b0) | (lane_10_TREADY_int == 1'b0) | (lane_9_TREADY_int == 1'b0) | (lane_8_TREADY_int == 1'b0) | (lane_7_TREADY_int == 1'b0) | (lane_6_TREADY_int == 1'b0) | (lane_5_TREADY_int == 1'b0) | (lane_4_TREADY_int == 1'b0) | (lane_3_TREADY_int == 1'b0) | (lane_2_TREADY_int == 1'b0) | (lane_1_TREADY_int == 1'b0) | (lane_0_TREADY_int == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((regslice_forward_lane_15_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_14_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_13_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_12_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_11_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_10_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_9_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_8_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_7_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_6_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_5_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_4_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_3_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_2_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_1_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_0_data_V_U_apdone_blk == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign icmp_ln879_fu_597_p2 = ((cycle_V == 8'd255) ? 1'b1 : 1'b0);

assign iq_0_V_write_assign_fu_502_p3 = {{trunc_ln77_1_fu_428_p1}, {trunc_ln77_fu_354_p1}};

assign iq_1_V_write_assign_fu_510_p3 = {{p_8_fu_432_p4}, {p_1_fu_358_p4}};

assign iq_2_V_write_assign_fu_518_p3 = {{p_9_fu_442_p4}, {p_2_fu_368_p4}};

assign iq_3_V_write_assign_fu_526_p3 = {{p_s_fu_452_p4}, {p_3_fu_378_p4}};

assign iq_4_V_write_assign_fu_534_p3 = {{p_10_fu_462_p4}, {p_4_fu_388_p4}};

assign iq_5_V_write_assign_fu_542_p3 = {{p_11_fu_472_p4}, {p_5_fu_398_p4}};

assign iq_6_V_write_assign_fu_550_p3 = {{p_12_fu_482_p4}, {p_6_fu_408_p4}};

assign iq_7_V_write_assign_fu_558_p3 = {{p_13_fu_492_p4}, {p_7_fu_418_p4}};

assign lane_0_TLAST_int = icmp_ln879_fu_597_p2;

assign lane_0_TVALID = regslice_forward_lane_0_data_V_U_vld_out;

assign lane_10_TLAST_int = icmp_ln879_fu_597_p2;

assign lane_10_TVALID = regslice_forward_lane_10_data_V_U_vld_out;

assign lane_11_TDATA_int = ((trunc_ln791_fu_570_p1[0:0] === 1'b1) ? iq_5_V_write_assign_fu_542_p3 : last_V_11);

assign lane_11_TLAST_int = icmp_ln879_fu_597_p2;

assign lane_11_TVALID = regslice_forward_lane_11_data_V_U_vld_out;

assign lane_12_TLAST_int = icmp_ln879_fu_597_p2;

assign lane_12_TVALID = regslice_forward_lane_12_data_V_U_vld_out;

assign lane_13_TDATA_int = ((trunc_ln791_fu_570_p1[0:0] === 1'b1) ? iq_6_V_write_assign_fu_550_p3 : last_V_13);

assign lane_13_TLAST_int = icmp_ln879_fu_597_p2;

assign lane_13_TVALID = regslice_forward_lane_13_data_V_U_vld_out;

assign lane_14_TLAST_int = icmp_ln879_fu_597_p2;

assign lane_14_TVALID = regslice_forward_lane_14_data_V_U_vld_out;

assign lane_15_TDATA_int = ((trunc_ln791_fu_570_p1[0:0] === 1'b1) ? iq_7_V_write_assign_fu_558_p3 : last_V_15);

assign lane_15_TLAST_int = icmp_ln879_fu_597_p2;

assign lane_15_TVALID = regslice_forward_lane_15_data_V_U_vld_out;

assign lane_1_TDATA_int = ((trunc_ln791_fu_570_p1[0:0] === 1'b1) ? iq_0_V_write_assign_fu_502_p3 : last_V_1);

assign lane_1_TLAST_int = icmp_ln879_fu_597_p2;

assign lane_1_TVALID = regslice_forward_lane_1_data_V_U_vld_out;

assign lane_2_TLAST_int = icmp_ln879_fu_597_p2;

assign lane_2_TVALID = regslice_forward_lane_2_data_V_U_vld_out;

assign lane_3_TDATA_int = ((trunc_ln791_fu_570_p1[0:0] === 1'b1) ? iq_1_V_write_assign_fu_510_p3 : last_V_3);

assign lane_3_TLAST_int = icmp_ln879_fu_597_p2;

assign lane_3_TVALID = regslice_forward_lane_3_data_V_U_vld_out;

assign lane_4_TLAST_int = icmp_ln879_fu_597_p2;

assign lane_4_TVALID = regslice_forward_lane_4_data_V_U_vld_out;

assign lane_5_TDATA_int = ((trunc_ln791_fu_570_p1[0:0] === 1'b1) ? iq_2_V_write_assign_fu_518_p3 : last_V_5);

assign lane_5_TLAST_int = icmp_ln879_fu_597_p2;

assign lane_5_TVALID = regslice_forward_lane_5_data_V_U_vld_out;

assign lane_6_TLAST_int = icmp_ln879_fu_597_p2;

assign lane_6_TVALID = regslice_forward_lane_6_data_V_U_vld_out;

assign lane_7_TDATA_int = ((trunc_ln791_fu_570_p1[0:0] === 1'b1) ? iq_3_V_write_assign_fu_526_p3 : last_V_7);

assign lane_7_TLAST_int = icmp_ln879_fu_597_p2;

assign lane_7_TVALID = regslice_forward_lane_7_data_V_U_vld_out;

assign lane_8_TLAST_int = icmp_ln879_fu_597_p2;

assign lane_8_TVALID = regslice_forward_lane_8_data_V_U_vld_out;

assign lane_9_TDATA_int = ((trunc_ln791_fu_570_p1[0:0] === 1'b1) ? iq_4_V_write_assign_fu_534_p3 : last_V_9);

assign lane_9_TLAST_int = icmp_ln879_fu_597_p2;

assign lane_9_TVALID = regslice_forward_lane_9_data_V_U_vld_out;

assign p_10_fu_462_p4 = {{qstream_data_TDATA_int[79:64]}};

assign p_11_fu_472_p4 = {{qstream_data_TDATA_int[95:80]}};

assign p_12_fu_482_p4 = {{qstream_data_TDATA_int[111:96]}};

assign p_13_fu_492_p4 = {{qstream_data_TDATA_int[127:112]}};

assign p_1_fu_358_p4 = {{istream_data_TDATA_int[31:16]}};

assign p_2_fu_368_p4 = {{istream_data_TDATA_int[47:32]}};

assign p_3_fu_378_p4 = {{istream_data_TDATA_int[63:48]}};

assign p_4_fu_388_p4 = {{istream_data_TDATA_int[79:64]}};

assign p_5_fu_398_p4 = {{istream_data_TDATA_int[95:80]}};

assign p_6_fu_408_p4 = {{istream_data_TDATA_int[111:96]}};

assign p_7_fu_418_p4 = {{istream_data_TDATA_int[127:112]}};

assign p_8_fu_432_p4 = {{qstream_data_TDATA_int[31:16]}};

assign p_9_fu_442_p4 = {{qstream_data_TDATA_int[47:32]}};

assign p_s_fu_452_p4 = {{qstream_data_TDATA_int[63:48]}};

assign select_ln43_10_fu_840_p3 = ((trunc_ln791_fu_570_p1[0:0] === 1'b1) ? last_V_10 : iq_5_V_write_assign_fu_542_p3);

assign select_ln43_12_fu_888_p3 = ((trunc_ln791_fu_570_p1[0:0] === 1'b1) ? last_V_12 : iq_6_V_write_assign_fu_550_p3);

assign select_ln43_14_fu_936_p3 = ((trunc_ln791_fu_570_p1[0:0] === 1'b1) ? last_V_14 : iq_7_V_write_assign_fu_558_p3);

assign select_ln43_2_fu_648_p3 = ((trunc_ln791_fu_570_p1[0:0] === 1'b1) ? last_V_2 : iq_1_V_write_assign_fu_510_p3);

assign select_ln43_4_fu_696_p3 = ((trunc_ln791_fu_570_p1[0:0] === 1'b1) ? last_V_4 : iq_2_V_write_assign_fu_518_p3);

assign select_ln43_6_fu_744_p3 = ((trunc_ln791_fu_570_p1[0:0] === 1'b1) ? last_V_6 : iq_3_V_write_assign_fu_526_p3);

assign select_ln43_8_fu_792_p3 = ((trunc_ln791_fu_570_p1[0:0] === 1'b1) ? last_V_8 : iq_4_V_write_assign_fu_534_p3);

assign select_ln43_fu_578_p3 = ((trunc_ln791_fu_570_p1[0:0] === 1'b1) ? last_V_0 : iq_0_V_write_assign_fu_502_p3);

assign trunc_ln77_1_fu_428_p1 = qstream_data_TDATA_int[15:0];

assign trunc_ln77_fu_354_p1 = istream_data_TDATA_int[15:0];

assign trunc_ln791_fu_570_p1 = cycle_V[0:0];

endmodule //adc_to_opfb
