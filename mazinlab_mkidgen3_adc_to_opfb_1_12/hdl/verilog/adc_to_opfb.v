// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="adc_to_opfb_adc_to_opfb,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=1.818000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=1.229000,HLS_SYN_LAT=4,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1272,HLS_SYN_LUT=1994,HLS_VERSION=2021_1}" *)

module adc_to_opfb (
// synthesis translate_off
    kernel_block,
// synthesis translate_on
        istream_V_TDATA,
        qstream_V_TDATA,
        lanes_TDATA,
        lanes_TKEEP,
        lanes_TSTRB,
        lanes_TLAST,
        ap_clk,
        ap_rst_n,
        istream_V_TVALID,
        istream_V_TREADY,
        qstream_V_TVALID,
        qstream_V_TREADY,
        lanes_TVALID,
        lanes_TREADY
);


// synthesis translate_off
output kernel_block;
// synthesis translate_on
input  [127:0] istream_V_TDATA;
input  [127:0] qstream_V_TDATA;
output  [511:0] lanes_TDATA;
output  [63:0] lanes_TKEEP;
output  [63:0] lanes_TSTRB;
output  [0:0] lanes_TLAST;
input   ap_clk;
input   ap_rst_n;
input   istream_V_TVALID;
output   istream_V_TREADY;
input   qstream_V_TVALID;
output   qstream_V_TREADY;
output   lanes_TVALID;
input   lanes_TREADY;

 reg    ap_rst_n_inv;
wire    adc2iq_U0_ap_start;
wire    adc2iq_U0_ap_done;
wire    adc2iq_U0_ap_continue;
wire    adc2iq_U0_ap_idle;
wire    adc2iq_U0_ap_ready;
wire    adc2iq_U0_start_out;
wire    adc2iq_U0_start_write;
wire    adc2iq_U0_istream_V_TREADY;
wire    adc2iq_U0_qstream_V_TREADY;
wire   [255:0] adc2iq_U0_iq1_din;
wire    adc2iq_U0_iq1_write;
wire    process_lanes_U0_ap_start;
wire    process_lanes_U0_ap_done;
wire    process_lanes_U0_ap_continue;
wire    process_lanes_U0_ap_idle;
wire    process_lanes_U0_ap_ready;
wire    process_lanes_U0_iq1_read;
wire   [511:0] process_lanes_U0_lanes_TDATA;
wire    process_lanes_U0_lanes_TVALID;
wire   [63:0] process_lanes_U0_lanes_TKEEP;
wire   [63:0] process_lanes_U0_lanes_TSTRB;
wire   [0:0] process_lanes_U0_lanes_TLAST;
wire    iq_full_n;
wire   [255:0] iq_dout;
wire    iq_empty_n;
wire   [0:0] start_for_process_lanes_U0_din;
wire    start_for_process_lanes_U0_full_n;
wire   [0:0] start_for_process_lanes_U0_dout;
wire    start_for_process_lanes_U0_empty_n;

adc_to_opfb_adc2iq adc2iq_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(adc2iq_U0_ap_start),
    .start_full_n(start_for_process_lanes_U0_full_n),
    .ap_done(adc2iq_U0_ap_done),
    .ap_continue(adc2iq_U0_ap_continue),
    .ap_idle(adc2iq_U0_ap_idle),
    .ap_ready(adc2iq_U0_ap_ready),
    .start_out(adc2iq_U0_start_out),
    .start_write(adc2iq_U0_start_write),
    .istream_V_TDATA(istream_V_TDATA),
    .istream_V_TVALID(istream_V_TVALID),
    .istream_V_TREADY(adc2iq_U0_istream_V_TREADY),
    .qstream_V_TDATA(qstream_V_TDATA),
    .qstream_V_TVALID(qstream_V_TVALID),
    .qstream_V_TREADY(adc2iq_U0_qstream_V_TREADY),
    .iq1_din(adc2iq_U0_iq1_din),
    .iq1_full_n(iq_full_n),
    .iq1_write(adc2iq_U0_iq1_write)
);

adc_to_opfb_process_lanes process_lanes_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(process_lanes_U0_ap_start),
    .ap_done(process_lanes_U0_ap_done),
    .ap_continue(process_lanes_U0_ap_continue),
    .ap_idle(process_lanes_U0_ap_idle),
    .ap_ready(process_lanes_U0_ap_ready),
    .iq1_dout(iq_dout),
    .iq1_empty_n(iq_empty_n),
    .iq1_read(process_lanes_U0_iq1_read),
    .lanes_TREADY(lanes_TREADY),
    .lanes_TDATA(process_lanes_U0_lanes_TDATA),
    .lanes_TVALID(process_lanes_U0_lanes_TVALID),
    .lanes_TKEEP(process_lanes_U0_lanes_TKEEP),
    .lanes_TSTRB(process_lanes_U0_lanes_TSTRB),
    .lanes_TLAST(process_lanes_U0_lanes_TLAST)
);

adc_to_opfb_fifo_w256_d2_S iq_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(adc2iq_U0_iq1_din),
    .if_full_n(iq_full_n),
    .if_write(adc2iq_U0_iq1_write),
    .if_dout(iq_dout),
    .if_empty_n(iq_empty_n),
    .if_read(process_lanes_U0_iq1_read)
);

adc_to_opfb_start_for_process_lanes_U0 start_for_process_lanes_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_process_lanes_U0_din),
    .if_full_n(start_for_process_lanes_U0_full_n),
    .if_write(adc2iq_U0_start_write),
    .if_dout(start_for_process_lanes_U0_dout),
    .if_empty_n(start_for_process_lanes_U0_empty_n),
    .if_read(process_lanes_U0_ap_ready)
);

assign adc2iq_U0_ap_continue = 1'b1;

assign adc2iq_U0_ap_start = 1'b1;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign istream_V_TREADY = adc2iq_U0_istream_V_TREADY;

assign lanes_TDATA = process_lanes_U0_lanes_TDATA;

assign lanes_TKEEP = process_lanes_U0_lanes_TKEEP;

assign lanes_TLAST = process_lanes_U0_lanes_TLAST;

assign lanes_TSTRB = process_lanes_U0_lanes_TSTRB;

assign lanes_TVALID = process_lanes_U0_lanes_TVALID;

assign process_lanes_U0_ap_continue = 1'b1;

assign process_lanes_U0_ap_start = start_for_process_lanes_U0_empty_n;

assign qstream_V_TREADY = adc2iq_U0_qstream_V_TREADY;

assign start_for_process_lanes_U0_din = 1'b1;


// synthesis translate_off
`include "adc_to_opfb_hls_deadlock_detector.vh"
`include "adc_to_opfb_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //adc_to_opfb

