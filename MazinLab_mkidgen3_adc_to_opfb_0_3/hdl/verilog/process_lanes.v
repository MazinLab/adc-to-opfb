// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module process_lanes (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        iqstream_0_V_V_dout,
        iqstream_0_V_V_empty_n,
        iqstream_0_V_V_read,
        iqstream_1_V_V_dout,
        iqstream_1_V_V_empty_n,
        iqstream_1_V_V_read,
        iqstream_2_V_V_dout,
        iqstream_2_V_V_empty_n,
        iqstream_2_V_V_read,
        iqstream_3_V_V_dout,
        iqstream_3_V_V_empty_n,
        iqstream_3_V_V_read,
        iqstream_4_V_V_dout,
        iqstream_4_V_V_empty_n,
        iqstream_4_V_V_read,
        iqstream_5_V_V_dout,
        iqstream_5_V_V_empty_n,
        iqstream_5_V_V_read,
        iqstream_6_V_V_dout,
        iqstream_6_V_V_empty_n,
        iqstream_6_V_V_read,
        iqstream_7_V_V_dout,
        iqstream_7_V_V_empty_n,
        iqstream_7_V_V_read,
        lane_0_TREADY,
        lane_1_TREADY,
        lane_2_TREADY,
        lane_3_TREADY,
        lane_4_TREADY,
        lane_5_TREADY,
        lane_6_TREADY,
        lane_7_TREADY,
        lane_8_TREADY,
        lane_9_TREADY,
        lane_10_TREADY,
        lane_11_TREADY,
        lane_12_TREADY,
        lane_13_TREADY,
        lane_14_TREADY,
        lane_15_TREADY,
        lane_0_TDATA,
        lane_0_TVALID,
        lane_1_TDATA,
        lane_1_TVALID,
        lane_2_TDATA,
        lane_2_TVALID,
        lane_3_TDATA,
        lane_3_TVALID,
        lane_4_TDATA,
        lane_4_TVALID,
        lane_5_TDATA,
        lane_5_TVALID,
        lane_6_TDATA,
        lane_6_TVALID,
        lane_7_TDATA,
        lane_7_TVALID,
        lane_8_TDATA,
        lane_8_TVALID,
        lane_9_TDATA,
        lane_9_TVALID,
        lane_10_TDATA,
        lane_10_TVALID,
        lane_11_TDATA,
        lane_11_TVALID,
        lane_12_TDATA,
        lane_12_TVALID,
        lane_13_TDATA,
        lane_13_TVALID,
        lane_14_TDATA,
        lane_14_TVALID,
        lane_15_TDATA,
        lane_15_TVALID,
        lane_0_TLAST,
        lane_1_TLAST,
        lane_2_TLAST,
        lane_3_TLAST,
        lane_4_TLAST,
        lane_5_TLAST,
        lane_6_TLAST,
        lane_7_TLAST,
        lane_8_TLAST,
        lane_9_TLAST,
        lane_10_TLAST,
        lane_11_TLAST,
        lane_12_TLAST,
        lane_13_TLAST,
        lane_14_TLAST,
        lane_15_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] iqstream_0_V_V_dout;
input   iqstream_0_V_V_empty_n;
output   iqstream_0_V_V_read;
input  [31:0] iqstream_1_V_V_dout;
input   iqstream_1_V_V_empty_n;
output   iqstream_1_V_V_read;
input  [31:0] iqstream_2_V_V_dout;
input   iqstream_2_V_V_empty_n;
output   iqstream_2_V_V_read;
input  [31:0] iqstream_3_V_V_dout;
input   iqstream_3_V_V_empty_n;
output   iqstream_3_V_V_read;
input  [31:0] iqstream_4_V_V_dout;
input   iqstream_4_V_V_empty_n;
output   iqstream_4_V_V_read;
input  [31:0] iqstream_5_V_V_dout;
input   iqstream_5_V_V_empty_n;
output   iqstream_5_V_V_read;
input  [31:0] iqstream_6_V_V_dout;
input   iqstream_6_V_V_empty_n;
output   iqstream_6_V_V_read;
input  [31:0] iqstream_7_V_V_dout;
input   iqstream_7_V_V_empty_n;
output   iqstream_7_V_V_read;
input   lane_0_TREADY;
input   lane_1_TREADY;
input   lane_2_TREADY;
input   lane_3_TREADY;
input   lane_4_TREADY;
input   lane_5_TREADY;
input   lane_6_TREADY;
input   lane_7_TREADY;
input   lane_8_TREADY;
input   lane_9_TREADY;
input   lane_10_TREADY;
input   lane_11_TREADY;
input   lane_12_TREADY;
input   lane_13_TREADY;
input   lane_14_TREADY;
input   lane_15_TREADY;
output  [31:0] lane_0_TDATA;
output   lane_0_TVALID;
output  [31:0] lane_1_TDATA;
output   lane_1_TVALID;
output  [31:0] lane_2_TDATA;
output   lane_2_TVALID;
output  [31:0] lane_3_TDATA;
output   lane_3_TVALID;
output  [31:0] lane_4_TDATA;
output   lane_4_TVALID;
output  [31:0] lane_5_TDATA;
output   lane_5_TVALID;
output  [31:0] lane_6_TDATA;
output   lane_6_TVALID;
output  [31:0] lane_7_TDATA;
output   lane_7_TVALID;
output  [31:0] lane_8_TDATA;
output   lane_8_TVALID;
output  [31:0] lane_9_TDATA;
output   lane_9_TVALID;
output  [31:0] lane_10_TDATA;
output   lane_10_TVALID;
output  [31:0] lane_11_TDATA;
output   lane_11_TVALID;
output  [31:0] lane_12_TDATA;
output   lane_12_TVALID;
output  [31:0] lane_13_TDATA;
output   lane_13_TVALID;
output  [31:0] lane_14_TDATA;
output   lane_14_TVALID;
output  [31:0] lane_15_TDATA;
output   lane_15_TVALID;
output  [0:0] lane_0_TLAST;
output  [0:0] lane_1_TLAST;
output  [0:0] lane_2_TLAST;
output  [0:0] lane_3_TLAST;
output  [0:0] lane_4_TLAST;
output  [0:0] lane_5_TLAST;
output  [0:0] lane_6_TLAST;
output  [0:0] lane_7_TLAST;
output  [0:0] lane_8_TLAST;
output  [0:0] lane_9_TLAST;
output  [0:0] lane_10_TLAST;
output  [0:0] lane_11_TLAST;
output  [0:0] lane_12_TLAST;
output  [0:0] lane_13_TLAST;
output  [0:0] lane_14_TLAST;
output  [0:0] lane_15_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg iqstream_0_V_V_read;
reg iqstream_1_V_V_read;
reg iqstream_2_V_V_read;
reg iqstream_3_V_V_read;
reg iqstream_4_V_V_read;
reg iqstream_5_V_V_read;
reg iqstream_6_V_V_read;
reg iqstream_7_V_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state2_io;
wire    regslice_forward_lane_0_data_V_U_apdone_blk;
wire    regslice_forward_lane_1_data_V_U_apdone_blk;
wire    regslice_forward_lane_2_data_V_U_apdone_blk;
wire    regslice_forward_lane_3_data_V_U_apdone_blk;
wire    regslice_forward_lane_4_data_V_U_apdone_blk;
wire    regslice_forward_lane_5_data_V_U_apdone_blk;
wire    regslice_forward_lane_6_data_V_U_apdone_blk;
wire    regslice_forward_lane_7_data_V_U_apdone_blk;
wire    regslice_forward_lane_8_data_V_U_apdone_blk;
wire    regslice_forward_lane_9_data_V_U_apdone_blk;
wire    regslice_forward_lane_10_data_V_U_apdone_blk;
wire    regslice_forward_lane_11_data_V_U_apdone_blk;
wire    regslice_forward_lane_12_data_V_U_apdone_blk;
wire    regslice_forward_lane_13_data_V_U_apdone_blk;
wire    regslice_forward_lane_14_data_V_U_apdone_blk;
wire    regslice_forward_lane_15_data_V_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] cycle_V;
reg   [31:0] even_lane_z1_V_0;
reg   [31:0] even_lane_z1_V_1;
reg   [31:0] even_lane_z1_V_2;
reg   [31:0] even_lane_z1_V_3;
reg   [31:0] even_lane_z1_V_4;
reg   [31:0] even_lane_z1_V_5;
reg   [31:0] even_lane_z1_V_6;
reg   [31:0] even_lane_z1_V_7;
reg    delays_Array_V_0_ce0;
reg    delays_Array_V_0_we0;
wire   [31:0] delays_Array_V_0_q0;
reg    delays_Array_V_1_ce0;
reg    delays_Array_V_1_we0;
wire   [31:0] delays_Array_V_1_q0;
reg    delays_Array_V_2_ce0;
reg    delays_Array_V_2_we0;
wire   [31:0] delays_Array_V_2_q0;
reg    delays_Array_V_3_ce0;
reg    delays_Array_V_3_we0;
wire   [31:0] delays_Array_V_3_q0;
reg    delays_Array_V_4_ce0;
reg    delays_Array_V_4_we0;
wire   [31:0] delays_Array_V_4_q0;
reg    delays_Array_V_5_ce0;
reg    delays_Array_V_5_we0;
wire   [31:0] delays_Array_V_5_q0;
reg    delays_Array_V_6_ce0;
reg    delays_Array_V_6_we0;
wire   [31:0] delays_Array_V_6_q0;
reg    delays_Array_V_7_ce0;
reg    delays_Array_V_7_we0;
wire   [31:0] delays_Array_V_7_q0;
reg    delays_Array_V_8_ce0;
reg    delays_Array_V_8_we0;
wire   [31:0] delays_Array_V_8_q0;
reg    delays_Array_V_9_ce0;
reg    delays_Array_V_9_we0;
wire   [31:0] delays_Array_V_9_q0;
reg    delays_Array_V_10_ce0;
reg    delays_Array_V_10_we0;
wire   [31:0] delays_Array_V_10_q0;
reg    delays_Array_V_11_ce0;
reg    delays_Array_V_11_we0;
wire   [31:0] delays_Array_V_11_q0;
reg    delays_Array_V_12_ce0;
reg    delays_Array_V_12_we0;
wire   [31:0] delays_Array_V_12_q0;
reg    delays_Array_V_13_ce0;
reg    delays_Array_V_13_we0;
wire   [31:0] delays_Array_V_13_q0;
reg    delays_Array_V_14_ce0;
reg    delays_Array_V_14_we0;
wire   [31:0] delays_Array_V_14_q0;
reg    delays_Array_V_15_ce0;
reg    delays_Array_V_15_we0;
wire   [31:0] delays_Array_V_15_q0;
reg    iqstream_0_V_V_blk_n;
wire    ap_block_pp0_stage0;
reg    iqstream_1_V_V_blk_n;
reg    iqstream_2_V_V_blk_n;
reg    iqstream_3_V_V_blk_n;
reg    iqstream_4_V_V_blk_n;
reg    iqstream_5_V_V_blk_n;
reg    iqstream_6_V_V_blk_n;
reg    iqstream_7_V_V_blk_n;
reg    lane_0_TDATA_blk_n;
reg    lane_1_TDATA_blk_n;
reg    lane_2_TDATA_blk_n;
reg    lane_3_TDATA_blk_n;
reg    lane_4_TDATA_blk_n;
reg    lane_5_TDATA_blk_n;
reg    lane_6_TDATA_blk_n;
reg    lane_7_TDATA_blk_n;
reg    lane_8_TDATA_blk_n;
reg    lane_9_TDATA_blk_n;
reg    lane_10_TDATA_blk_n;
reg    lane_11_TDATA_blk_n;
reg    lane_12_TDATA_blk_n;
reg    lane_13_TDATA_blk_n;
reg    lane_14_TDATA_blk_n;
reg    lane_15_TDATA_blk_n;
reg   [31:0] tmp_V_reg_806;
reg   [31:0] tmp_V_1_reg_814;
reg   [31:0] tmp_V_2_reg_822;
reg   [31:0] tmp_V_3_reg_830;
reg   [31:0] tmp_V_4_reg_838;
reg   [31:0] tmp_V_5_reg_846;
reg   [31:0] tmp_V_6_reg_854;
reg   [31:0] tmp_V_7_reg_862;
wire   [0:0] icmp_ln879_fu_441_p2;
reg    ap_block_pp0_stage0_subdone;
wire   [7:0] add_ln700_fu_794_p2;
wire   [31:0] select_ln21_fu_429_p3;
wire   [31:0] select_ln21_2_fu_495_p3;
wire   [31:0] select_ln21_4_fu_539_p3;
wire   [31:0] select_ln21_6_fu_583_p3;
wire   [31:0] select_ln21_8_fu_627_p3;
wire   [31:0] select_ln21_10_fu_671_p3;
wire   [31:0] select_ln21_12_fu_715_p3;
wire   [31:0] select_ln21_14_fu_759_p3;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] xor_ln114_fu_414_p2;
wire   [0:0] trunc_ln791_fu_410_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    lane_0_TVALID_int;
wire    lane_0_TREADY_int;
wire    regslice_forward_lane_0_data_V_U_vld_out;
wire   [31:0] lane_1_TDATA_int;
reg    lane_1_TVALID_int;
wire    lane_1_TREADY_int;
wire    regslice_forward_lane_1_data_V_U_vld_out;
reg    lane_2_TVALID_int;
wire    lane_2_TREADY_int;
wire    regslice_forward_lane_2_data_V_U_vld_out;
wire   [31:0] lane_3_TDATA_int;
reg    lane_3_TVALID_int;
wire    lane_3_TREADY_int;
wire    regslice_forward_lane_3_data_V_U_vld_out;
reg    lane_4_TVALID_int;
wire    lane_4_TREADY_int;
wire    regslice_forward_lane_4_data_V_U_vld_out;
wire   [31:0] lane_5_TDATA_int;
reg    lane_5_TVALID_int;
wire    lane_5_TREADY_int;
wire    regslice_forward_lane_5_data_V_U_vld_out;
reg    lane_6_TVALID_int;
wire    lane_6_TREADY_int;
wire    regslice_forward_lane_6_data_V_U_vld_out;
wire   [31:0] lane_7_TDATA_int;
reg    lane_7_TVALID_int;
wire    lane_7_TREADY_int;
wire    regslice_forward_lane_7_data_V_U_vld_out;
reg    lane_8_TVALID_int;
wire    lane_8_TREADY_int;
wire    regslice_forward_lane_8_data_V_U_vld_out;
wire   [31:0] lane_9_TDATA_int;
reg    lane_9_TVALID_int;
wire    lane_9_TREADY_int;
wire    regslice_forward_lane_9_data_V_U_vld_out;
reg    lane_10_TVALID_int;
wire    lane_10_TREADY_int;
wire    regslice_forward_lane_10_data_V_U_vld_out;
wire   [31:0] lane_11_TDATA_int;
reg    lane_11_TVALID_int;
wire    lane_11_TREADY_int;
wire    regslice_forward_lane_11_data_V_U_vld_out;
reg    lane_12_TVALID_int;
wire    lane_12_TREADY_int;
wire    regslice_forward_lane_12_data_V_U_vld_out;
wire   [31:0] lane_13_TDATA_int;
reg    lane_13_TVALID_int;
wire    lane_13_TREADY_int;
wire    regslice_forward_lane_13_data_V_U_vld_out;
reg    lane_14_TVALID_int;
wire    lane_14_TREADY_int;
wire    regslice_forward_lane_14_data_V_U_vld_out;
wire   [31:0] lane_15_TDATA_int;
reg    lane_15_TVALID_int;
wire    lane_15_TREADY_int;
wire    regslice_forward_lane_15_data_V_U_vld_out;
wire    regslice_forward_lane_0_last_V_U_apdone_blk;
wire    regslice_forward_lane_0_last_V_U_ack_in_dummy;
wire    regslice_forward_lane_0_last_V_U_vld_out;
wire    regslice_forward_lane_1_last_V_U_apdone_blk;
wire    regslice_forward_lane_1_last_V_U_ack_in_dummy;
wire    regslice_forward_lane_1_last_V_U_vld_out;
wire    regslice_forward_lane_2_last_V_U_apdone_blk;
wire    regslice_forward_lane_2_last_V_U_ack_in_dummy;
wire    regslice_forward_lane_2_last_V_U_vld_out;
wire    regslice_forward_lane_3_last_V_U_apdone_blk;
wire    regslice_forward_lane_3_last_V_U_ack_in_dummy;
wire    regslice_forward_lane_3_last_V_U_vld_out;
wire    regslice_forward_lane_4_last_V_U_apdone_blk;
wire    regslice_forward_lane_4_last_V_U_ack_in_dummy;
wire    regslice_forward_lane_4_last_V_U_vld_out;
wire    regslice_forward_lane_5_last_V_U_apdone_blk;
wire    regslice_forward_lane_5_last_V_U_ack_in_dummy;
wire    regslice_forward_lane_5_last_V_U_vld_out;
wire    regslice_forward_lane_6_last_V_U_apdone_blk;
wire    regslice_forward_lane_6_last_V_U_ack_in_dummy;
wire    regslice_forward_lane_6_last_V_U_vld_out;
wire    regslice_forward_lane_7_last_V_U_apdone_blk;
wire    regslice_forward_lane_7_last_V_U_ack_in_dummy;
wire    regslice_forward_lane_7_last_V_U_vld_out;
wire    regslice_forward_lane_8_last_V_U_apdone_blk;
wire    regslice_forward_lane_8_last_V_U_ack_in_dummy;
wire    regslice_forward_lane_8_last_V_U_vld_out;
wire    regslice_forward_lane_9_last_V_U_apdone_blk;
wire    regslice_forward_lane_9_last_V_U_ack_in_dummy;
wire    regslice_forward_lane_9_last_V_U_vld_out;
wire    regslice_forward_lane_10_last_V_U_apdone_blk;
wire    regslice_forward_lane_10_last_V_U_ack_in_dummy;
wire    regslice_forward_lane_10_last_V_U_vld_out;
wire    regslice_forward_lane_11_last_V_U_apdone_blk;
wire    regslice_forward_lane_11_last_V_U_ack_in_dummy;
wire    regslice_forward_lane_11_last_V_U_vld_out;
wire    regslice_forward_lane_12_last_V_U_apdone_blk;
wire    regslice_forward_lane_12_last_V_U_ack_in_dummy;
wire    regslice_forward_lane_12_last_V_U_vld_out;
wire    regslice_forward_lane_13_last_V_U_apdone_blk;
wire    regslice_forward_lane_13_last_V_U_ack_in_dummy;
wire    regslice_forward_lane_13_last_V_U_vld_out;
wire    regslice_forward_lane_14_last_V_U_apdone_blk;
wire    regslice_forward_lane_14_last_V_U_ack_in_dummy;
wire    regslice_forward_lane_14_last_V_U_vld_out;
wire    regslice_forward_lane_15_last_V_U_apdone_blk;
wire    regslice_forward_lane_15_last_V_U_ack_in_dummy;
wire    regslice_forward_lane_15_last_V_U_vld_out;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 cycle_V = 8'd0;
#0 even_lane_z1_V_0 = 32'd0;
#0 even_lane_z1_V_1 = 32'd0;
#0 even_lane_z1_V_2 = 32'd0;
#0 even_lane_z1_V_3 = 32'd0;
#0 even_lane_z1_V_4 = 32'd0;
#0 even_lane_z1_V_5 = 32'd0;
#0 even_lane_z1_V_6 = 32'd0;
#0 even_lane_z1_V_7 = 32'd0;
end

process_lanes_delbkb #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
delays_Array_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd127),
    .ce0(delays_Array_V_0_ce0),
    .we0(delays_Array_V_0_we0),
    .d0(tmp_V_reg_806),
    .q0(delays_Array_V_0_q0)
);

process_lanes_delbkb #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
delays_Array_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd127),
    .ce0(delays_Array_V_1_ce0),
    .we0(delays_Array_V_1_we0),
    .d0(tmp_V_reg_806),
    .q0(delays_Array_V_1_q0)
);

process_lanes_delbkb #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
delays_Array_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd127),
    .ce0(delays_Array_V_2_ce0),
    .we0(delays_Array_V_2_we0),
    .d0(tmp_V_1_reg_814),
    .q0(delays_Array_V_2_q0)
);

process_lanes_delbkb #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
delays_Array_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd127),
    .ce0(delays_Array_V_3_ce0),
    .we0(delays_Array_V_3_we0),
    .d0(tmp_V_1_reg_814),
    .q0(delays_Array_V_3_q0)
);

process_lanes_delbkb #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
delays_Array_V_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd127),
    .ce0(delays_Array_V_4_ce0),
    .we0(delays_Array_V_4_we0),
    .d0(tmp_V_2_reg_822),
    .q0(delays_Array_V_4_q0)
);

process_lanes_delbkb #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
delays_Array_V_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd127),
    .ce0(delays_Array_V_5_ce0),
    .we0(delays_Array_V_5_we0),
    .d0(tmp_V_2_reg_822),
    .q0(delays_Array_V_5_q0)
);

process_lanes_delbkb #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
delays_Array_V_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd127),
    .ce0(delays_Array_V_6_ce0),
    .we0(delays_Array_V_6_we0),
    .d0(tmp_V_3_reg_830),
    .q0(delays_Array_V_6_q0)
);

process_lanes_delbkb #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
delays_Array_V_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd127),
    .ce0(delays_Array_V_7_ce0),
    .we0(delays_Array_V_7_we0),
    .d0(tmp_V_3_reg_830),
    .q0(delays_Array_V_7_q0)
);

process_lanes_delbkb #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
delays_Array_V_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd127),
    .ce0(delays_Array_V_8_ce0),
    .we0(delays_Array_V_8_we0),
    .d0(tmp_V_4_reg_838),
    .q0(delays_Array_V_8_q0)
);

process_lanes_delbkb #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
delays_Array_V_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd127),
    .ce0(delays_Array_V_9_ce0),
    .we0(delays_Array_V_9_we0),
    .d0(tmp_V_4_reg_838),
    .q0(delays_Array_V_9_q0)
);

process_lanes_delbkb #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
delays_Array_V_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd127),
    .ce0(delays_Array_V_10_ce0),
    .we0(delays_Array_V_10_we0),
    .d0(tmp_V_5_reg_846),
    .q0(delays_Array_V_10_q0)
);

process_lanes_delbkb #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
delays_Array_V_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd127),
    .ce0(delays_Array_V_11_ce0),
    .we0(delays_Array_V_11_we0),
    .d0(tmp_V_5_reg_846),
    .q0(delays_Array_V_11_q0)
);

process_lanes_delbkb #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
delays_Array_V_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd127),
    .ce0(delays_Array_V_12_ce0),
    .we0(delays_Array_V_12_we0),
    .d0(tmp_V_6_reg_854),
    .q0(delays_Array_V_12_q0)
);

process_lanes_delbkb #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
delays_Array_V_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd127),
    .ce0(delays_Array_V_13_ce0),
    .we0(delays_Array_V_13_we0),
    .d0(tmp_V_6_reg_854),
    .q0(delays_Array_V_13_q0)
);

process_lanes_delbkb #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
delays_Array_V_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd127),
    .ce0(delays_Array_V_14_ce0),
    .we0(delays_Array_V_14_we0),
    .d0(tmp_V_7_reg_862),
    .q0(delays_Array_V_14_q0)
);

process_lanes_delbkb #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
delays_Array_V_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(7'd127),
    .ce0(delays_Array_V_15_ce0),
    .we0(delays_Array_V_15_we0),
    .d0(tmp_V_7_reg_862),
    .q0(delays_Array_V_15_q0)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_0_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(even_lane_z1_V_0),
    .vld_in(lane_0_TVALID_int),
    .ack_in(lane_0_TREADY_int),
    .data_out(lane_0_TDATA),
    .vld_out(regslice_forward_lane_0_data_V_U_vld_out),
    .ack_out(lane_0_TREADY),
    .apdone_blk(regslice_forward_lane_0_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_1_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(lane_1_TDATA_int),
    .vld_in(lane_1_TVALID_int),
    .ack_in(lane_1_TREADY_int),
    .data_out(lane_1_TDATA),
    .vld_out(regslice_forward_lane_1_data_V_U_vld_out),
    .ack_out(lane_1_TREADY),
    .apdone_blk(regslice_forward_lane_1_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_2_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(even_lane_z1_V_1),
    .vld_in(lane_2_TVALID_int),
    .ack_in(lane_2_TREADY_int),
    .data_out(lane_2_TDATA),
    .vld_out(regslice_forward_lane_2_data_V_U_vld_out),
    .ack_out(lane_2_TREADY),
    .apdone_blk(regslice_forward_lane_2_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_3_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(lane_3_TDATA_int),
    .vld_in(lane_3_TVALID_int),
    .ack_in(lane_3_TREADY_int),
    .data_out(lane_3_TDATA),
    .vld_out(regslice_forward_lane_3_data_V_U_vld_out),
    .ack_out(lane_3_TREADY),
    .apdone_blk(regslice_forward_lane_3_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_4_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(even_lane_z1_V_2),
    .vld_in(lane_4_TVALID_int),
    .ack_in(lane_4_TREADY_int),
    .data_out(lane_4_TDATA),
    .vld_out(regslice_forward_lane_4_data_V_U_vld_out),
    .ack_out(lane_4_TREADY),
    .apdone_blk(regslice_forward_lane_4_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_5_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(lane_5_TDATA_int),
    .vld_in(lane_5_TVALID_int),
    .ack_in(lane_5_TREADY_int),
    .data_out(lane_5_TDATA),
    .vld_out(regslice_forward_lane_5_data_V_U_vld_out),
    .ack_out(lane_5_TREADY),
    .apdone_blk(regslice_forward_lane_5_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_6_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(even_lane_z1_V_3),
    .vld_in(lane_6_TVALID_int),
    .ack_in(lane_6_TREADY_int),
    .data_out(lane_6_TDATA),
    .vld_out(regslice_forward_lane_6_data_V_U_vld_out),
    .ack_out(lane_6_TREADY),
    .apdone_blk(regslice_forward_lane_6_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_7_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(lane_7_TDATA_int),
    .vld_in(lane_7_TVALID_int),
    .ack_in(lane_7_TREADY_int),
    .data_out(lane_7_TDATA),
    .vld_out(regslice_forward_lane_7_data_V_U_vld_out),
    .ack_out(lane_7_TREADY),
    .apdone_blk(regslice_forward_lane_7_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_8_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(even_lane_z1_V_4),
    .vld_in(lane_8_TVALID_int),
    .ack_in(lane_8_TREADY_int),
    .data_out(lane_8_TDATA),
    .vld_out(regslice_forward_lane_8_data_V_U_vld_out),
    .ack_out(lane_8_TREADY),
    .apdone_blk(regslice_forward_lane_8_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_9_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(lane_9_TDATA_int),
    .vld_in(lane_9_TVALID_int),
    .ack_in(lane_9_TREADY_int),
    .data_out(lane_9_TDATA),
    .vld_out(regslice_forward_lane_9_data_V_U_vld_out),
    .ack_out(lane_9_TREADY),
    .apdone_blk(regslice_forward_lane_9_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_10_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(even_lane_z1_V_5),
    .vld_in(lane_10_TVALID_int),
    .ack_in(lane_10_TREADY_int),
    .data_out(lane_10_TDATA),
    .vld_out(regslice_forward_lane_10_data_V_U_vld_out),
    .ack_out(lane_10_TREADY),
    .apdone_blk(regslice_forward_lane_10_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_11_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(lane_11_TDATA_int),
    .vld_in(lane_11_TVALID_int),
    .ack_in(lane_11_TREADY_int),
    .data_out(lane_11_TDATA),
    .vld_out(regslice_forward_lane_11_data_V_U_vld_out),
    .ack_out(lane_11_TREADY),
    .apdone_blk(regslice_forward_lane_11_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_12_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(even_lane_z1_V_6),
    .vld_in(lane_12_TVALID_int),
    .ack_in(lane_12_TREADY_int),
    .data_out(lane_12_TDATA),
    .vld_out(regslice_forward_lane_12_data_V_U_vld_out),
    .ack_out(lane_12_TREADY),
    .apdone_blk(regslice_forward_lane_12_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_13_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(lane_13_TDATA_int),
    .vld_in(lane_13_TVALID_int),
    .ack_in(lane_13_TREADY_int),
    .data_out(lane_13_TDATA),
    .vld_out(regslice_forward_lane_13_data_V_U_vld_out),
    .ack_out(lane_13_TREADY),
    .apdone_blk(regslice_forward_lane_13_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_14_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(even_lane_z1_V_7),
    .vld_in(lane_14_TVALID_int),
    .ack_in(lane_14_TREADY_int),
    .data_out(lane_14_TDATA),
    .vld_out(regslice_forward_lane_14_data_V_U_vld_out),
    .ack_out(lane_14_TREADY),
    .apdone_blk(regslice_forward_lane_14_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 32 ))
regslice_forward_lane_15_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(lane_15_TDATA_int),
    .vld_in(lane_15_TVALID_int),
    .ack_in(lane_15_TREADY_int),
    .data_out(lane_15_TDATA),
    .vld_out(regslice_forward_lane_15_data_V_U_vld_out),
    .ack_out(lane_15_TREADY),
    .apdone_blk(regslice_forward_lane_15_data_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 1 ))
regslice_forward_lane_0_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(icmp_ln879_fu_441_p2),
    .vld_in(lane_0_TVALID_int),
    .ack_in(regslice_forward_lane_0_last_V_U_ack_in_dummy),
    .data_out(lane_0_TLAST),
    .vld_out(regslice_forward_lane_0_last_V_U_vld_out),
    .ack_out(lane_0_TREADY),
    .apdone_blk(regslice_forward_lane_0_last_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 1 ))
regslice_forward_lane_1_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(icmp_ln879_fu_441_p2),
    .vld_in(lane_1_TVALID_int),
    .ack_in(regslice_forward_lane_1_last_V_U_ack_in_dummy),
    .data_out(lane_1_TLAST),
    .vld_out(regslice_forward_lane_1_last_V_U_vld_out),
    .ack_out(lane_1_TREADY),
    .apdone_blk(regslice_forward_lane_1_last_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 1 ))
regslice_forward_lane_2_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(icmp_ln879_fu_441_p2),
    .vld_in(lane_2_TVALID_int),
    .ack_in(regslice_forward_lane_2_last_V_U_ack_in_dummy),
    .data_out(lane_2_TLAST),
    .vld_out(regslice_forward_lane_2_last_V_U_vld_out),
    .ack_out(lane_2_TREADY),
    .apdone_blk(regslice_forward_lane_2_last_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 1 ))
regslice_forward_lane_3_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(icmp_ln879_fu_441_p2),
    .vld_in(lane_3_TVALID_int),
    .ack_in(regslice_forward_lane_3_last_V_U_ack_in_dummy),
    .data_out(lane_3_TLAST),
    .vld_out(regslice_forward_lane_3_last_V_U_vld_out),
    .ack_out(lane_3_TREADY),
    .apdone_blk(regslice_forward_lane_3_last_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 1 ))
regslice_forward_lane_4_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(icmp_ln879_fu_441_p2),
    .vld_in(lane_4_TVALID_int),
    .ack_in(regslice_forward_lane_4_last_V_U_ack_in_dummy),
    .data_out(lane_4_TLAST),
    .vld_out(regslice_forward_lane_4_last_V_U_vld_out),
    .ack_out(lane_4_TREADY),
    .apdone_blk(regslice_forward_lane_4_last_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 1 ))
regslice_forward_lane_5_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(icmp_ln879_fu_441_p2),
    .vld_in(lane_5_TVALID_int),
    .ack_in(regslice_forward_lane_5_last_V_U_ack_in_dummy),
    .data_out(lane_5_TLAST),
    .vld_out(regslice_forward_lane_5_last_V_U_vld_out),
    .ack_out(lane_5_TREADY),
    .apdone_blk(regslice_forward_lane_5_last_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 1 ))
regslice_forward_lane_6_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(icmp_ln879_fu_441_p2),
    .vld_in(lane_6_TVALID_int),
    .ack_in(regslice_forward_lane_6_last_V_U_ack_in_dummy),
    .data_out(lane_6_TLAST),
    .vld_out(regslice_forward_lane_6_last_V_U_vld_out),
    .ack_out(lane_6_TREADY),
    .apdone_blk(regslice_forward_lane_6_last_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 1 ))
regslice_forward_lane_7_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(icmp_ln879_fu_441_p2),
    .vld_in(lane_7_TVALID_int),
    .ack_in(regslice_forward_lane_7_last_V_U_ack_in_dummy),
    .data_out(lane_7_TLAST),
    .vld_out(regslice_forward_lane_7_last_V_U_vld_out),
    .ack_out(lane_7_TREADY),
    .apdone_blk(regslice_forward_lane_7_last_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 1 ))
regslice_forward_lane_8_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(icmp_ln879_fu_441_p2),
    .vld_in(lane_8_TVALID_int),
    .ack_in(regslice_forward_lane_8_last_V_U_ack_in_dummy),
    .data_out(lane_8_TLAST),
    .vld_out(regslice_forward_lane_8_last_V_U_vld_out),
    .ack_out(lane_8_TREADY),
    .apdone_blk(regslice_forward_lane_8_last_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 1 ))
regslice_forward_lane_9_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(icmp_ln879_fu_441_p2),
    .vld_in(lane_9_TVALID_int),
    .ack_in(regslice_forward_lane_9_last_V_U_ack_in_dummy),
    .data_out(lane_9_TLAST),
    .vld_out(regslice_forward_lane_9_last_V_U_vld_out),
    .ack_out(lane_9_TREADY),
    .apdone_blk(regslice_forward_lane_9_last_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 1 ))
regslice_forward_lane_10_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(icmp_ln879_fu_441_p2),
    .vld_in(lane_10_TVALID_int),
    .ack_in(regslice_forward_lane_10_last_V_U_ack_in_dummy),
    .data_out(lane_10_TLAST),
    .vld_out(regslice_forward_lane_10_last_V_U_vld_out),
    .ack_out(lane_10_TREADY),
    .apdone_blk(regslice_forward_lane_10_last_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 1 ))
regslice_forward_lane_11_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(icmp_ln879_fu_441_p2),
    .vld_in(lane_11_TVALID_int),
    .ack_in(regslice_forward_lane_11_last_V_U_ack_in_dummy),
    .data_out(lane_11_TLAST),
    .vld_out(regslice_forward_lane_11_last_V_U_vld_out),
    .ack_out(lane_11_TREADY),
    .apdone_blk(regslice_forward_lane_11_last_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 1 ))
regslice_forward_lane_12_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(icmp_ln879_fu_441_p2),
    .vld_in(lane_12_TVALID_int),
    .ack_in(regslice_forward_lane_12_last_V_U_ack_in_dummy),
    .data_out(lane_12_TLAST),
    .vld_out(regslice_forward_lane_12_last_V_U_vld_out),
    .ack_out(lane_12_TREADY),
    .apdone_blk(regslice_forward_lane_12_last_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 1 ))
regslice_forward_lane_13_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(icmp_ln879_fu_441_p2),
    .vld_in(lane_13_TVALID_int),
    .ack_in(regslice_forward_lane_13_last_V_U_ack_in_dummy),
    .data_out(lane_13_TLAST),
    .vld_out(regslice_forward_lane_13_last_V_U_vld_out),
    .ack_out(lane_13_TREADY),
    .apdone_blk(regslice_forward_lane_13_last_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 1 ))
regslice_forward_lane_14_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(icmp_ln879_fu_441_p2),
    .vld_in(lane_14_TVALID_int),
    .ack_in(regslice_forward_lane_14_last_V_U_ack_in_dummy),
    .data_out(lane_14_TLAST),
    .vld_out(regslice_forward_lane_14_last_V_U_vld_out),
    .ack_out(lane_14_TREADY),
    .apdone_blk(regslice_forward_lane_14_last_V_U_apdone_blk)
);

regslice_forward #(
    .DataWidth( 1 ))
regslice_forward_lane_15_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(icmp_ln879_fu_441_p2),
    .vld_in(lane_15_TVALID_int),
    .ack_in(regslice_forward_lane_15_last_V_U_ack_in_dummy),
    .data_out(lane_15_TLAST),
    .vld_out(regslice_forward_lane_15_last_V_U_vld_out),
    .ack_out(lane_15_TREADY),
    .apdone_blk(regslice_forward_lane_15_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        cycle_V <= add_ln700_fu_794_p2;
        even_lane_z1_V_0 <= select_ln21_fu_429_p3;
        even_lane_z1_V_1 <= select_ln21_2_fu_495_p3;
        even_lane_z1_V_2 <= select_ln21_4_fu_539_p3;
        even_lane_z1_V_3 <= select_ln21_6_fu_583_p3;
        even_lane_z1_V_4 <= select_ln21_8_fu_627_p3;
        even_lane_z1_V_5 <= select_ln21_10_fu_671_p3;
        even_lane_z1_V_6 <= select_ln21_12_fu_715_p3;
        even_lane_z1_V_7 <= select_ln21_14_fu_759_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_1_reg_814 <= iqstream_1_V_V_dout;
        tmp_V_2_reg_822 <= iqstream_2_V_V_dout;
        tmp_V_3_reg_830 <= iqstream_3_V_V_dout;
        tmp_V_4_reg_838 <= iqstream_4_V_V_dout;
        tmp_V_5_reg_846 <= iqstream_5_V_V_dout;
        tmp_V_6_reg_854 <= iqstream_6_V_V_dout;
        tmp_V_7_reg_862 <= iqstream_7_V_V_dout;
        tmp_V_reg_806 <= iqstream_0_V_V_dout;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_0_ce0 = xor_ln114_fu_414_p2;
    end else begin
        delays_Array_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_0_we0 = xor_ln114_fu_414_p2;
    end else begin
        delays_Array_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_10_ce0 = xor_ln114_fu_414_p2;
    end else begin
        delays_Array_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_10_we0 = xor_ln114_fu_414_p2;
    end else begin
        delays_Array_V_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_11_ce0 = trunc_ln791_fu_410_p1;
    end else begin
        delays_Array_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_11_we0 = trunc_ln791_fu_410_p1;
    end else begin
        delays_Array_V_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_12_ce0 = xor_ln114_fu_414_p2;
    end else begin
        delays_Array_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_12_we0 = xor_ln114_fu_414_p2;
    end else begin
        delays_Array_V_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_13_ce0 = trunc_ln791_fu_410_p1;
    end else begin
        delays_Array_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_13_we0 = trunc_ln791_fu_410_p1;
    end else begin
        delays_Array_V_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_14_ce0 = xor_ln114_fu_414_p2;
    end else begin
        delays_Array_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_14_we0 = xor_ln114_fu_414_p2;
    end else begin
        delays_Array_V_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_15_ce0 = trunc_ln791_fu_410_p1;
    end else begin
        delays_Array_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_15_we0 = trunc_ln791_fu_410_p1;
    end else begin
        delays_Array_V_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_1_ce0 = trunc_ln791_fu_410_p1;
    end else begin
        delays_Array_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_1_we0 = trunc_ln791_fu_410_p1;
    end else begin
        delays_Array_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_2_ce0 = xor_ln114_fu_414_p2;
    end else begin
        delays_Array_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_2_we0 = xor_ln114_fu_414_p2;
    end else begin
        delays_Array_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_3_ce0 = trunc_ln791_fu_410_p1;
    end else begin
        delays_Array_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_3_we0 = trunc_ln791_fu_410_p1;
    end else begin
        delays_Array_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_4_ce0 = xor_ln114_fu_414_p2;
    end else begin
        delays_Array_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_4_we0 = xor_ln114_fu_414_p2;
    end else begin
        delays_Array_V_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_5_ce0 = trunc_ln791_fu_410_p1;
    end else begin
        delays_Array_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_5_we0 = trunc_ln791_fu_410_p1;
    end else begin
        delays_Array_V_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_6_ce0 = xor_ln114_fu_414_p2;
    end else begin
        delays_Array_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_6_we0 = xor_ln114_fu_414_p2;
    end else begin
        delays_Array_V_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_7_ce0 = trunc_ln791_fu_410_p1;
    end else begin
        delays_Array_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_7_we0 = trunc_ln791_fu_410_p1;
    end else begin
        delays_Array_V_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_8_ce0 = xor_ln114_fu_414_p2;
    end else begin
        delays_Array_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_8_we0 = xor_ln114_fu_414_p2;
    end else begin
        delays_Array_V_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_9_ce0 = trunc_ln791_fu_410_p1;
    end else begin
        delays_Array_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        delays_Array_V_9_we0 = trunc_ln791_fu_410_p1;
    end else begin
        delays_Array_V_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iqstream_0_V_V_blk_n = iqstream_0_V_V_empty_n;
    end else begin
        iqstream_0_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqstream_0_V_V_read = 1'b1;
    end else begin
        iqstream_0_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iqstream_1_V_V_blk_n = iqstream_1_V_V_empty_n;
    end else begin
        iqstream_1_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqstream_1_V_V_read = 1'b1;
    end else begin
        iqstream_1_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iqstream_2_V_V_blk_n = iqstream_2_V_V_empty_n;
    end else begin
        iqstream_2_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqstream_2_V_V_read = 1'b1;
    end else begin
        iqstream_2_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iqstream_3_V_V_blk_n = iqstream_3_V_V_empty_n;
    end else begin
        iqstream_3_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqstream_3_V_V_read = 1'b1;
    end else begin
        iqstream_3_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iqstream_4_V_V_blk_n = iqstream_4_V_V_empty_n;
    end else begin
        iqstream_4_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqstream_4_V_V_read = 1'b1;
    end else begin
        iqstream_4_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iqstream_5_V_V_blk_n = iqstream_5_V_V_empty_n;
    end else begin
        iqstream_5_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqstream_5_V_V_read = 1'b1;
    end else begin
        iqstream_5_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iqstream_6_V_V_blk_n = iqstream_6_V_V_empty_n;
    end else begin
        iqstream_6_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqstream_6_V_V_read = 1'b1;
    end else begin
        iqstream_6_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        iqstream_7_V_V_blk_n = iqstream_7_V_V_empty_n;
    end else begin
        iqstream_7_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iqstream_7_V_V_read = 1'b1;
    end else begin
        iqstream_7_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        lane_0_TDATA_blk_n = lane_0_TREADY_int;
    end else begin
        lane_0_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lane_0_TVALID_int = 1'b1;
    end else begin
        lane_0_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        lane_10_TDATA_blk_n = lane_10_TREADY_int;
    end else begin
        lane_10_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lane_10_TVALID_int = 1'b1;
    end else begin
        lane_10_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        lane_11_TDATA_blk_n = lane_11_TREADY_int;
    end else begin
        lane_11_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lane_11_TVALID_int = 1'b1;
    end else begin
        lane_11_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        lane_12_TDATA_blk_n = lane_12_TREADY_int;
    end else begin
        lane_12_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lane_12_TVALID_int = 1'b1;
    end else begin
        lane_12_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        lane_13_TDATA_blk_n = lane_13_TREADY_int;
    end else begin
        lane_13_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lane_13_TVALID_int = 1'b1;
    end else begin
        lane_13_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        lane_14_TDATA_blk_n = lane_14_TREADY_int;
    end else begin
        lane_14_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lane_14_TVALID_int = 1'b1;
    end else begin
        lane_14_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        lane_15_TDATA_blk_n = lane_15_TREADY_int;
    end else begin
        lane_15_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lane_15_TVALID_int = 1'b1;
    end else begin
        lane_15_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        lane_1_TDATA_blk_n = lane_1_TREADY_int;
    end else begin
        lane_1_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lane_1_TVALID_int = 1'b1;
    end else begin
        lane_1_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        lane_2_TDATA_blk_n = lane_2_TREADY_int;
    end else begin
        lane_2_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lane_2_TVALID_int = 1'b1;
    end else begin
        lane_2_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        lane_3_TDATA_blk_n = lane_3_TREADY_int;
    end else begin
        lane_3_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lane_3_TVALID_int = 1'b1;
    end else begin
        lane_3_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        lane_4_TDATA_blk_n = lane_4_TREADY_int;
    end else begin
        lane_4_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lane_4_TVALID_int = 1'b1;
    end else begin
        lane_4_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        lane_5_TDATA_blk_n = lane_5_TREADY_int;
    end else begin
        lane_5_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lane_5_TVALID_int = 1'b1;
    end else begin
        lane_5_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        lane_6_TDATA_blk_n = lane_6_TREADY_int;
    end else begin
        lane_6_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lane_6_TVALID_int = 1'b1;
    end else begin
        lane_6_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        lane_7_TDATA_blk_n = lane_7_TREADY_int;
    end else begin
        lane_7_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lane_7_TVALID_int = 1'b1;
    end else begin
        lane_7_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        lane_8_TDATA_blk_n = lane_8_TREADY_int;
    end else begin
        lane_8_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lane_8_TVALID_int = 1'b1;
    end else begin
        lane_8_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        lane_9_TDATA_blk_n = lane_9_TREADY_int;
    end else begin
        lane_9_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lane_9_TVALID_int = 1'b1;
    end else begin
        lane_9_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln700_fu_794_p2 = (8'd1 + cycle_V);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((iqstream_7_V_V_empty_n == 1'b0) | (iqstream_6_V_V_empty_n == 1'b0) | (iqstream_5_V_V_empty_n == 1'b0) | (iqstream_4_V_V_empty_n == 1'b0) | (ap_start == 1'b0) | (iqstream_3_V_V_empty_n == 1'b0) | (iqstream_2_V_V_empty_n == 1'b0) | (iqstream_1_V_V_empty_n == 1'b0) | (iqstream_0_V_V_empty_n == 1'b0) | (ap_done_reg == 1'b1))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_forward_lane_15_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_14_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_13_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_12_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_11_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_10_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_9_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_8_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_7_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_6_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_5_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_4_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_3_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_2_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_1_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_0_data_V_U_apdone_blk == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((iqstream_7_V_V_empty_n == 1'b0) | (iqstream_6_V_V_empty_n == 1'b0) | (iqstream_5_V_V_empty_n == 1'b0) | (iqstream_4_V_V_empty_n == 1'b0) | (ap_start == 1'b0) | (iqstream_3_V_V_empty_n == 1'b0) | (iqstream_2_V_V_empty_n == 1'b0) | (iqstream_1_V_V_empty_n == 1'b0) | (iqstream_0_V_V_empty_n == 1'b0) | (ap_done_reg == 1'b1))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_forward_lane_15_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_14_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_13_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_12_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_11_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_10_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_9_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_8_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_7_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_6_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_5_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_4_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_3_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_2_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_1_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_0_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((iqstream_7_V_V_empty_n == 1'b0) | (iqstream_6_V_V_empty_n == 1'b0) | (iqstream_5_V_V_empty_n == 1'b0) | (iqstream_4_V_V_empty_n == 1'b0) | (ap_start == 1'b0) | (iqstream_3_V_V_empty_n == 1'b0) | (iqstream_2_V_V_empty_n == 1'b0) | (iqstream_1_V_V_empty_n == 1'b0) | (iqstream_0_V_V_empty_n == 1'b0) | (ap_done_reg == 1'b1))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_forward_lane_15_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_14_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_13_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_12_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_11_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_10_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_9_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_8_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_7_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_6_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_5_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_4_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_3_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_2_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_1_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_0_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state2_io)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((iqstream_7_V_V_empty_n == 1'b0) | (iqstream_6_V_V_empty_n == 1'b0) | (iqstream_5_V_V_empty_n == 1'b0) | (iqstream_4_V_V_empty_n == 1'b0) | (ap_start == 1'b0) | (iqstream_3_V_V_empty_n == 1'b0) | (iqstream_2_V_V_empty_n == 1'b0) | (iqstream_1_V_V_empty_n == 1'b0) | (iqstream_0_V_V_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2_io = ((lane_15_TREADY_int == 1'b0) | (lane_14_TREADY_int == 1'b0) | (lane_13_TREADY_int == 1'b0) | (lane_12_TREADY_int == 1'b0) | (lane_11_TREADY_int == 1'b0) | (lane_10_TREADY_int == 1'b0) | (lane_9_TREADY_int == 1'b0) | (lane_8_TREADY_int == 1'b0) | (lane_7_TREADY_int == 1'b0) | (lane_6_TREADY_int == 1'b0) | (lane_5_TREADY_int == 1'b0) | (lane_4_TREADY_int == 1'b0) | (lane_3_TREADY_int == 1'b0) | (lane_2_TREADY_int == 1'b0) | (lane_1_TREADY_int == 1'b0) | (lane_0_TREADY_int == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((lane_15_TREADY_int == 1'b0) | (lane_14_TREADY_int == 1'b0) | (lane_13_TREADY_int == 1'b0) | (lane_12_TREADY_int == 1'b0) | (lane_11_TREADY_int == 1'b0) | (lane_10_TREADY_int == 1'b0) | (lane_9_TREADY_int == 1'b0) | (lane_8_TREADY_int == 1'b0) | (lane_7_TREADY_int == 1'b0) | (lane_6_TREADY_int == 1'b0) | (lane_5_TREADY_int == 1'b0) | (lane_4_TREADY_int == 1'b0) | (lane_3_TREADY_int == 1'b0) | (lane_2_TREADY_int == 1'b0) | (lane_1_TREADY_int == 1'b0) | (lane_0_TREADY_int == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((regslice_forward_lane_15_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_14_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_13_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_12_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_11_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_10_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_9_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_8_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_7_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_6_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_5_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_4_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_3_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_2_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_1_data_V_U_apdone_blk == 1'b1) | (regslice_forward_lane_0_data_V_U_apdone_blk == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign icmp_ln879_fu_441_p2 = ((cycle_V == 8'd255) ? 1'b1 : 1'b0);

assign lane_0_TVALID = regslice_forward_lane_0_data_V_U_vld_out;

assign lane_10_TVALID = regslice_forward_lane_10_data_V_U_vld_out;

assign lane_11_TDATA_int = ((trunc_ln791_fu_410_p1[0:0] === 1'b1) ? tmp_V_5_reg_846 : delays_Array_V_11_q0);

assign lane_11_TVALID = regslice_forward_lane_11_data_V_U_vld_out;

assign lane_12_TVALID = regslice_forward_lane_12_data_V_U_vld_out;

assign lane_13_TDATA_int = ((trunc_ln791_fu_410_p1[0:0] === 1'b1) ? tmp_V_6_reg_854 : delays_Array_V_13_q0);

assign lane_13_TVALID = regslice_forward_lane_13_data_V_U_vld_out;

assign lane_14_TVALID = regslice_forward_lane_14_data_V_U_vld_out;

assign lane_15_TDATA_int = ((trunc_ln791_fu_410_p1[0:0] === 1'b1) ? tmp_V_7_reg_862 : delays_Array_V_15_q0);

assign lane_15_TVALID = regslice_forward_lane_15_data_V_U_vld_out;

assign lane_1_TDATA_int = ((trunc_ln791_fu_410_p1[0:0] === 1'b1) ? tmp_V_reg_806 : delays_Array_V_1_q0);

assign lane_1_TVALID = regslice_forward_lane_1_data_V_U_vld_out;

assign lane_2_TVALID = regslice_forward_lane_2_data_V_U_vld_out;

assign lane_3_TDATA_int = ((trunc_ln791_fu_410_p1[0:0] === 1'b1) ? tmp_V_1_reg_814 : delays_Array_V_3_q0);

assign lane_3_TVALID = regslice_forward_lane_3_data_V_U_vld_out;

assign lane_4_TVALID = regslice_forward_lane_4_data_V_U_vld_out;

assign lane_5_TDATA_int = ((trunc_ln791_fu_410_p1[0:0] === 1'b1) ? tmp_V_2_reg_822 : delays_Array_V_5_q0);

assign lane_5_TVALID = regslice_forward_lane_5_data_V_U_vld_out;

assign lane_6_TVALID = regslice_forward_lane_6_data_V_U_vld_out;

assign lane_7_TDATA_int = ((trunc_ln791_fu_410_p1[0:0] === 1'b1) ? tmp_V_3_reg_830 : delays_Array_V_7_q0);

assign lane_7_TVALID = regslice_forward_lane_7_data_V_U_vld_out;

assign lane_8_TVALID = regslice_forward_lane_8_data_V_U_vld_out;

assign lane_9_TDATA_int = ((trunc_ln791_fu_410_p1[0:0] === 1'b1) ? tmp_V_4_reg_838 : delays_Array_V_9_q0);

assign lane_9_TVALID = regslice_forward_lane_9_data_V_U_vld_out;

assign select_ln21_10_fu_671_p3 = ((trunc_ln791_fu_410_p1[0:0] === 1'b1) ? delays_Array_V_10_q0 : tmp_V_5_reg_846);

assign select_ln21_12_fu_715_p3 = ((trunc_ln791_fu_410_p1[0:0] === 1'b1) ? delays_Array_V_12_q0 : tmp_V_6_reg_854);

assign select_ln21_14_fu_759_p3 = ((trunc_ln791_fu_410_p1[0:0] === 1'b1) ? delays_Array_V_14_q0 : tmp_V_7_reg_862);

assign select_ln21_2_fu_495_p3 = ((trunc_ln791_fu_410_p1[0:0] === 1'b1) ? delays_Array_V_2_q0 : tmp_V_1_reg_814);

assign select_ln21_4_fu_539_p3 = ((trunc_ln791_fu_410_p1[0:0] === 1'b1) ? delays_Array_V_4_q0 : tmp_V_2_reg_822);

assign select_ln21_6_fu_583_p3 = ((trunc_ln791_fu_410_p1[0:0] === 1'b1) ? delays_Array_V_6_q0 : tmp_V_3_reg_830);

assign select_ln21_8_fu_627_p3 = ((trunc_ln791_fu_410_p1[0:0] === 1'b1) ? delays_Array_V_8_q0 : tmp_V_4_reg_838);

assign select_ln21_fu_429_p3 = ((trunc_ln791_fu_410_p1[0:0] === 1'b1) ? delays_Array_V_0_q0 : tmp_V_reg_806);

assign trunc_ln791_fu_410_p1 = cycle_V[0:0];

assign xor_ln114_fu_414_p2 = (trunc_ln791_fu_410_p1 ^ 1'd1);

endmodule //process_lanes
