-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity adc2iq is
port (
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read9 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read10 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read11 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read12 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read13 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read14 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read15 : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of adc2iq is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal iq_0_V_write_assign_fu_134_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal iq_1_V_write_assign_fu_142_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal iq_2_V_write_assign_fu_150_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal iq_3_V_write_assign_fu_158_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal iq_4_V_write_assign_fu_166_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal iq_5_V_write_assign_fu_174_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal iq_6_V_write_assign_fu_182_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal iq_7_V_write_assign_fu_190_p3 : STD_LOGIC_VECTOR (31 downto 0);


begin



    ap_ready <= ap_const_logic_1;
    ap_return_0 <= iq_0_V_write_assign_fu_134_p3;
    ap_return_1 <= iq_1_V_write_assign_fu_142_p3;
    ap_return_2 <= iq_2_V_write_assign_fu_150_p3;
    ap_return_3 <= iq_3_V_write_assign_fu_158_p3;
    ap_return_4 <= iq_4_V_write_assign_fu_166_p3;
    ap_return_5 <= iq_5_V_write_assign_fu_174_p3;
    ap_return_6 <= iq_6_V_write_assign_fu_182_p3;
    ap_return_7 <= iq_7_V_write_assign_fu_190_p3;
    iq_0_V_write_assign_fu_134_p3 <= (p_read8 & p_read);
    iq_1_V_write_assign_fu_142_p3 <= (p_read9 & p_read1);
    iq_2_V_write_assign_fu_150_p3 <= (p_read10 & p_read2);
    iq_3_V_write_assign_fu_158_p3 <= (p_read11 & p_read3);
    iq_4_V_write_assign_fu_166_p3 <= (p_read12 & p_read4);
    iq_5_V_write_assign_fu_174_p3 <= (p_read13 & p_read5);
    iq_6_V_write_assign_fu_182_p3 <= (p_read14 & p_read6);
    iq_7_V_write_assign_fu_190_p3 <= (p_read15 & p_read7);
end behav;
