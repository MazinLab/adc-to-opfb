-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity adc2iq is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    iin_data_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    iin_data_TVALID : IN STD_LOGIC;
    iin_data_TREADY : OUT STD_LOGIC;
    qin_data_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    qin_data_TVALID : IN STD_LOGIC;
    qin_data_TREADY : OUT STD_LOGIC;
    iq_0_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    iq_0_V_V_full_n : IN STD_LOGIC;
    iq_0_V_V_write : OUT STD_LOGIC;
    iq_1_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    iq_1_V_V_full_n : IN STD_LOGIC;
    iq_1_V_V_write : OUT STD_LOGIC;
    iq_2_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    iq_2_V_V_full_n : IN STD_LOGIC;
    iq_2_V_V_write : OUT STD_LOGIC;
    iq_3_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    iq_3_V_V_full_n : IN STD_LOGIC;
    iq_3_V_V_write : OUT STD_LOGIC;
    iq_4_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    iq_4_V_V_full_n : IN STD_LOGIC;
    iq_4_V_V_write : OUT STD_LOGIC;
    iq_5_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    iq_5_V_V_full_n : IN STD_LOGIC;
    iq_5_V_V_write : OUT STD_LOGIC;
    iq_6_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    iq_6_V_V_full_n : IN STD_LOGIC;
    iq_6_V_V_write : OUT STD_LOGIC;
    iq_7_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    iq_7_V_V_full_n : IN STD_LOGIC;
    iq_7_V_V_write : OUT STD_LOGIC );
end;


architecture behav of adc2iq is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal iin_data_TDATA_blk_n : STD_LOGIC;
    signal qin_data_TDATA_blk_n : STD_LOGIC;
    signal iq_0_V_V_blk_n : STD_LOGIC;
    signal iq_1_V_V_blk_n : STD_LOGIC;
    signal iq_2_V_V_blk_n : STD_LOGIC;
    signal iq_3_V_V_blk_n : STD_LOGIC;
    signal iq_4_V_V_blk_n : STD_LOGIC;
    signal iq_5_V_V_blk_n : STD_LOGIC;
    signal iq_6_V_V_blk_n : STD_LOGIC;
    signal iq_7_V_V_blk_n : STD_LOGIC;
    signal ap_block_state1 : BOOLEAN;
    signal trunc_ln8_fu_218_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln7_fu_144_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_9_fu_222_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_148_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_s_fu_232_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_158_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_8_fu_242_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_168_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_10_fu_252_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_178_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_11_fu_262_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_188_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_12_fu_272_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_fu_198_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_13_fu_282_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_7_fu_208_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_reverse_iin_data_U_apdone_blk : STD_LOGIC;
    signal iin_data_TDATA_int : STD_LOGIC_VECTOR (127 downto 0);
    signal iin_data_TVALID_int : STD_LOGIC;
    signal iin_data_TREADY_int : STD_LOGIC;
    signal regslice_reverse_iin_data_U_ack_in : STD_LOGIC;
    signal regslice_reverse_qin_data_U_apdone_blk : STD_LOGIC;
    signal qin_data_TDATA_int : STD_LOGIC_VECTOR (127 downto 0);
    signal qin_data_TVALID_int : STD_LOGIC;
    signal qin_data_TREADY_int : STD_LOGIC;
    signal regslice_reverse_qin_data_U_ack_in : STD_LOGIC;

    component regslice_reverse IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_reverse_iin_data_U : component regslice_reverse
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => iin_data_TDATA,
        vld_in => iin_data_TVALID,
        ack_in => regslice_reverse_iin_data_U_ack_in,
        data_out => iin_data_TDATA_int,
        vld_out => iin_data_TVALID_int,
        ack_out => iin_data_TREADY_int,
        apdone_blk => regslice_reverse_iin_data_U_apdone_blk);

    regslice_reverse_qin_data_U : component regslice_reverse
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => qin_data_TDATA,
        vld_in => qin_data_TVALID,
        ack_in => regslice_reverse_qin_data_U_ack_in,
        data_out => qin_data_TDATA_int,
        vld_out => qin_data_TVALID_int,
        ack_out => qin_data_TREADY_int,
        apdone_blk => regslice_reverse_qin_data_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((iq_7_V_V_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (iq_6_V_V_full_n = ap_const_logic_0) or (iq_5_V_V_full_n = ap_const_logic_0) or (iq_4_V_V_full_n = ap_const_logic_0) or (iq_3_V_V_full_n = ap_const_logic_0) or (iq_2_V_V_full_n = ap_const_logic_0) or (iq_1_V_V_full_n = ap_const_logic_0) or (iq_0_V_V_full_n = ap_const_logic_0) or (qin_data_TVALID_int = ap_const_logic_0) or (iin_data_TVALID_int = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, iq_0_V_V_full_n, iq_1_V_V_full_n, iq_2_V_V_full_n, iq_3_V_V_full_n, iq_4_V_V_full_n, iq_5_V_V_full_n, iq_6_V_V_full_n, iq_7_V_V_full_n, iin_data_TVALID_int, qin_data_TVALID_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_block_state1_assign_proc : process(real_start, ap_done_reg, iq_0_V_V_full_n, iq_1_V_V_full_n, iq_2_V_V_full_n, iq_3_V_V_full_n, iq_4_V_V_full_n, iq_5_V_V_full_n, iq_6_V_V_full_n, iq_7_V_V_full_n, iin_data_TVALID_int, qin_data_TVALID_int)
    begin
                ap_block_state1 <= ((iq_7_V_V_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (iq_6_V_V_full_n = ap_const_logic_0) or (iq_5_V_V_full_n = ap_const_logic_0) or (iq_4_V_V_full_n = ap_const_logic_0) or (iq_3_V_V_full_n = ap_const_logic_0) or (iq_2_V_V_full_n = ap_const_logic_0) or (iq_1_V_V_full_n = ap_const_logic_0) or (iq_0_V_V_full_n = ap_const_logic_0) or (qin_data_TVALID_int = ap_const_logic_0) or (iin_data_TVALID_int = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iq_0_V_V_full_n, iq_1_V_V_full_n, iq_2_V_V_full_n, iq_3_V_V_full_n, iq_4_V_V_full_n, iq_5_V_V_full_n, iq_6_V_V_full_n, iq_7_V_V_full_n, iin_data_TVALID_int, qin_data_TVALID_int)
    begin
        if ((not(((iq_7_V_V_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (iq_6_V_V_full_n = ap_const_logic_0) or (iq_5_V_V_full_n = ap_const_logic_0) or (iq_4_V_V_full_n = ap_const_logic_0) or (iq_3_V_V_full_n = ap_const_logic_0) or (iq_2_V_V_full_n = ap_const_logic_0) or (iq_1_V_V_full_n = ap_const_logic_0) or (iq_0_V_V_full_n = ap_const_logic_0) or (qin_data_TVALID_int = ap_const_logic_0) or (iin_data_TVALID_int = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    iin_data_TDATA_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iin_data_TVALID_int)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            iin_data_TDATA_blk_n <= iin_data_TVALID_int;
        else 
            iin_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    iin_data_TREADY_assign_proc : process(iin_data_TVALID, regslice_reverse_iin_data_U_ack_in)
    begin
        if (((iin_data_TVALID = ap_const_logic_1) and (regslice_reverse_iin_data_U_ack_in = ap_const_logic_1))) then 
            iin_data_TREADY <= ap_const_logic_1;
        else 
            iin_data_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    iin_data_TREADY_int_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iq_0_V_V_full_n, iq_1_V_V_full_n, iq_2_V_V_full_n, iq_3_V_V_full_n, iq_4_V_V_full_n, iq_5_V_V_full_n, iq_6_V_V_full_n, iq_7_V_V_full_n, iin_data_TVALID_int, qin_data_TVALID_int)
    begin
        if ((not(((iq_7_V_V_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (iq_6_V_V_full_n = ap_const_logic_0) or (iq_5_V_V_full_n = ap_const_logic_0) or (iq_4_V_V_full_n = ap_const_logic_0) or (iq_3_V_V_full_n = ap_const_logic_0) or (iq_2_V_V_full_n = ap_const_logic_0) or (iq_1_V_V_full_n = ap_const_logic_0) or (iq_0_V_V_full_n = ap_const_logic_0) or (qin_data_TVALID_int = ap_const_logic_0) or (iin_data_TVALID_int = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            iin_data_TREADY_int <= ap_const_logic_1;
        else 
            iin_data_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;


    internal_ap_ready_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iq_0_V_V_full_n, iq_1_V_V_full_n, iq_2_V_V_full_n, iq_3_V_V_full_n, iq_4_V_V_full_n, iq_5_V_V_full_n, iq_6_V_V_full_n, iq_7_V_V_full_n, iin_data_TVALID_int, qin_data_TVALID_int)
    begin
        if ((not(((iq_7_V_V_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (iq_6_V_V_full_n = ap_const_logic_0) or (iq_5_V_V_full_n = ap_const_logic_0) or (iq_4_V_V_full_n = ap_const_logic_0) or (iq_3_V_V_full_n = ap_const_logic_0) or (iq_2_V_V_full_n = ap_const_logic_0) or (iq_1_V_V_full_n = ap_const_logic_0) or (iq_0_V_V_full_n = ap_const_logic_0) or (qin_data_TVALID_int = ap_const_logic_0) or (iin_data_TVALID_int = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    iq_0_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iq_0_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            iq_0_V_V_blk_n <= iq_0_V_V_full_n;
        else 
            iq_0_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iq_0_V_V_din <= (trunc_ln8_fu_218_p1 & trunc_ln7_fu_144_p1);

    iq_0_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iq_0_V_V_full_n, iq_1_V_V_full_n, iq_2_V_V_full_n, iq_3_V_V_full_n, iq_4_V_V_full_n, iq_5_V_V_full_n, iq_6_V_V_full_n, iq_7_V_V_full_n, iin_data_TVALID_int, qin_data_TVALID_int)
    begin
        if ((not(((iq_7_V_V_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (iq_6_V_V_full_n = ap_const_logic_0) or (iq_5_V_V_full_n = ap_const_logic_0) or (iq_4_V_V_full_n = ap_const_logic_0) or (iq_3_V_V_full_n = ap_const_logic_0) or (iq_2_V_V_full_n = ap_const_logic_0) or (iq_1_V_V_full_n = ap_const_logic_0) or (iq_0_V_V_full_n = ap_const_logic_0) or (qin_data_TVALID_int = ap_const_logic_0) or (iin_data_TVALID_int = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            iq_0_V_V_write <= ap_const_logic_1;
        else 
            iq_0_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    iq_1_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iq_1_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            iq_1_V_V_blk_n <= iq_1_V_V_full_n;
        else 
            iq_1_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iq_1_V_V_din <= (tmp_9_fu_222_p4 & tmp_1_fu_148_p4);

    iq_1_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iq_0_V_V_full_n, iq_1_V_V_full_n, iq_2_V_V_full_n, iq_3_V_V_full_n, iq_4_V_V_full_n, iq_5_V_V_full_n, iq_6_V_V_full_n, iq_7_V_V_full_n, iin_data_TVALID_int, qin_data_TVALID_int)
    begin
        if ((not(((iq_7_V_V_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (iq_6_V_V_full_n = ap_const_logic_0) or (iq_5_V_V_full_n = ap_const_logic_0) or (iq_4_V_V_full_n = ap_const_logic_0) or (iq_3_V_V_full_n = ap_const_logic_0) or (iq_2_V_V_full_n = ap_const_logic_0) or (iq_1_V_V_full_n = ap_const_logic_0) or (iq_0_V_V_full_n = ap_const_logic_0) or (qin_data_TVALID_int = ap_const_logic_0) or (iin_data_TVALID_int = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            iq_1_V_V_write <= ap_const_logic_1;
        else 
            iq_1_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    iq_2_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iq_2_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            iq_2_V_V_blk_n <= iq_2_V_V_full_n;
        else 
            iq_2_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iq_2_V_V_din <= (tmp_s_fu_232_p4 & tmp_2_fu_158_p4);

    iq_2_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iq_0_V_V_full_n, iq_1_V_V_full_n, iq_2_V_V_full_n, iq_3_V_V_full_n, iq_4_V_V_full_n, iq_5_V_V_full_n, iq_6_V_V_full_n, iq_7_V_V_full_n, iin_data_TVALID_int, qin_data_TVALID_int)
    begin
        if ((not(((iq_7_V_V_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (iq_6_V_V_full_n = ap_const_logic_0) or (iq_5_V_V_full_n = ap_const_logic_0) or (iq_4_V_V_full_n = ap_const_logic_0) or (iq_3_V_V_full_n = ap_const_logic_0) or (iq_2_V_V_full_n = ap_const_logic_0) or (iq_1_V_V_full_n = ap_const_logic_0) or (iq_0_V_V_full_n = ap_const_logic_0) or (qin_data_TVALID_int = ap_const_logic_0) or (iin_data_TVALID_int = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            iq_2_V_V_write <= ap_const_logic_1;
        else 
            iq_2_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    iq_3_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iq_3_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            iq_3_V_V_blk_n <= iq_3_V_V_full_n;
        else 
            iq_3_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iq_3_V_V_din <= (tmp_8_fu_242_p4 & tmp_3_fu_168_p4);

    iq_3_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iq_0_V_V_full_n, iq_1_V_V_full_n, iq_2_V_V_full_n, iq_3_V_V_full_n, iq_4_V_V_full_n, iq_5_V_V_full_n, iq_6_V_V_full_n, iq_7_V_V_full_n, iin_data_TVALID_int, qin_data_TVALID_int)
    begin
        if ((not(((iq_7_V_V_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (iq_6_V_V_full_n = ap_const_logic_0) or (iq_5_V_V_full_n = ap_const_logic_0) or (iq_4_V_V_full_n = ap_const_logic_0) or (iq_3_V_V_full_n = ap_const_logic_0) or (iq_2_V_V_full_n = ap_const_logic_0) or (iq_1_V_V_full_n = ap_const_logic_0) or (iq_0_V_V_full_n = ap_const_logic_0) or (qin_data_TVALID_int = ap_const_logic_0) or (iin_data_TVALID_int = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            iq_3_V_V_write <= ap_const_logic_1;
        else 
            iq_3_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    iq_4_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iq_4_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            iq_4_V_V_blk_n <= iq_4_V_V_full_n;
        else 
            iq_4_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iq_4_V_V_din <= (tmp_10_fu_252_p4 & tmp_4_fu_178_p4);

    iq_4_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iq_0_V_V_full_n, iq_1_V_V_full_n, iq_2_V_V_full_n, iq_3_V_V_full_n, iq_4_V_V_full_n, iq_5_V_V_full_n, iq_6_V_V_full_n, iq_7_V_V_full_n, iin_data_TVALID_int, qin_data_TVALID_int)
    begin
        if ((not(((iq_7_V_V_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (iq_6_V_V_full_n = ap_const_logic_0) or (iq_5_V_V_full_n = ap_const_logic_0) or (iq_4_V_V_full_n = ap_const_logic_0) or (iq_3_V_V_full_n = ap_const_logic_0) or (iq_2_V_V_full_n = ap_const_logic_0) or (iq_1_V_V_full_n = ap_const_logic_0) or (iq_0_V_V_full_n = ap_const_logic_0) or (qin_data_TVALID_int = ap_const_logic_0) or (iin_data_TVALID_int = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            iq_4_V_V_write <= ap_const_logic_1;
        else 
            iq_4_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    iq_5_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iq_5_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            iq_5_V_V_blk_n <= iq_5_V_V_full_n;
        else 
            iq_5_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iq_5_V_V_din <= (tmp_11_fu_262_p4 & tmp_5_fu_188_p4);

    iq_5_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iq_0_V_V_full_n, iq_1_V_V_full_n, iq_2_V_V_full_n, iq_3_V_V_full_n, iq_4_V_V_full_n, iq_5_V_V_full_n, iq_6_V_V_full_n, iq_7_V_V_full_n, iin_data_TVALID_int, qin_data_TVALID_int)
    begin
        if ((not(((iq_7_V_V_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (iq_6_V_V_full_n = ap_const_logic_0) or (iq_5_V_V_full_n = ap_const_logic_0) or (iq_4_V_V_full_n = ap_const_logic_0) or (iq_3_V_V_full_n = ap_const_logic_0) or (iq_2_V_V_full_n = ap_const_logic_0) or (iq_1_V_V_full_n = ap_const_logic_0) or (iq_0_V_V_full_n = ap_const_logic_0) or (qin_data_TVALID_int = ap_const_logic_0) or (iin_data_TVALID_int = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            iq_5_V_V_write <= ap_const_logic_1;
        else 
            iq_5_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    iq_6_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iq_6_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            iq_6_V_V_blk_n <= iq_6_V_V_full_n;
        else 
            iq_6_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iq_6_V_V_din <= (tmp_12_fu_272_p4 & tmp_6_fu_198_p4);

    iq_6_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iq_0_V_V_full_n, iq_1_V_V_full_n, iq_2_V_V_full_n, iq_3_V_V_full_n, iq_4_V_V_full_n, iq_5_V_V_full_n, iq_6_V_V_full_n, iq_7_V_V_full_n, iin_data_TVALID_int, qin_data_TVALID_int)
    begin
        if ((not(((iq_7_V_V_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (iq_6_V_V_full_n = ap_const_logic_0) or (iq_5_V_V_full_n = ap_const_logic_0) or (iq_4_V_V_full_n = ap_const_logic_0) or (iq_3_V_V_full_n = ap_const_logic_0) or (iq_2_V_V_full_n = ap_const_logic_0) or (iq_1_V_V_full_n = ap_const_logic_0) or (iq_0_V_V_full_n = ap_const_logic_0) or (qin_data_TVALID_int = ap_const_logic_0) or (iin_data_TVALID_int = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            iq_6_V_V_write <= ap_const_logic_1;
        else 
            iq_6_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    iq_7_V_V_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iq_7_V_V_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            iq_7_V_V_blk_n <= iq_7_V_V_full_n;
        else 
            iq_7_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    iq_7_V_V_din <= (tmp_13_fu_282_p4 & tmp_7_fu_208_p4);

    iq_7_V_V_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iq_0_V_V_full_n, iq_1_V_V_full_n, iq_2_V_V_full_n, iq_3_V_V_full_n, iq_4_V_V_full_n, iq_5_V_V_full_n, iq_6_V_V_full_n, iq_7_V_V_full_n, iin_data_TVALID_int, qin_data_TVALID_int)
    begin
        if ((not(((iq_7_V_V_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (iq_6_V_V_full_n = ap_const_logic_0) or (iq_5_V_V_full_n = ap_const_logic_0) or (iq_4_V_V_full_n = ap_const_logic_0) or (iq_3_V_V_full_n = ap_const_logic_0) or (iq_2_V_V_full_n = ap_const_logic_0) or (iq_1_V_V_full_n = ap_const_logic_0) or (iq_0_V_V_full_n = ap_const_logic_0) or (qin_data_TVALID_int = ap_const_logic_0) or (iin_data_TVALID_int = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            iq_7_V_V_write <= ap_const_logic_1;
        else 
            iq_7_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    qin_data_TDATA_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, qin_data_TVALID_int)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            qin_data_TDATA_blk_n <= qin_data_TVALID_int;
        else 
            qin_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    qin_data_TREADY_assign_proc : process(qin_data_TVALID, regslice_reverse_qin_data_U_ack_in)
    begin
        if (((qin_data_TVALID = ap_const_logic_1) and (regslice_reverse_qin_data_U_ack_in = ap_const_logic_1))) then 
            qin_data_TREADY <= ap_const_logic_1;
        else 
            qin_data_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    qin_data_TREADY_int_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, iq_0_V_V_full_n, iq_1_V_V_full_n, iq_2_V_V_full_n, iq_3_V_V_full_n, iq_4_V_V_full_n, iq_5_V_V_full_n, iq_6_V_V_full_n, iq_7_V_V_full_n, iin_data_TVALID_int, qin_data_TVALID_int)
    begin
        if ((not(((iq_7_V_V_full_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (iq_6_V_V_full_n = ap_const_logic_0) or (iq_5_V_V_full_n = ap_const_logic_0) or (iq_4_V_V_full_n = ap_const_logic_0) or (iq_3_V_V_full_n = ap_const_logic_0) or (iq_2_V_V_full_n = ap_const_logic_0) or (iq_1_V_V_full_n = ap_const_logic_0) or (iq_0_V_V_full_n = ap_const_logic_0) or (qin_data_TVALID_int = ap_const_logic_0) or (iin_data_TVALID_int = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            qin_data_TREADY_int <= ap_const_logic_1;
        else 
            qin_data_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_252_p4 <= qin_data_TDATA_int(79 downto 64);
    tmp_11_fu_262_p4 <= qin_data_TDATA_int(95 downto 80);
    tmp_12_fu_272_p4 <= qin_data_TDATA_int(111 downto 96);
    tmp_13_fu_282_p4 <= qin_data_TDATA_int(127 downto 112);
    tmp_1_fu_148_p4 <= iin_data_TDATA_int(31 downto 16);
    tmp_2_fu_158_p4 <= iin_data_TDATA_int(47 downto 32);
    tmp_3_fu_168_p4 <= iin_data_TDATA_int(63 downto 48);
    tmp_4_fu_178_p4 <= iin_data_TDATA_int(79 downto 64);
    tmp_5_fu_188_p4 <= iin_data_TDATA_int(95 downto 80);
    tmp_6_fu_198_p4 <= iin_data_TDATA_int(111 downto 96);
    tmp_7_fu_208_p4 <= iin_data_TDATA_int(127 downto 112);
    tmp_8_fu_242_p4 <= qin_data_TDATA_int(63 downto 48);
    tmp_9_fu_222_p4 <= qin_data_TDATA_int(31 downto 16);
    tmp_s_fu_232_p4 <= qin_data_TDATA_int(47 downto 32);
    trunc_ln7_fu_144_p1 <= iin_data_TDATA_int(16 - 1 downto 0);
    trunc_ln8_fu_218_p1 <= qin_data_TDATA_int(16 - 1 downto 0);
end behav;
